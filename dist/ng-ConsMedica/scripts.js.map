{"version":3,"sources":["webpack:///node_modules/chart.js/dist/Chart.js","webpack:///node_modules/hammerjs/hammer.min.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,2DAA2D,mBAAmB,gDAAgD,aAAa,KAAK,MAAM,gCAAgC,SAAS,qCAAqC,SAAS,mCAAmC,OAAO,KAAK,OAAO,eAAe,aAAa,0BAA0B,0BAA0B,gBAAgB,UAAU,UAAU,0CAA0C,wBAAwB,oBAAoB,8CAA8C,kCAAkC,YAAY,YAAY,mCAAmC,iBAAiB,gBAAgB,sBAAsB,oBAAoB,0CAA0C,YAAY,WAAW,YAAY,SAAS,GAAG;;AAEzyB,CAAC,GAAG;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,8BAA8B,EAAE;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,gBAAgB;AACliBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA,EAAE;;AAEF;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gBAAgB,kBAAkB;AAClC;AACA;;AAEA;AACA;AACA;;AAEA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF,MAAM;AACN,aAAa,kBAAkB;AAC/B;AACA;;AAEA;AACA,EAAE;AACF,MAAM;AACN;;AAEA,aAAa,kBAAkB;AAC/B;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,YAAY,kBAAkB;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,CAAC,EAAE,YAAY;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA,kBAAkB,OAAO,QAAQ;AACjC,kBAAkB,OAAO,QAAQ;AACjC,mBAAmB,OAAO,OAAO;AACjC,mBAAmB,OAAO,OAAO;AACjC,kBAAkB,QAAQ,OAAO;AACjC,kBAAkB,QAAQ,OAAO;AACjC;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,CAAC,GAAG;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA,uD;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB;;AAEnB,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,CAAC,EAAE,MAAM;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,GAAG;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC,EAAE,4TAA4T;AAC/T;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,CAAC,GAAG;AACJ;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC,GAAG;AACJ;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,CAAC,GAAG;AACJ;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,CAAC,GAAG;AACJ;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,CAAC,GAAG;AACJ;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,CAAC,GAAG;AACJ;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC,GAAG;AACJ;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kCAAkC;AAClC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,kBAAkB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kCAAkC;AAClC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,kBAAkB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA,CAAC,GAAG;AACJ;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;;AAEA,CAAC,GAAG;AACJ;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA,0DAA0D,UAAU;AACpE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,eAAe;AACf,gBAAgB;AAChB;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;;AAEJ;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,YAAY;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA,CAAC,GAAG;AACJ;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gCAAgC,QAAQ;AACxC;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ,qCAAqC,UAAU;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,UAAU;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,QAAQ;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA,CAAC,GAAG;AACJ;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA,0DAA0D,UAAU;AACpE;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,WAAW;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA,CAAC,GAAG;AACJ;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA,CAAC,GAAG;AACJ;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,gBAAgB;AAC3C,6BAA6B,WAAW;AACxC,sBAAsB,OAAO;AAC7B,kBAAkB,QAAQ;AAC1B;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB,8BAA8B;AACpD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC,GAAG;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,CAAC,GAAG;AACJ;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB;;AAEvB;AACA;;AAEA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB;AACnB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd,MAAM;AACN;AACA,cAAc;AACd,MAAM;AACN;AACA;;AAEA;AACA,gBAAgB,+DAA+D;AAC/E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,IAAI;;AAEJ;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kDAAkD,UAAU;AAC5D;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yEAAyE;AACzE;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,kDAAkD,gBAAgB;AAClE,GAAG;;AAEH;AACA,sDAAsD,gBAAgB;AACtE,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA,oDAAoD,gBAAgB;AACpE,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,oDAAoD,QAAQ;AAC5D;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;;AAEA;AACA,8CAA8C,UAAU;AACxD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ,GAAG;;AAEH;AACA;AACA;;AAEA,kCAAkC,QAAQ;AAC1C;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;AACF;;AAEA,CAAC,GAAG;AACJ;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA,IAAI;AACJ,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA,8BAA8B,QAAQ;AACtC;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,iCAAiC;AACjC;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,gBAAgB,SAAS;AACzB;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA,CAAC,GAAG;AACJ;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;;AAEJ;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,EAAE;;AAEF;;AAEA;;AAEA,CAAC,GAAG;AACJ;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA,IAAI;AACJ,eAAe,SAAS;AACxB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,UAAU;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,IAAI;AACJ,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,MAAM;AACN,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,IAAI;AACJ;AACA;;AAEA,IAAI;AACJ;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0BAA0B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,QAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB;AACnB;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,eAAe;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA,aAAa,mBAAmB;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,eAAe;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA,kBAAkB,WAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6BAA6B,UAAU;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ,kEAAkE,KAAK,KAAK;AAC5E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC,EAAE,MAAM;AACT;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,aAAa;AACzB,YAAY,MAAM;AAClB,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAkB,MAAM;AACxB,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;;AAEA,qCAAqC,UAAU;AAC/C;AACA;AACA;;AAEA;AACA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,eAAe;AACjC,qBAAqB,MAAM;AAC3B,aAAa,eAAe;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,kBAAkB,MAAM;AACxB,qBAAqB,MAAM;AAC3B,sBAAsB,QAAQ;AAC9B,2BAA2B,SAAS;AACpC,aAAa,eAAe;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B,gBAAgB,MAAM;AACtB,sBAAsB,oBAAoB;AAC1C,eAAe,gBAAgB;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B,gBAAgB,MAAM;AACtB,sBAAsB,oBAAoB;AAC1C,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B,gBAAgB,MAAM;AACtB,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B,gBAAgB,MAAM;AACtB,sBAAsB,oBAAoB;AAC1C,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B,gBAAgB,MAAM;AACtB,sBAAsB,oBAAoB;AAC1C,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B,gBAAgB,MAAM;AACtB,sBAAsB,oBAAoB;AAC1C,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC,GAAG;AACJ;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;;AAEf;AACA;AACA;AACA;AACA,mBAAmB,gCAAgC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,CAAC,GAAG;AACJ;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,cAAc;;AAEd;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC;AACvC,yCAAyC;;AAEzC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;;AAEA,CAAC,GAAG;AACJ;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,OAAO;AAC7B,qBAAqB,OAAO;AAC5B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wFAAwF;AACxF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,gCAAgC;AAChC;AACA,IAAI;AACJ;AACA,kCAAkC;AAClC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;;AAEN;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,8BAA8B;AAC9B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA,CAAC,GAAG;AACJ;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,GAAG;;AAEH;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,MAAM;AACnB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;;AAEA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,eAAe,MAAM,GAAG,kBAAkB;AAC1C;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;;AAEJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,OAAO;AACnB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,OAAO;AACnB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,OAAO;AACnB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,OAAO;AACnB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,OAAO;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;;AAEA,CAAC,GAAG;AACJ;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA,wFAAwF;AACxF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ,kCAAkC;AAClC;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,sHAAsH;AACtH;AACA,MAAM;AACN,+CAA+C;AAC/C;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA,gFAAgF;AAChF,6FAA6F;;AAE7F;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA,gDAAgD;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,kBAAkB;AAC9C;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;;AAEA;AACA,wDAAwD;AACxD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA,CAAC,GAAG;AACJ;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA,CAAC,GAAG;AACJ;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC,8BAA8B;AAC9D,wBAAwB,OAAO;AAC/B,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;AACA;;AAEA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,gCAAgC,8BAA8B;AAC9D,wBAAwB,OAAO;AAC/B,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B,oBAAoB,OAAO;AAC3B,oBAAoB,cAAc;AAClC,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wDAAwD;AACxD;AACA,KAAK;AACL,sBAAsB;AACtB;;AAEA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC,GAAG;AACJ;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;;AAEA,wFAAwF;AACxF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC;AAChC;AACA,IAAI;AACJ;AACA,kCAAkC;AAClC;;AAEA;AACA;;AAEA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oFAAoF;AACpF;;AAEA;AACA;AACA,0CAA0C;AAC1C,yCAAyC;AACzC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA,CAAC,GAAG;AACJ;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC;AAClC;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA,2CAA2C;AAC3C,2EAA2E;AAC3E,yDAAyD;AACzD,8CAA8C;AAC9C,kFAAkF;AAClF,wDAAwD;AACxD,+CAA+C;AAC/C,8EAA8E;;AAE9E;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA,aAAa;AACb,eAAe;AACf,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;;AAEJ;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,oCAAoC,SAAS;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,mCAAmC,SAAS;AAC5C;AACA,0CAA0C;;AAE1C;AACA,kDAAkD;AAClD;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,eAAe;AACrC,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,sBAAsB,gBAAgB;AACtC,2BAA2B,MAAM;AACjC,eAAe,MAAM;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC,GAAG;AACJ;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA,CAAC,GAAG;AACJ;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,uBAAuB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;;AAEA,CAAC,GAAG;AACJ;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;;AAEA,CAAC,GAAG;AACJ;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,wBAAwB;AACxC,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,OAAO;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA,WAAW;AACX,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;;AAEA,CAAC,GAAG;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,oBAAoB;AACpB,aAAa;AACb,aAAa;AACb,UAAU;AACV,WAAW;AACX,aAAa;AACb,YAAY;AACZ,gBAAgB;AAChB,eAAe;AACf,sBAAsB;AACtB,wBAAwB;AACxB,eAAe;;AAEf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;;AAEJ,mCAAmC;AACnC;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0DAA0D;AAC1D,mDAAmD;AACnD;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,CAAC,GAAG;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,uCAAuC;AACrF,aAAa,EAAE;AACf,aAAa,OAAO;AACpB,eAAe,yBAAyB;AACxC;AACA,+BAA+B;;AAE/B;AACA;AACA;AACA,aAAa,yBAAyB;AACtC,eAAe,QAAQ;AACvB;AACA,+BAA+B;;AAE/B;AACA;AACA,aAAa,MAAM;AACnB,aAAa,OAAO,cAAc,aAAa;AAC/C,aAAa,SAAS;AACtB,UAAU,aAAa;AACvB;AACA,iCAAiC;;AAEjC;AACA;AACA,aAAa,MAAM;AACnB,aAAa,OAAO,cAAc,aAAa;AAC/C,aAAa,SAAS;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;AAEA;AACA;;AAEA,CAAC,EAAE,QAAQ;AACX;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;;AAEF;;AAEA;;AAEA,CAAC,GAAG;AACJ;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA,OAAO;AACP;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;;AAEA;;AAEA,CAAC,GAAG;AACJ;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;;AAEA,CAAC,GAAG;AACJ;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,yDAAyD;AACzD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI,OAAO;AACX;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;;AAEA,CAAC,GAAG;AACJ;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,gBAAgB;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;;AAEA,CAAC,GAAG;AACJ;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,KAAK;AACL;AACA;AACA;;AAEA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,KAAK;AACL;AACA;AACA;;AAEA;AACA,IAAI;AACJ,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB,2BAA2B;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,mCAAmC;AAC1D;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,6BAA6B,0BAA0B;AACvD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;;AAEA,CAAC,EAAE,MAAM,EAAE,GAAG;AACd,CAAC,E;CC5+XD;AACA;AACA;AACA;AACA;AACA,mBAAmB,aAAa,kBAAkB,4BAA4B,kBAAkB,4CAA4C,kBAAkB,MAAM,iCAAiC,6BAA6B,WAAW,wBAAwB,wDAAwD,kBAAkB,8CAA8C,kBAAkB,uJAAuJ,UAAU,yEAAyE,yDAAyD,kBAAkB,oBAAoB,qEAAqE,gBAAgB,kBAAkB,6BAA6B,gBAAgB,6CAA6C,gBAAgB,iBAAiB,kBAAkB,mBAAmB,2BAA2B,EAAE,kBAAkB,mBAAmB,8BAA8B,EAAE,gBAAgB,KAAK,EAAE,EAAE,iBAAiB,eAAe,SAAS,gBAAgB,uBAAuB,cAAc,8BAA8B,kBAAkB,qCAAqC,YAAY,WAAW,EAAE,wCAAwC,IAAI,SAAS,cAAc,uCAAuC,kBAAkB,sBAAsB,WAAW,EAAE,qBAAqB,kCAAkC,oCAAoC,iBAAiB,cAAc,gBAAgB,gDAAgD,YAAY,EAAE,qCAAqC,IAAI,SAAS,aAAa,YAAY,cAAc,yBAAyB,wCAAwC,gBAAgB,WAAW,oHAAoH,sCAAsC,aAAa,cAAc,6BAA6B,wCAAwC,kBAAkB,wFAAwF,4CAA4C,qFAAqF,gBAAgB,wCAAwC,yGAAyG,2EAA2E,oIAAoI,uCAAuC,0RAA0R,gBAAgB,yDAAyD,gBAAgB,kCAAkC,kBAAkB,mBAAmB,oDAAoD,4BAA4B,kBAAkB,YAAY,gDAAgD,gBAAgB,0DAA0D,4CAA4C,uDAAuD,gEAAgE,4DAA4D,uDAAuD,cAAc,iBAAiB,oBAAoB,OAAO,oEAAoE,KAAK,OAAO,uEAAuE,cAAc,eAAe,gBAAgB,uCAAuC,oBAAoB,IAAI,qCAAqC,OAAO,qBAAqB,kBAAkB,OAAO,mBAAmB,gBAAgB,iDAAiD,kBAAkB,UAAU,wCAAwC,0BAA0B,kBAAkB,UAAU,wCAAwC,mCAAmC,gBAAgB,uCAAuC,gBAAgB,uCAAuC,aAAa,mEAAmE,aAAa,oGAAoG,aAAa,uEAAuE,gBAAgB,yCAAyC,2DAA2D,aAAa,kCAAkC,yBAAyB,gBAAgB,oCAAoC,8DAA8D,iDAAiD,0BAA0B,qBAAqB,iBAAiB,WAAW,2BAA2B,QAAQ,WAAW,2EAA2E,0DAA0D,aAAa,wBAAwB,2BAA2B,6GAA6G,gBAAgB,kGAAkG,cAAc,2BAA2B,qCAAqC,OAAO,yBAAyB,yBAAyB,oCAAoC,mBAAmB,qBAAqB,kBAAkB,cAAc,sDAAsD,0BAA0B,KAAK,8DAA8D,yBAAyB,SAAS,gBAAgB,2BAA2B,cAAc,qBAAqB,wBAAwB,0CAA0C,aAAa,gBAAgB,QAAQ,yBAAyB,uFAAuF,2CAA2C,IAAI,cAAc,kBAAkB,oBAAoB,gHAAgH,qBAAqB,cAAc,4DAA4D,cAAc,6DAA6D,gBAAgB,gBAAgB,oBAAoB,cAAc,wBAAwB,cAAc,mDAAmD,cAAc,yBAAyB,cAAc,0DAA0D,cAAc,yBAAyB,cAAc,yBAAyB,cAAc,qGAAqG,iBAAiB,cAAc,+DAA+D,iBAAiB,kBAAkB,kBAAkB,uEAAuE,gBAAgB,wCAAwC,4IAA4I,+BAA+B,yDAAyD,OAAO,iBAAiB,gBAAgB,YAAY,MAAM,mCAAmC,4FAA4F,sBAAsB,GAAG,iBAAiB,6BAA6B,2DAA2D,0HAA0H,gDAAgD,qFAAqF,wBAAwB,mBAAmB,KAAK,mBAAmB,mEAAmE,SAAS,eAAe,yBAAyB,6BAA6B,WAAW,6CAA6C,SAAS,8CAA8C,kBAAkB,+TAA+T,aAAa,oBAAoB,iBAAiB,2KAA2K,oBAAoB,6KAA6K,QAAQ,qCAAqC,uCAAuC,OAAO,oBAAoB,iBAAiB,qIAAqI,2DAA2D,IAAI,EAAE,QAAQ,0EAA0E,KAAK,oBAAoB,2DAA2D,8GAA8G,oBAAoB,gJAAgJ,mHAAmH,wDAAwD,qBAAqB,EAAE,QAAQ,sDAAsD,gEAAgE,OAAO,oBAAoB,iBAAiB,2CAA2C,uBAAuB,wFAAwF,6DAA6D,IAAI,EAAE,QAAQ,sDAAsD,gDAAgD,OAAO,oBAAoB,oCAAoC,iCAAiC,6DAA6D,GAAG,EAAE,kBAAkB,OAAO,wBAAwB,4CAA4C,sEAAsE,sBAAsB,iCAAiC,sBAAsB,oBAAoB,2CAA2C,EAAE,2HAA2H,aAAa,gBAAgB,wIAAwI,mBAAmB,2CAA2C,oBAAoB,SAAS,8CAA8C,0DAA0D,iBAAiB,6BAA6B,qCAAqC,iEAAiE,4EAA4E,MAAM,6DAA6D,kBAAkB,iEAAiE,wBAAwB,uDAAuD,0CAA0C,aAAa,WAAW,iBAAiB,+EAA+E,2BAA2B,yCAAyC,wBAAwB,mEAAmE,+BAA+B,4FAA4F,4BAA4B,0CAA0C,uBAAuB,wEAAwE,gCAAgC,8CAA8C,YAAY,4BAA4B,+CAA+C,+BAA+B,iCAAiC,8BAA8B,gCAAgC,kBAAkB,cAAc,oBAAoB,wBAAwB,wHAAwH,qBAAqB,uDAAuD,oBAAoB,YAAY,0BAA0B,EAAE,iDAAiD,IAAI,SAAS,uBAAuB,WAAW,IAAI,8LAA8L,sBAAsB,4BAA4B,oBAAoB,SAAS,UAAU,WAAW,sBAAsB,4BAA4B,oCAAoC,qBAAqB,8DAA8D,0DAA0D,WAAW,UAAU,iDAAiD,2BAA2B,kCAAkC,2CAA2C,2BAA2B,yEAAyE,uMAAuM,sBAAsB,oGAAoG,kBAAkB,kCAAkC,qBAAqB,2EAA2E,WAAW,UAAU,qCAAqC,2BAA2B,WAAW,sBAAsB,sGAAsG,kBAAkB,gBAAgB,2BAA2B,uCAAuC,+BAA+B,UAAU,UAAU,8CAA8C,2BAA2B,WAAW,qBAAqB,kGAAkG,8DAA8D,6DAA6D,6BAA6B,cAAc,iCAAiC,UAAU,kBAAkB,0BAA0B,kBAAkB,kKAAkK,WAAW,UAAU,sCAAsC,2BAA2B,WAAW,sBAAsB,wGAAwG,WAAW,UAAU,kEAAkE,2BAA2B,8CAA8C,sBAAsB,+BAA+B,yQAAyQ,kBAAkB,2BAA2B,sFAAsF,UAAU,UAAU,gFAAgF,2BAA2B,WAAW,qBAAqB,kGAAkG,yEAAyE,YAAY,6CAA6C,+GAA+G,2FAA2F,wBAAwB,oEAAoE,6BAA6B,yBAAyB,UAAU,wBAAwB,gCAAgC,cAAc,gCAAgC,kBAAkB,0BAA0B,iBAAiB,qGAAqG,kCAAkC,oFAAoF,UAAU,OAAO,UAAU,kBAAkB,aAAa,OAAO,aAAa,sBAAsB,yBAAyB,0BAA0B,mIAAmI,cAAc,cAAc,gBAAgB,gKAAgK,kBAAkB,6BAA6B,uBAAuB,mBAAmB,eAAe,oCAAoC,2CAA2C,8CAA8C,YAAY,WAAW,oIAAoI,iBAAiB,2BAA2B,+BAA+B,WAAW,yCAAyC,YAAY,iBAAiB,+BAA+B,gCAAgC,6FAA6F,oBAAoB,kCAAkC,kBAAkB,gCAAgC,kDAAkD,YAAY,kBAAkB,iBAAiB,oBAAoB,0BAA0B,2BAA2B,QAAQ,mBAAmB,UAAU,oBAAoB,0BAA0B,6CAA6C,QAAQ,oBAAoB,gCAAgC,iDAAiD,gBAAgB,qCAAqC,6BAA6B,YAAY,WAAW,cAAc,oBAAoB,0CAA0C,gBAAgB,yCAAyC,QAAQ,6lBAA6lB,EAAE,gEAAgE,qEAAqE,UAAU,uEAAuE;AAC1koB,sC","file":"scripts.js","sourcesContent":["/*!\r\n * Chart.js\r\n * http://chartjs.org/\r\n * Version: 2.5.0\r\n *\r\n * Copyright 2017 Nick Downie\r\n * Released under the MIT license\r\n * https://github.com/chartjs/Chart.js/blob/master/LICENSE.md\r\n */\r\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Chart = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\r\n\r\n},{}],2:[function(require,module,exports){\r\n/* MIT license */\r\nvar colorNames = require(6);\r\n\r\nmodule.exports = {\r\n   getRgba: getRgba,\r\n   getHsla: getHsla,\r\n   getRgb: getRgb,\r\n   getHsl: getHsl,\r\n   getHwb: getHwb,\r\n   getAlpha: getAlpha,\r\n\r\n   hexString: hexString,\r\n   rgbString: rgbString,\r\n   rgbaString: rgbaString,\r\n   percentString: percentString,\r\n   percentaString: percentaString,\r\n   hslString: hslString,\r\n   hslaString: hslaString,\r\n   hwbString: hwbString,\r\n   keyword: keyword\r\n}\r\n\r\nfunction getRgba(string) {\r\n   if (!string) {\r\n      return;\r\n   }\r\n   var abbr =  /^#([a-fA-F0-9]{3})$/,\r\n       hex =  /^#([a-fA-F0-9]{6})$/,\r\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\r\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\r\n       keyword = /(\\w+)/;\r\n\r\n   var rgb = [0, 0, 0],\r\n       a = 1,\r\n       match = string.match(abbr);\r\n   if (match) {\r\n      match = match[1];\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = parseInt(match[i] + match[i], 16);\r\n      }\r\n   }\r\n   else if (match = string.match(hex)) {\r\n      match = match[1];\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\r\n      }\r\n   }\r\n   else if (match = string.match(rgba)) {\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = parseInt(match[i + 1]);\r\n      }\r\n      a = parseFloat(match[4]);\r\n   }\r\n   else if (match = string.match(per)) {\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\r\n      }\r\n      a = parseFloat(match[4]);\r\n   }\r\n   else if (match = string.match(keyword)) {\r\n      if (match[1] == \"transparent\") {\r\n         return [0, 0, 0, 0];\r\n      }\r\n      rgb = colorNames[match[1]];\r\n      if (!rgb) {\r\n         return;\r\n      }\r\n   }\r\n\r\n   for (var i = 0; i < rgb.length; i++) {\r\n      rgb[i] = scale(rgb[i], 0, 255);\r\n   }\r\n   if (!a && a != 0) {\r\n      a = 1;\r\n   }\r\n   else {\r\n      a = scale(a, 0, 1);\r\n   }\r\n   rgb[3] = a;\r\n   return rgb;\r\n}\r\n\r\nfunction getHsla(string) {\r\n   if (!string) {\r\n      return;\r\n   }\r\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n   var match = string.match(hsl);\r\n   if (match) {\r\n      var alpha = parseFloat(match[4]);\r\n      var h = scale(parseInt(match[1]), 0, 360),\r\n          s = scale(parseFloat(match[2]), 0, 100),\r\n          l = scale(parseFloat(match[3]), 0, 100),\r\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n      return [h, s, l, a];\r\n   }\r\n}\r\n\r\nfunction getHwb(string) {\r\n   if (!string) {\r\n      return;\r\n   }\r\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n   var match = string.match(hwb);\r\n   if (match) {\r\n    var alpha = parseFloat(match[4]);\r\n      var h = scale(parseInt(match[1]), 0, 360),\r\n          w = scale(parseFloat(match[2]), 0, 100),\r\n          b = scale(parseFloat(match[3]), 0, 100),\r\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n      return [h, w, b, a];\r\n   }\r\n}\r\n\r\nfunction getRgb(string) {\r\n   var rgba = getRgba(string);\r\n   return rgba && rgba.slice(0, 3);\r\n}\r\n\r\nfunction getHsl(string) {\r\n  var hsla = getHsla(string);\r\n  return hsla && hsla.slice(0, 3);\r\n}\r\n\r\nfunction getAlpha(string) {\r\n   var vals = getRgba(string);\r\n   if (vals) {\r\n      return vals[3];\r\n   }\r\n   else if (vals = getHsla(string)) {\r\n      return vals[3];\r\n   }\r\n   else if (vals = getHwb(string)) {\r\n      return vals[3];\r\n   }\r\n}\r\n\r\n// generators\r\nfunction hexString(rgb) {\r\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\r\n              + hexDouble(rgb[2]);\r\n}\r\n\r\nfunction rgbString(rgba, alpha) {\r\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n      return rgbaString(rgba, alpha);\r\n   }\r\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\r\n}\r\n\r\nfunction rgbaString(rgba, alpha) {\r\n   if (alpha === undefined) {\r\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\r\n   }\r\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\r\n           + \", \" + alpha + \")\";\r\n}\r\n\r\nfunction percentString(rgba, alpha) {\r\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n      return percentaString(rgba, alpha);\r\n   }\r\n   var r = Math.round(rgba[0]/255 * 100),\r\n       g = Math.round(rgba[1]/255 * 100),\r\n       b = Math.round(rgba[2]/255 * 100);\r\n\r\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\r\n}\r\n\r\nfunction percentaString(rgba, alpha) {\r\n   var r = Math.round(rgba[0]/255 * 100),\r\n       g = Math.round(rgba[1]/255 * 100),\r\n       b = Math.round(rgba[2]/255 * 100);\r\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\r\n}\r\n\r\nfunction hslString(hsla, alpha) {\r\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\r\n      return hslaString(hsla, alpha);\r\n   }\r\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\r\n}\r\n\r\nfunction hslaString(hsla, alpha) {\r\n   if (alpha === undefined) {\r\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\r\n   }\r\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\r\n           + alpha + \")\";\r\n}\r\n\r\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\r\n// (hwb have alpha optional & 1 is default value)\r\nfunction hwbString(hwb, alpha) {\r\n   if (alpha === undefined) {\r\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\r\n   }\r\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\r\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\r\n}\r\n\r\nfunction keyword(rgb) {\r\n  return reverseNames[rgb.slice(0, 3)];\r\n}\r\n\r\n// helpers\r\nfunction scale(num, min, max) {\r\n   return Math.min(Math.max(min, num), max);\r\n}\r\n\r\nfunction hexDouble(num) {\r\n  var str = num.toString(16).toUpperCase();\r\n  return (str.length < 2) ? \"0\" + str : str;\r\n}\r\n\r\n\r\n//create a list of reverse color names\r\nvar reverseNames = {};\r\nfor (var name in colorNames) {\r\n   reverseNames[colorNames[name]] = name;\r\n}\r\n\r\n},{\"6\":6}],3:[function(require,module,exports){\r\n/* MIT license */\r\nvar convert = require(5);\r\nvar string = require(2);\r\n\r\nvar Color = function (obj) {\r\n\tif (obj instanceof Color) {\r\n\t\treturn obj;\r\n\t}\r\n\tif (!(this instanceof Color)) {\r\n\t\treturn new Color(obj);\r\n\t}\r\n\r\n\tthis.values = {\r\n\t\trgb: [0, 0, 0],\r\n\t\thsl: [0, 0, 0],\r\n\t\thsv: [0, 0, 0],\r\n\t\thwb: [0, 0, 0],\r\n\t\tcmyk: [0, 0, 0, 0],\r\n\t\talpha: 1\r\n\t};\r\n\r\n\t// parse Color() argument\r\n\tvar vals;\r\n\tif (typeof obj === 'string') {\r\n\t\tvals = string.getRgba(obj);\r\n\t\tif (vals) {\r\n\t\t\tthis.setValues('rgb', vals);\r\n\t\t} else if (vals = string.getHsla(obj)) {\r\n\t\t\tthis.setValues('hsl', vals);\r\n\t\t} else if (vals = string.getHwb(obj)) {\r\n\t\t\tthis.setValues('hwb', vals);\r\n\t\t} else {\r\n\t\t\tthrow new Error('Unable to parse color from string \"' + obj + '\"');\r\n\t\t}\r\n\t} else if (typeof obj === 'object') {\r\n\t\tvals = obj;\r\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\r\n\t\t\tthis.setValues('rgb', vals);\r\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\r\n\t\t\tthis.setValues('hsl', vals);\r\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\r\n\t\t\tthis.setValues('hsv', vals);\r\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\r\n\t\t\tthis.setValues('hwb', vals);\r\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\r\n\t\t\tthis.setValues('cmyk', vals);\r\n\t\t} else {\r\n\t\t\tthrow new Error('Unable to parse color from object ' + JSON.stringify(obj));\r\n\t\t}\r\n\t}\r\n};\r\n\r\nColor.prototype = {\r\n\trgb: function () {\r\n\t\treturn this.setSpace('rgb', arguments);\r\n\t},\r\n\thsl: function () {\r\n\t\treturn this.setSpace('hsl', arguments);\r\n\t},\r\n\thsv: function () {\r\n\t\treturn this.setSpace('hsv', arguments);\r\n\t},\r\n\thwb: function () {\r\n\t\treturn this.setSpace('hwb', arguments);\r\n\t},\r\n\tcmyk: function () {\r\n\t\treturn this.setSpace('cmyk', arguments);\r\n\t},\r\n\r\n\trgbArray: function () {\r\n\t\treturn this.values.rgb;\r\n\t},\r\n\thslArray: function () {\r\n\t\treturn this.values.hsl;\r\n\t},\r\n\thsvArray: function () {\r\n\t\treturn this.values.hsv;\r\n\t},\r\n\thwbArray: function () {\r\n\t\tvar values = this.values;\r\n\t\tif (values.alpha !== 1) {\r\n\t\t\treturn values.hwb.concat([values.alpha]);\r\n\t\t}\r\n\t\treturn values.hwb;\r\n\t},\r\n\tcmykArray: function () {\r\n\t\treturn this.values.cmyk;\r\n\t},\r\n\trgbaArray: function () {\r\n\t\tvar values = this.values;\r\n\t\treturn values.rgb.concat([values.alpha]);\r\n\t},\r\n\thslaArray: function () {\r\n\t\tvar values = this.values;\r\n\t\treturn values.hsl.concat([values.alpha]);\r\n\t},\r\n\talpha: function (val) {\r\n\t\tif (val === undefined) {\r\n\t\t\treturn this.values.alpha;\r\n\t\t}\r\n\t\tthis.setValues('alpha', val);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tred: function (val) {\r\n\t\treturn this.setChannel('rgb', 0, val);\r\n\t},\r\n\tgreen: function (val) {\r\n\t\treturn this.setChannel('rgb', 1, val);\r\n\t},\r\n\tblue: function (val) {\r\n\t\treturn this.setChannel('rgb', 2, val);\r\n\t},\r\n\thue: function (val) {\r\n\t\tif (val) {\r\n\t\t\tval %= 360;\r\n\t\t\tval = val < 0 ? 360 + val : val;\r\n\t\t}\r\n\t\treturn this.setChannel('hsl', 0, val);\r\n\t},\r\n\tsaturation: function (val) {\r\n\t\treturn this.setChannel('hsl', 1, val);\r\n\t},\r\n\tlightness: function (val) {\r\n\t\treturn this.setChannel('hsl', 2, val);\r\n\t},\r\n\tsaturationv: function (val) {\r\n\t\treturn this.setChannel('hsv', 1, val);\r\n\t},\r\n\twhiteness: function (val) {\r\n\t\treturn this.setChannel('hwb', 1, val);\r\n\t},\r\n\tblackness: function (val) {\r\n\t\treturn this.setChannel('hwb', 2, val);\r\n\t},\r\n\tvalue: function (val) {\r\n\t\treturn this.setChannel('hsv', 2, val);\r\n\t},\r\n\tcyan: function (val) {\r\n\t\treturn this.setChannel('cmyk', 0, val);\r\n\t},\r\n\tmagenta: function (val) {\r\n\t\treturn this.setChannel('cmyk', 1, val);\r\n\t},\r\n\tyellow: function (val) {\r\n\t\treturn this.setChannel('cmyk', 2, val);\r\n\t},\r\n\tblack: function (val) {\r\n\t\treturn this.setChannel('cmyk', 3, val);\r\n\t},\r\n\r\n\thexString: function () {\r\n\t\treturn string.hexString(this.values.rgb);\r\n\t},\r\n\trgbString: function () {\r\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\r\n\t},\r\n\trgbaString: function () {\r\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\r\n\t},\r\n\tpercentString: function () {\r\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\r\n\t},\r\n\thslString: function () {\r\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\r\n\t},\r\n\thslaString: function () {\r\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\r\n\t},\r\n\thwbString: function () {\r\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\r\n\t},\r\n\tkeyword: function () {\r\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\r\n\t},\r\n\r\n\trgbNumber: function () {\r\n\t\tvar rgb = this.values.rgb;\r\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\r\n\t},\r\n\r\n\tluminosity: function () {\r\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\r\n\t\tvar rgb = this.values.rgb;\r\n\t\tvar lum = [];\r\n\t\tfor (var i = 0; i < rgb.length; i++) {\r\n\t\t\tvar chan = rgb[i] / 255;\r\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\r\n\t\t}\r\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\r\n\t},\r\n\r\n\tcontrast: function (color2) {\r\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n\t\tvar lum1 = this.luminosity();\r\n\t\tvar lum2 = color2.luminosity();\r\n\t\tif (lum1 > lum2) {\r\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\r\n\t\t}\r\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\r\n\t},\r\n\r\n\tlevel: function (color2) {\r\n\t\tvar contrastRatio = this.contrast(color2);\r\n\t\tif (contrastRatio >= 7.1) {\r\n\t\t\treturn 'AAA';\r\n\t\t}\r\n\r\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\r\n\t},\r\n\r\n\tdark: function () {\r\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\r\n\t\tvar rgb = this.values.rgb;\r\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\r\n\t\treturn yiq < 128;\r\n\t},\r\n\r\n\tlight: function () {\r\n\t\treturn !this.dark();\r\n\t},\r\n\r\n\tnegate: function () {\r\n\t\tvar rgb = [];\r\n\t\tfor (var i = 0; i < 3; i++) {\r\n\t\t\trgb[i] = 255 - this.values.rgb[i];\r\n\t\t}\r\n\t\tthis.setValues('rgb', rgb);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tlighten: function (ratio) {\r\n\t\tvar hsl = this.values.hsl;\r\n\t\thsl[2] += hsl[2] * ratio;\r\n\t\tthis.setValues('hsl', hsl);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tdarken: function (ratio) {\r\n\t\tvar hsl = this.values.hsl;\r\n\t\thsl[2] -= hsl[2] * ratio;\r\n\t\tthis.setValues('hsl', hsl);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tsaturate: function (ratio) {\r\n\t\tvar hsl = this.values.hsl;\r\n\t\thsl[1] += hsl[1] * ratio;\r\n\t\tthis.setValues('hsl', hsl);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tdesaturate: function (ratio) {\r\n\t\tvar hsl = this.values.hsl;\r\n\t\thsl[1] -= hsl[1] * ratio;\r\n\t\tthis.setValues('hsl', hsl);\r\n\t\treturn this;\r\n\t},\r\n\r\n\twhiten: function (ratio) {\r\n\t\tvar hwb = this.values.hwb;\r\n\t\thwb[1] += hwb[1] * ratio;\r\n\t\tthis.setValues('hwb', hwb);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tblacken: function (ratio) {\r\n\t\tvar hwb = this.values.hwb;\r\n\t\thwb[2] += hwb[2] * ratio;\r\n\t\tthis.setValues('hwb', hwb);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tgreyscale: function () {\r\n\t\tvar rgb = this.values.rgb;\r\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\r\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\r\n\t\tthis.setValues('rgb', [val, val, val]);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tclearer: function (ratio) {\r\n\t\tvar alpha = this.values.alpha;\r\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\r\n\t\treturn this;\r\n\t},\r\n\r\n\topaquer: function (ratio) {\r\n\t\tvar alpha = this.values.alpha;\r\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\r\n\t\treturn this;\r\n\t},\r\n\r\n\trotate: function (degrees) {\r\n\t\tvar hsl = this.values.hsl;\r\n\t\tvar hue = (hsl[0] + degrees) % 360;\r\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\r\n\t\tthis.setValues('hsl', hsl);\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Ported from sass implementation in C\r\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\r\n\t */\r\n\tmix: function (mixinColor, weight) {\r\n\t\tvar color1 = this;\r\n\t\tvar color2 = mixinColor;\r\n\t\tvar p = weight === undefined ? 0.5 : weight;\r\n\r\n\t\tvar w = 2 * p - 1;\r\n\t\tvar a = color1.alpha() - color2.alpha();\r\n\r\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n\t\tvar w2 = 1 - w1;\r\n\r\n\t\treturn this\r\n\t\t\t.rgb(\r\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\r\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\r\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\r\n\t\t\t)\r\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\t\treturn this.rgb();\r\n\t},\r\n\r\n\tclone: function () {\r\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\r\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\r\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\r\n\t\t// except 'alpha' which is a number.\r\n\t\tvar result = new Color();\r\n\t\tvar source = this.values;\r\n\t\tvar target = result.values;\r\n\t\tvar value, type;\r\n\r\n\t\tfor (var prop in source) {\r\n\t\t\tif (source.hasOwnProperty(prop)) {\r\n\t\t\t\tvalue = source[prop];\r\n\t\t\t\ttype = ({}).toString.call(value);\r\n\t\t\t\tif (type === '[object Array]') {\r\n\t\t\t\t\ttarget[prop] = value.slice(0);\r\n\t\t\t\t} else if (type === '[object Number]') {\r\n\t\t\t\t\ttarget[prop] = value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error('unexpected color value:', value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n};\r\n\r\nColor.prototype.spaces = {\r\n\trgb: ['red', 'green', 'blue'],\r\n\thsl: ['hue', 'saturation', 'lightness'],\r\n\thsv: ['hue', 'saturation', 'value'],\r\n\thwb: ['hue', 'whiteness', 'blackness'],\r\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\r\n};\r\n\r\nColor.prototype.maxes = {\r\n\trgb: [255, 255, 255],\r\n\thsl: [360, 100, 100],\r\n\thsv: [360, 100, 100],\r\n\thwb: [360, 100, 100],\r\n\tcmyk: [100, 100, 100, 100]\r\n};\r\n\r\nColor.prototype.getValues = function (space) {\r\n\tvar values = this.values;\r\n\tvar vals = {};\r\n\r\n\tfor (var i = 0; i < space.length; i++) {\r\n\t\tvals[space.charAt(i)] = values[space][i];\r\n\t}\r\n\r\n\tif (values.alpha !== 1) {\r\n\t\tvals.a = values.alpha;\r\n\t}\r\n\r\n\t// {r: 255, g: 255, b: 255, a: 0.4}\r\n\treturn vals;\r\n};\r\n\r\nColor.prototype.setValues = function (space, vals) {\r\n\tvar values = this.values;\r\n\tvar spaces = this.spaces;\r\n\tvar maxes = this.maxes;\r\n\tvar alpha = 1;\r\n\tvar i;\r\n\r\n\tif (space === 'alpha') {\r\n\t\talpha = vals;\r\n\t} else if (vals.length) {\r\n\t\t// [10, 10, 10]\r\n\t\tvalues[space] = vals.slice(0, space.length);\r\n\t\talpha = vals[space.length];\r\n\t} else if (vals[space.charAt(0)] !== undefined) {\r\n\t\t// {r: 10, g: 10, b: 10}\r\n\t\tfor (i = 0; i < space.length; i++) {\r\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\r\n\t\t}\r\n\r\n\t\talpha = vals.a;\r\n\t} else if (vals[spaces[space][0]] !== undefined) {\r\n\t\t// {red: 10, green: 10, blue: 10}\r\n\t\tvar chans = spaces[space];\r\n\r\n\t\tfor (i = 0; i < space.length; i++) {\r\n\t\t\tvalues[space][i] = vals[chans[i]];\r\n\t\t}\r\n\r\n\t\talpha = vals.alpha;\r\n\t}\r\n\r\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\r\n\r\n\tif (space === 'alpha') {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tvar capped;\r\n\r\n\t// cap values of the space prior converting all values\r\n\tfor (i = 0; i < space.length; i++) {\r\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\r\n\t\tvalues[space][i] = Math.round(capped);\r\n\t}\r\n\r\n\t// convert to all the other color spaces\r\n\tfor (var sname in spaces) {\r\n\t\tif (sname !== space) {\r\n\t\t\tvalues[sname] = convert[space][sname](values[space]);\r\n\t\t}\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\nColor.prototype.setSpace = function (space, args) {\r\n\tvar vals = args[0];\r\n\r\n\tif (vals === undefined) {\r\n\t\t// color.rgb()\r\n\t\treturn this.getValues(space);\r\n\t}\r\n\r\n\t// color.rgb(10, 10, 10)\r\n\tif (typeof vals === 'number') {\r\n\t\tvals = Array.prototype.slice.call(args);\r\n\t}\r\n\r\n\tthis.setValues(space, vals);\r\n\treturn this;\r\n};\r\n\r\nColor.prototype.setChannel = function (space, index, val) {\r\n\tvar svalues = this.values[space];\r\n\tif (val === undefined) {\r\n\t\t// color.red()\r\n\t\treturn svalues[index];\r\n\t} else if (val === svalues[index]) {\r\n\t\t// color.red(color.red())\r\n\t\treturn this;\r\n\t}\r\n\r\n\t// color.red(100)\r\n\tsvalues[index] = val;\r\n\tthis.setValues(space, svalues);\r\n\r\n\treturn this;\r\n};\r\n\r\nif (typeof window !== 'undefined') {\r\n\twindow.Color = Color;\r\n}\r\n\r\nmodule.exports = Color;\r\n\r\n},{\"2\":2,\"5\":5}],4:[function(require,module,exports){\r\n/* MIT license */\r\n\r\nmodule.exports = {\r\n  rgb2hsl: rgb2hsl,\r\n  rgb2hsv: rgb2hsv,\r\n  rgb2hwb: rgb2hwb,\r\n  rgb2cmyk: rgb2cmyk,\r\n  rgb2keyword: rgb2keyword,\r\n  rgb2xyz: rgb2xyz,\r\n  rgb2lab: rgb2lab,\r\n  rgb2lch: rgb2lch,\r\n\r\n  hsl2rgb: hsl2rgb,\r\n  hsl2hsv: hsl2hsv,\r\n  hsl2hwb: hsl2hwb,\r\n  hsl2cmyk: hsl2cmyk,\r\n  hsl2keyword: hsl2keyword,\r\n\r\n  hsv2rgb: hsv2rgb,\r\n  hsv2hsl: hsv2hsl,\r\n  hsv2hwb: hsv2hwb,\r\n  hsv2cmyk: hsv2cmyk,\r\n  hsv2keyword: hsv2keyword,\r\n\r\n  hwb2rgb: hwb2rgb,\r\n  hwb2hsl: hwb2hsl,\r\n  hwb2hsv: hwb2hsv,\r\n  hwb2cmyk: hwb2cmyk,\r\n  hwb2keyword: hwb2keyword,\r\n\r\n  cmyk2rgb: cmyk2rgb,\r\n  cmyk2hsl: cmyk2hsl,\r\n  cmyk2hsv: cmyk2hsv,\r\n  cmyk2hwb: cmyk2hwb,\r\n  cmyk2keyword: cmyk2keyword,\r\n\r\n  keyword2rgb: keyword2rgb,\r\n  keyword2hsl: keyword2hsl,\r\n  keyword2hsv: keyword2hsv,\r\n  keyword2hwb: keyword2hwb,\r\n  keyword2cmyk: keyword2cmyk,\r\n  keyword2lab: keyword2lab,\r\n  keyword2xyz: keyword2xyz,\r\n\r\n  xyz2rgb: xyz2rgb,\r\n  xyz2lab: xyz2lab,\r\n  xyz2lch: xyz2lch,\r\n\r\n  lab2xyz: lab2xyz,\r\n  lab2rgb: lab2rgb,\r\n  lab2lch: lab2lch,\r\n\r\n  lch2lab: lch2lab,\r\n  lch2xyz: lch2xyz,\r\n  lch2rgb: lch2rgb\r\n}\r\n\r\n\r\nfunction rgb2hsl(rgb) {\r\n  var r = rgb[0]/255,\r\n      g = rgb[1]/255,\r\n      b = rgb[2]/255,\r\n      min = Math.min(r, g, b),\r\n      max = Math.max(r, g, b),\r\n      delta = max - min,\r\n      h, s, l;\r\n\r\n  if (max == min)\r\n    h = 0;\r\n  else if (r == max)\r\n    h = (g - b) / delta;\r\n  else if (g == max)\r\n    h = 2 + (b - r) / delta;\r\n  else if (b == max)\r\n    h = 4 + (r - g)/ delta;\r\n\r\n  h = Math.min(h * 60, 360);\r\n\r\n  if (h < 0)\r\n    h += 360;\r\n\r\n  l = (min + max) / 2;\r\n\r\n  if (max == min)\r\n    s = 0;\r\n  else if (l <= 0.5)\r\n    s = delta / (max + min);\r\n  else\r\n    s = delta / (2 - max - min);\r\n\r\n  return [h, s * 100, l * 100];\r\n}\r\n\r\nfunction rgb2hsv(rgb) {\r\n  var r = rgb[0],\r\n      g = rgb[1],\r\n      b = rgb[2],\r\n      min = Math.min(r, g, b),\r\n      max = Math.max(r, g, b),\r\n      delta = max - min,\r\n      h, s, v;\r\n\r\n  if (max == 0)\r\n    s = 0;\r\n  else\r\n    s = (delta/max * 1000)/10;\r\n\r\n  if (max == min)\r\n    h = 0;\r\n  else if (r == max)\r\n    h = (g - b) / delta;\r\n  else if (g == max)\r\n    h = 2 + (b - r) / delta;\r\n  else if (b == max)\r\n    h = 4 + (r - g) / delta;\r\n\r\n  h = Math.min(h * 60, 360);\r\n\r\n  if (h < 0)\r\n    h += 360;\r\n\r\n  v = ((max / 255) * 1000) / 10;\r\n\r\n  return [h, s, v];\r\n}\r\n\r\nfunction rgb2hwb(rgb) {\r\n  var r = rgb[0],\r\n      g = rgb[1],\r\n      b = rgb[2],\r\n      h = rgb2hsl(rgb)[0],\r\n      w = 1/255 * Math.min(r, Math.min(g, b)),\r\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\r\n\r\n  return [h, w * 100, b * 100];\r\n}\r\n\r\nfunction rgb2cmyk(rgb) {\r\n  var r = rgb[0] / 255,\r\n      g = rgb[1] / 255,\r\n      b = rgb[2] / 255,\r\n      c, m, y, k;\r\n\r\n  k = Math.min(1 - r, 1 - g, 1 - b);\r\n  c = (1 - r - k) / (1 - k) || 0;\r\n  m = (1 - g - k) / (1 - k) || 0;\r\n  y = (1 - b - k) / (1 - k) || 0;\r\n  return [c * 100, m * 100, y * 100, k * 100];\r\n}\r\n\r\nfunction rgb2keyword(rgb) {\r\n  return reverseKeywords[JSON.stringify(rgb)];\r\n}\r\n\r\nfunction rgb2xyz(rgb) {\r\n  var r = rgb[0] / 255,\r\n      g = rgb[1] / 255,\r\n      b = rgb[2] / 255;\r\n\r\n  // assume sRGB\r\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\r\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\r\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\r\n\r\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\r\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\r\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\r\n\r\n  return [x * 100, y *100, z * 100];\r\n}\r\n\r\nfunction rgb2lab(rgb) {\r\n  var xyz = rgb2xyz(rgb),\r\n        x = xyz[0],\r\n        y = xyz[1],\r\n        z = xyz[2],\r\n        l, a, b;\r\n\r\n  x /= 95.047;\r\n  y /= 100;\r\n  z /= 108.883;\r\n\r\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\r\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\r\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\r\n\r\n  l = (116 * y) - 16;\r\n  a = 500 * (x - y);\r\n  b = 200 * (y - z);\r\n\r\n  return [l, a, b];\r\n}\r\n\r\nfunction rgb2lch(args) {\r\n  return lab2lch(rgb2lab(args));\r\n}\r\n\r\nfunction hsl2rgb(hsl) {\r\n  var h = hsl[0] / 360,\r\n      s = hsl[1] / 100,\r\n      l = hsl[2] / 100,\r\n      t1, t2, t3, rgb, val;\r\n\r\n  if (s == 0) {\r\n    val = l * 255;\r\n    return [val, val, val];\r\n  }\r\n\r\n  if (l < 0.5)\r\n    t2 = l * (1 + s);\r\n  else\r\n    t2 = l + s - l * s;\r\n  t1 = 2 * l - t2;\r\n\r\n  rgb = [0, 0, 0];\r\n  for (var i = 0; i < 3; i++) {\r\n    t3 = h + 1 / 3 * - (i - 1);\r\n    t3 < 0 && t3++;\r\n    t3 > 1 && t3--;\r\n\r\n    if (6 * t3 < 1)\r\n      val = t1 + (t2 - t1) * 6 * t3;\r\n    else if (2 * t3 < 1)\r\n      val = t2;\r\n    else if (3 * t3 < 2)\r\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\r\n    else\r\n      val = t1;\r\n\r\n    rgb[i] = val * 255;\r\n  }\r\n\r\n  return rgb;\r\n}\r\n\r\nfunction hsl2hsv(hsl) {\r\n  var h = hsl[0],\r\n      s = hsl[1] / 100,\r\n      l = hsl[2] / 100,\r\n      sv, v;\r\n\r\n  if(l === 0) {\r\n      // no need to do calc on black\r\n      // also avoids divide by 0 error\r\n      return [0, 0, 0];\r\n  }\r\n\r\n  l *= 2;\r\n  s *= (l <= 1) ? l : 2 - l;\r\n  v = (l + s) / 2;\r\n  sv = (2 * s) / (l + s);\r\n  return [h, sv * 100, v * 100];\r\n}\r\n\r\nfunction hsl2hwb(args) {\r\n  return rgb2hwb(hsl2rgb(args));\r\n}\r\n\r\nfunction hsl2cmyk(args) {\r\n  return rgb2cmyk(hsl2rgb(args));\r\n}\r\n\r\nfunction hsl2keyword(args) {\r\n  return rgb2keyword(hsl2rgb(args));\r\n}\r\n\r\n\r\nfunction hsv2rgb(hsv) {\r\n  var h = hsv[0] / 60,\r\n      s = hsv[1] / 100,\r\n      v = hsv[2] / 100,\r\n      hi = Math.floor(h) % 6;\r\n\r\n  var f = h - Math.floor(h),\r\n      p = 255 * v * (1 - s),\r\n      q = 255 * v * (1 - (s * f)),\r\n      t = 255 * v * (1 - (s * (1 - f))),\r\n      v = 255 * v;\r\n\r\n  switch(hi) {\r\n    case 0:\r\n      return [v, t, p];\r\n    case 1:\r\n      return [q, v, p];\r\n    case 2:\r\n      return [p, v, t];\r\n    case 3:\r\n      return [p, q, v];\r\n    case 4:\r\n      return [t, p, v];\r\n    case 5:\r\n      return [v, p, q];\r\n  }\r\n}\r\n\r\nfunction hsv2hsl(hsv) {\r\n  var h = hsv[0],\r\n      s = hsv[1] / 100,\r\n      v = hsv[2] / 100,\r\n      sl, l;\r\n\r\n  l = (2 - s) * v;\r\n  sl = s * v;\r\n  sl /= (l <= 1) ? l : 2 - l;\r\n  sl = sl || 0;\r\n  l /= 2;\r\n  return [h, sl * 100, l * 100];\r\n}\r\n\r\nfunction hsv2hwb(args) {\r\n  return rgb2hwb(hsv2rgb(args))\r\n}\r\n\r\nfunction hsv2cmyk(args) {\r\n  return rgb2cmyk(hsv2rgb(args));\r\n}\r\n\r\nfunction hsv2keyword(args) {\r\n  return rgb2keyword(hsv2rgb(args));\r\n}\r\n\r\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\r\nfunction hwb2rgb(hwb) {\r\n  var h = hwb[0] / 360,\r\n      wh = hwb[1] / 100,\r\n      bl = hwb[2] / 100,\r\n      ratio = wh + bl,\r\n      i, v, f, n;\r\n\r\n  // wh + bl cant be > 1\r\n  if (ratio > 1) {\r\n    wh /= ratio;\r\n    bl /= ratio;\r\n  }\r\n\r\n  i = Math.floor(6 * h);\r\n  v = 1 - bl;\r\n  f = 6 * h - i;\r\n  if ((i & 0x01) != 0) {\r\n    f = 1 - f;\r\n  }\r\n  n = wh + f * (v - wh);  // linear interpolation\r\n\r\n  switch (i) {\r\n    default:\r\n    case 6:\r\n    case 0: r = v; g = n; b = wh; break;\r\n    case 1: r = n; g = v; b = wh; break;\r\n    case 2: r = wh; g = v; b = n; break;\r\n    case 3: r = wh; g = n; b = v; break;\r\n    case 4: r = n; g = wh; b = v; break;\r\n    case 5: r = v; g = wh; b = n; break;\r\n  }\r\n\r\n  return [r * 255, g * 255, b * 255];\r\n}\r\n\r\nfunction hwb2hsl(args) {\r\n  return rgb2hsl(hwb2rgb(args));\r\n}\r\n\r\nfunction hwb2hsv(args) {\r\n  return rgb2hsv(hwb2rgb(args));\r\n}\r\n\r\nfunction hwb2cmyk(args) {\r\n  return rgb2cmyk(hwb2rgb(args));\r\n}\r\n\r\nfunction hwb2keyword(args) {\r\n  return rgb2keyword(hwb2rgb(args));\r\n}\r\n\r\nfunction cmyk2rgb(cmyk) {\r\n  var c = cmyk[0] / 100,\r\n      m = cmyk[1] / 100,\r\n      y = cmyk[2] / 100,\r\n      k = cmyk[3] / 100,\r\n      r, g, b;\r\n\r\n  r = 1 - Math.min(1, c * (1 - k) + k);\r\n  g = 1 - Math.min(1, m * (1 - k) + k);\r\n  b = 1 - Math.min(1, y * (1 - k) + k);\r\n  return [r * 255, g * 255, b * 255];\r\n}\r\n\r\nfunction cmyk2hsl(args) {\r\n  return rgb2hsl(cmyk2rgb(args));\r\n}\r\n\r\nfunction cmyk2hsv(args) {\r\n  return rgb2hsv(cmyk2rgb(args));\r\n}\r\n\r\nfunction cmyk2hwb(args) {\r\n  return rgb2hwb(cmyk2rgb(args));\r\n}\r\n\r\nfunction cmyk2keyword(args) {\r\n  return rgb2keyword(cmyk2rgb(args));\r\n}\r\n\r\n\r\nfunction xyz2rgb(xyz) {\r\n  var x = xyz[0] / 100,\r\n      y = xyz[1] / 100,\r\n      z = xyz[2] / 100,\r\n      r, g, b;\r\n\r\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\r\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\r\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\r\n\r\n  // assume sRGB\r\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\r\n    : r = (r * 12.92);\r\n\r\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\r\n    : g = (g * 12.92);\r\n\r\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\r\n    : b = (b * 12.92);\r\n\r\n  r = Math.min(Math.max(0, r), 1);\r\n  g = Math.min(Math.max(0, g), 1);\r\n  b = Math.min(Math.max(0, b), 1);\r\n\r\n  return [r * 255, g * 255, b * 255];\r\n}\r\n\r\nfunction xyz2lab(xyz) {\r\n  var x = xyz[0],\r\n      y = xyz[1],\r\n      z = xyz[2],\r\n      l, a, b;\r\n\r\n  x /= 95.047;\r\n  y /= 100;\r\n  z /= 108.883;\r\n\r\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\r\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\r\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\r\n\r\n  l = (116 * y) - 16;\r\n  a = 500 * (x - y);\r\n  b = 200 * (y - z);\r\n\r\n  return [l, a, b];\r\n}\r\n\r\nfunction xyz2lch(args) {\r\n  return lab2lch(xyz2lab(args));\r\n}\r\n\r\nfunction lab2xyz(lab) {\r\n  var l = lab[0],\r\n      a = lab[1],\r\n      b = lab[2],\r\n      x, y, z, y2;\r\n\r\n  if (l <= 8) {\r\n    y = (l * 100) / 903.3;\r\n    y2 = (7.787 * (y / 100)) + (16 / 116);\r\n  } else {\r\n    y = 100 * Math.pow((l + 16) / 116, 3);\r\n    y2 = Math.pow(y / 100, 1/3);\r\n  }\r\n\r\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\r\n\r\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\r\n\r\n  return [x, y, z];\r\n}\r\n\r\nfunction lab2lch(lab) {\r\n  var l = lab[0],\r\n      a = lab[1],\r\n      b = lab[2],\r\n      hr, h, c;\r\n\r\n  hr = Math.atan2(b, a);\r\n  h = hr * 360 / 2 / Math.PI;\r\n  if (h < 0) {\r\n    h += 360;\r\n  }\r\n  c = Math.sqrt(a * a + b * b);\r\n  return [l, c, h];\r\n}\r\n\r\nfunction lab2rgb(args) {\r\n  return xyz2rgb(lab2xyz(args));\r\n}\r\n\r\nfunction lch2lab(lch) {\r\n  var l = lch[0],\r\n      c = lch[1],\r\n      h = lch[2],\r\n      a, b, hr;\r\n\r\n  hr = h / 360 * 2 * Math.PI;\r\n  a = c * Math.cos(hr);\r\n  b = c * Math.sin(hr);\r\n  return [l, a, b];\r\n}\r\n\r\nfunction lch2xyz(args) {\r\n  return lab2xyz(lch2lab(args));\r\n}\r\n\r\nfunction lch2rgb(args) {\r\n  return lab2rgb(lch2lab(args));\r\n}\r\n\r\nfunction keyword2rgb(keyword) {\r\n  return cssKeywords[keyword];\r\n}\r\n\r\nfunction keyword2hsl(args) {\r\n  return rgb2hsl(keyword2rgb(args));\r\n}\r\n\r\nfunction keyword2hsv(args) {\r\n  return rgb2hsv(keyword2rgb(args));\r\n}\r\n\r\nfunction keyword2hwb(args) {\r\n  return rgb2hwb(keyword2rgb(args));\r\n}\r\n\r\nfunction keyword2cmyk(args) {\r\n  return rgb2cmyk(keyword2rgb(args));\r\n}\r\n\r\nfunction keyword2lab(args) {\r\n  return rgb2lab(keyword2rgb(args));\r\n}\r\n\r\nfunction keyword2xyz(args) {\r\n  return rgb2xyz(keyword2rgb(args));\r\n}\r\n\r\nvar cssKeywords = {\r\n  aliceblue:  [240,248,255],\r\n  antiquewhite: [250,235,215],\r\n  aqua: [0,255,255],\r\n  aquamarine: [127,255,212],\r\n  azure:  [240,255,255],\r\n  beige:  [245,245,220],\r\n  bisque: [255,228,196],\r\n  black:  [0,0,0],\r\n  blanchedalmond: [255,235,205],\r\n  blue: [0,0,255],\r\n  blueviolet: [138,43,226],\r\n  brown:  [165,42,42],\r\n  burlywood:  [222,184,135],\r\n  cadetblue:  [95,158,160],\r\n  chartreuse: [127,255,0],\r\n  chocolate:  [210,105,30],\r\n  coral:  [255,127,80],\r\n  cornflowerblue: [100,149,237],\r\n  cornsilk: [255,248,220],\r\n  crimson:  [220,20,60],\r\n  cyan: [0,255,255],\r\n  darkblue: [0,0,139],\r\n  darkcyan: [0,139,139],\r\n  darkgoldenrod:  [184,134,11],\r\n  darkgray: [169,169,169],\r\n  darkgreen:  [0,100,0],\r\n  darkgrey: [169,169,169],\r\n  darkkhaki:  [189,183,107],\r\n  darkmagenta:  [139,0,139],\r\n  darkolivegreen: [85,107,47],\r\n  darkorange: [255,140,0],\r\n  darkorchid: [153,50,204],\r\n  darkred:  [139,0,0],\r\n  darksalmon: [233,150,122],\r\n  darkseagreen: [143,188,143],\r\n  darkslateblue:  [72,61,139],\r\n  darkslategray:  [47,79,79],\r\n  darkslategrey:  [47,79,79],\r\n  darkturquoise:  [0,206,209],\r\n  darkviolet: [148,0,211],\r\n  deeppink: [255,20,147],\r\n  deepskyblue:  [0,191,255],\r\n  dimgray:  [105,105,105],\r\n  dimgrey:  [105,105,105],\r\n  dodgerblue: [30,144,255],\r\n  firebrick:  [178,34,34],\r\n  floralwhite:  [255,250,240],\r\n  forestgreen:  [34,139,34],\r\n  fuchsia:  [255,0,255],\r\n  gainsboro:  [220,220,220],\r\n  ghostwhite: [248,248,255],\r\n  gold: [255,215,0],\r\n  goldenrod:  [218,165,32],\r\n  gray: [128,128,128],\r\n  green:  [0,128,0],\r\n  greenyellow:  [173,255,47],\r\n  grey: [128,128,128],\r\n  honeydew: [240,255,240],\r\n  hotpink:  [255,105,180],\r\n  indianred:  [205,92,92],\r\n  indigo: [75,0,130],\r\n  ivory:  [255,255,240],\r\n  khaki:  [240,230,140],\r\n  lavender: [230,230,250],\r\n  lavenderblush:  [255,240,245],\r\n  lawngreen:  [124,252,0],\r\n  lemonchiffon: [255,250,205],\r\n  lightblue:  [173,216,230],\r\n  lightcoral: [240,128,128],\r\n  lightcyan:  [224,255,255],\r\n  lightgoldenrodyellow: [250,250,210],\r\n  lightgray:  [211,211,211],\r\n  lightgreen: [144,238,144],\r\n  lightgrey:  [211,211,211],\r\n  lightpink:  [255,182,193],\r\n  lightsalmon:  [255,160,122],\r\n  lightseagreen:  [32,178,170],\r\n  lightskyblue: [135,206,250],\r\n  lightslategray: [119,136,153],\r\n  lightslategrey: [119,136,153],\r\n  lightsteelblue: [176,196,222],\r\n  lightyellow:  [255,255,224],\r\n  lime: [0,255,0],\r\n  limegreen:  [50,205,50],\r\n  linen:  [250,240,230],\r\n  magenta:  [255,0,255],\r\n  maroon: [128,0,0],\r\n  mediumaquamarine: [102,205,170],\r\n  mediumblue: [0,0,205],\r\n  mediumorchid: [186,85,211],\r\n  mediumpurple: [147,112,219],\r\n  mediumseagreen: [60,179,113],\r\n  mediumslateblue:  [123,104,238],\r\n  mediumspringgreen:  [0,250,154],\r\n  mediumturquoise:  [72,209,204],\r\n  mediumvioletred:  [199,21,133],\r\n  midnightblue: [25,25,112],\r\n  mintcream:  [245,255,250],\r\n  mistyrose:  [255,228,225],\r\n  moccasin: [255,228,181],\r\n  navajowhite:  [255,222,173],\r\n  navy: [0,0,128],\r\n  oldlace:  [253,245,230],\r\n  olive:  [128,128,0],\r\n  olivedrab:  [107,142,35],\r\n  orange: [255,165,0],\r\n  orangered:  [255,69,0],\r\n  orchid: [218,112,214],\r\n  palegoldenrod:  [238,232,170],\r\n  palegreen:  [152,251,152],\r\n  paleturquoise:  [175,238,238],\r\n  palevioletred:  [219,112,147],\r\n  papayawhip: [255,239,213],\r\n  peachpuff:  [255,218,185],\r\n  peru: [205,133,63],\r\n  pink: [255,192,203],\r\n  plum: [221,160,221],\r\n  powderblue: [176,224,230],\r\n  purple: [128,0,128],\r\n  rebeccapurple: [102, 51, 153],\r\n  red:  [255,0,0],\r\n  rosybrown:  [188,143,143],\r\n  royalblue:  [65,105,225],\r\n  saddlebrown:  [139,69,19],\r\n  salmon: [250,128,114],\r\n  sandybrown: [244,164,96],\r\n  seagreen: [46,139,87],\r\n  seashell: [255,245,238],\r\n  sienna: [160,82,45],\r\n  silver: [192,192,192],\r\n  skyblue:  [135,206,235],\r\n  slateblue:  [106,90,205],\r\n  slategray:  [112,128,144],\r\n  slategrey:  [112,128,144],\r\n  snow: [255,250,250],\r\n  springgreen:  [0,255,127],\r\n  steelblue:  [70,130,180],\r\n  tan:  [210,180,140],\r\n  teal: [0,128,128],\r\n  thistle:  [216,191,216],\r\n  tomato: [255,99,71],\r\n  turquoise:  [64,224,208],\r\n  violet: [238,130,238],\r\n  wheat:  [245,222,179],\r\n  white:  [255,255,255],\r\n  whitesmoke: [245,245,245],\r\n  yellow: [255,255,0],\r\n  yellowgreen:  [154,205,50]\r\n};\r\n\r\nvar reverseKeywords = {};\r\nfor (var key in cssKeywords) {\r\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\r\n}\r\n\r\n},{}],5:[function(require,module,exports){\r\nvar conversions = require(4);\r\n\r\nvar convert = function() {\r\n   return new Converter();\r\n}\r\n\r\nfor (var func in conversions) {\r\n  // export Raw versions\r\n  convert[func + \"Raw\"] =  (function(func) {\r\n    // accept array or plain args\r\n    return function(arg) {\r\n      if (typeof arg == \"number\")\r\n        arg = Array.prototype.slice.call(arguments);\r\n      return conversions[func](arg);\r\n    }\r\n  })(func);\r\n\r\n  var pair = /(\\w+)2(\\w+)/.exec(func),\r\n      from = pair[1],\r\n      to = pair[2];\r\n\r\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\r\n  convert[from] = convert[from] || {};\r\n\r\n  convert[from][to] = convert[func] = (function(func) { \r\n    return function(arg) {\r\n      if (typeof arg == \"number\")\r\n        arg = Array.prototype.slice.call(arguments);\r\n      \r\n      var val = conversions[func](arg);\r\n      if (typeof val == \"string\" || val === undefined)\r\n        return val; // keyword\r\n\r\n      for (var i = 0; i < val.length; i++)\r\n        val[i] = Math.round(val[i]);\r\n      return val;\r\n    }\r\n  })(func);\r\n}\r\n\r\n\r\n/* Converter does lazy conversion and caching */\r\nvar Converter = function() {\r\n   this.convs = {};\r\n};\r\n\r\n/* Either get the values for a space or\r\n  set the values for a space, depending on args */\r\nConverter.prototype.routeSpace = function(space, args) {\r\n   var values = args[0];\r\n   if (values === undefined) {\r\n      // color.rgb()\r\n      return this.getValues(space);\r\n   }\r\n   // color.rgb(10, 10, 10)\r\n   if (typeof values == \"number\") {\r\n      values = Array.prototype.slice.call(args);        \r\n   }\r\n\r\n   return this.setValues(space, values);\r\n};\r\n  \r\n/* Set the values for a space, invalidating cache */\r\nConverter.prototype.setValues = function(space, values) {\r\n   this.space = space;\r\n   this.convs = {};\r\n   this.convs[space] = values;\r\n   return this;\r\n};\r\n\r\n/* Get the values for a space. If there's already\r\n  a conversion for the space, fetch it, otherwise\r\n  compute it */\r\nConverter.prototype.getValues = function(space) {\r\n   var vals = this.convs[space];\r\n   if (!vals) {\r\n      var fspace = this.space,\r\n          from = this.convs[fspace];\r\n      vals = convert[fspace][space](from);\r\n\r\n      this.convs[space] = vals;\r\n   }\r\n  return vals;\r\n};\r\n\r\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\r\n   Converter.prototype[space] = function(vals) {\r\n      return this.routeSpace(space, arguments);\r\n   }\r\n});\r\n\r\nmodule.exports = convert;\r\n},{\"4\":4}],6:[function(require,module,exports){\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n},{}],7:[function(require,module,exports){\r\n/**\r\n * @namespace Chart\r\n */\r\nvar Chart = require(28)();\r\n\r\nrequire(26)(Chart);\r\nrequire(42)(Chart);\r\nrequire(22)(Chart);\r\nrequire(31)(Chart);\r\nrequire(25)(Chart);\r\nrequire(21)(Chart);\r\nrequire(23)(Chart);\r\nrequire(24)(Chart);\r\nrequire(29)(Chart);\r\nrequire(33)(Chart);\r\nrequire(34)(Chart);\r\nrequire(32)(Chart);\r\nrequire(35)(Chart);\r\nrequire(30)(Chart);\r\nrequire(27)(Chart);\r\nrequire(36)(Chart);\r\n\r\nrequire(37)(Chart);\r\nrequire(38)(Chart);\r\nrequire(39)(Chart);\r\nrequire(40)(Chart);\r\n\r\nrequire(45)(Chart);\r\nrequire(43)(Chart);\r\nrequire(44)(Chart);\r\nrequire(46)(Chart);\r\nrequire(47)(Chart);\r\nrequire(48)(Chart);\r\n\r\n// Controllers must be loaded after elements\r\n// See Chart.core.datasetController.dataElementType\r\nrequire(15)(Chart);\r\nrequire(16)(Chart);\r\nrequire(17)(Chart);\r\nrequire(18)(Chart);\r\nrequire(19)(Chart);\r\nrequire(20)(Chart);\r\n\r\nrequire(8)(Chart);\r\nrequire(9)(Chart);\r\nrequire(10)(Chart);\r\nrequire(11)(Chart);\r\nrequire(12)(Chart);\r\nrequire(13)(Chart);\r\nrequire(14)(Chart);\r\n\r\nwindow.Chart = module.exports = Chart;\r\n\r\n},{\"10\":10,\"11\":11,\"12\":12,\"13\":13,\"14\":14,\"15\":15,\"16\":16,\"17\":17,\"18\":18,\"19\":19,\"20\":20,\"21\":21,\"22\":22,\"23\":23,\"24\":24,\"25\":25,\"26\":26,\"27\":27,\"28\":28,\"29\":29,\"30\":30,\"31\":31,\"32\":32,\"33\":33,\"34\":34,\"35\":35,\"36\":36,\"37\":37,\"38\":38,\"39\":39,\"40\":40,\"42\":42,\"43\":43,\"44\":44,\"45\":45,\"46\":46,\"47\":47,\"48\":48,\"8\":8,\"9\":9}],8:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tChart.Bar = function(context, config) {\r\n\t\tconfig.type = 'bar';\r\n\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\r\n\r\n},{}],9:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tChart.Bubble = function(context, config) {\r\n\t\tconfig.type = 'bubble';\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\r\n\r\n},{}],10:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tChart.Doughnut = function(context, config) {\r\n\t\tconfig.type = 'doughnut';\r\n\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\r\n\r\n},{}],11:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tChart.Line = function(context, config) {\r\n\t\tconfig.type = 'line';\r\n\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\r\n\r\n},{}],12:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tChart.PolarArea = function(context, config) {\r\n\t\tconfig.type = 'polarArea';\r\n\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\r\n\r\n},{}],13:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tChart.Radar = function(context, config) {\r\n\t\tconfig.type = 'radar';\r\n\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\r\n\r\n},{}],14:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar defaultConfig = {\r\n\t\thover: {\r\n\t\t\tmode: 'single'\r\n\t\t},\r\n\r\n\t\tscales: {\r\n\t\t\txAxes: [{\r\n\t\t\t\ttype: 'linear', // scatter should not use a category axis\r\n\t\t\t\tposition: 'bottom',\r\n\t\t\t\tid: 'x-axis-1' // need an ID so datasets can reference the scale\r\n\t\t\t}],\r\n\t\t\tyAxes: [{\r\n\t\t\t\ttype: 'linear',\r\n\t\t\t\tposition: 'left',\r\n\t\t\t\tid: 'y-axis-1'\r\n\t\t\t}]\r\n\t\t},\r\n\r\n\t\ttooltips: {\r\n\t\t\tcallbacks: {\r\n\t\t\t\ttitle: function() {\r\n\t\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t},\r\n\t\t\t\tlabel: function(tooltipItem) {\r\n\t\t\t\t\treturn '(' + tooltipItem.xLabel + ', ' + tooltipItem.yLabel + ')';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Register the default config for this type\r\n\tChart.defaults.scatter = defaultConfig;\r\n\r\n\t// Scatter charts use line controllers\r\n\tChart.controllers.scatter = Chart.controllers.line;\r\n\r\n\tChart.Scatter = function(context, config) {\r\n\t\tconfig.type = 'scatter';\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\r\n\r\n},{}],15:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.bar = {\r\n\t\thover: {\r\n\t\t\tmode: 'label'\r\n\t\t},\r\n\r\n\t\tscales: {\r\n\t\t\txAxes: [{\r\n\t\t\t\ttype: 'category',\r\n\r\n\t\t\t\t// Specific to Bar Controller\r\n\t\t\t\tcategoryPercentage: 0.8,\r\n\t\t\t\tbarPercentage: 0.9,\r\n\r\n\t\t\t\t// grid line settings\r\n\t\t\t\tgridLines: {\r\n\t\t\t\t\toffsetGridLines: true\r\n\t\t\t\t}\r\n\t\t\t}],\r\n\t\t\tyAxes: [{\r\n\t\t\t\ttype: 'linear'\r\n\t\t\t}]\r\n\t\t}\r\n\t};\r\n\r\n\tChart.controllers.bar = Chart.DatasetController.extend({\r\n\r\n\t\tdataElementType: Chart.elements.Rectangle,\r\n\r\n\t\tinitialize: function(chart, datasetIndex) {\r\n\t\t\tChart.DatasetController.prototype.initialize.call(this, chart, datasetIndex);\r\n\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar dataset = me.getDataset();\r\n\r\n\t\t\tmeta.stack = dataset.stack;\r\n\t\t\t// Use this to indicate that this is a bar dataset.\r\n\t\t\tmeta.bar = true;\r\n\t\t},\r\n\r\n\t\t// Correctly calculate the bar width accounting for stacks and the fact that not all bars are visible\r\n\t\tgetStackCount: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\r\n\t\t\tvar stacks = [];\r\n\t\t\thelpers.each(me.chart.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tvar dsMeta = me.chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\tif (dsMeta.bar && me.chart.isDatasetVisible(datasetIndex) &&\r\n\t\t\t\t\t(yScale.options.stacked === false ||\r\n\t\t\t\t\t(yScale.options.stacked === true && stacks.indexOf(dsMeta.stack) === -1) ||\r\n\t\t\t\t\t(yScale.options.stacked === undefined && (dsMeta.stack === undefined || stacks.indexOf(dsMeta.stack) === -1)))) {\r\n\t\t\t\t\tstacks.push(dsMeta.stack);\r\n\t\t\t\t}\r\n\t\t\t}, me);\r\n\r\n\t\t\treturn stacks.length;\r\n\t\t},\r\n\r\n\t\tupdate: function(reset) {\r\n\t\t\tvar me = this;\r\n\t\t\thelpers.each(me.getMeta().data, function(rectangle, index) {\r\n\t\t\t\tme.updateElement(rectangle, index, reset);\r\n\t\t\t}, me);\r\n\t\t},\r\n\r\n\t\tupdateElement: function(rectangle, index, reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\tvar scaleBase = yScale.getBasePixel();\r\n\t\t\tvar rectangleElementOptions = me.chart.options.elements.rectangle;\r\n\t\t\tvar custom = rectangle.custom || {};\r\n\t\t\tvar dataset = me.getDataset();\r\n\r\n\t\t\trectangle._xScale = xScale;\r\n\t\t\trectangle._yScale = yScale;\r\n\t\t\trectangle._datasetIndex = me.index;\r\n\t\t\trectangle._index = index;\r\n\r\n\t\t\tvar ruler = me.getRuler(index); // The index argument for compatible\r\n\t\t\trectangle._model = {\r\n\t\t\t\tx: me.calculateBarX(index, me.index, ruler),\r\n\t\t\t\ty: reset ? scaleBase : me.calculateBarY(index, me.index),\r\n\r\n\t\t\t\t// Tooltip\r\n\t\t\t\tlabel: me.chart.data.labels[index],\r\n\t\t\t\tdatasetLabel: dataset.label,\r\n\r\n\t\t\t\t// Appearance\r\n\t\t\t\thorizontal: false,\r\n\t\t\t\tbase: reset ? scaleBase : me.calculateBarBase(me.index, index),\r\n\t\t\t\twidth: me.calculateBarWidth(ruler),\r\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor),\r\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleElementOptions.borderSkipped,\r\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor),\r\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth)\r\n\t\t\t};\r\n\r\n\t\t\trectangle.pivot();\r\n\t\t},\r\n\r\n\t\tcalculateBarBase: function(datasetIndex, index) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\tvar base = yScale.getBaseValue();\r\n\t\t\tvar original = base;\r\n\r\n\t\t\tif ((yScale.options.stacked === true) ||\r\n\t\t\t\t(yScale.options.stacked === undefined && meta.stack !== undefined)) {\r\n\t\t\t\tvar chart = me.chart;\r\n\t\t\t\tvar datasets = chart.data.datasets;\r\n\t\t\t\tvar value = Number(datasets[datasetIndex].data[index]);\r\n\r\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\tvar currentDs = datasets[i];\r\n\t\t\t\t\tvar currentDsMeta = chart.getDatasetMeta(i);\r\n\t\t\t\t\tif (currentDsMeta.bar && currentDsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i) &&\r\n\t\t\t\t\t\tmeta.stack === currentDsMeta.stack) {\r\n\t\t\t\t\t\tvar currentVal = Number(currentDs.data[index]);\r\n\t\t\t\t\t\tbase += value < 0 ? Math.min(currentVal, original) : Math.max(currentVal, original);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn yScale.getPixelForValue(base);\r\n\t\t\t}\r\n\r\n\t\t\treturn yScale.getBasePixel();\r\n\t\t},\r\n\r\n\t\tgetRuler: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\tvar stackCount = me.getStackCount();\r\n\r\n\t\t\tvar tickWidth = xScale.width / xScale.ticks.length;\r\n\t\t\tvar categoryWidth = tickWidth * xScale.options.categoryPercentage;\r\n\t\t\tvar categorySpacing = (tickWidth - (tickWidth * xScale.options.categoryPercentage)) / 2;\r\n\t\t\tvar fullBarWidth = categoryWidth / stackCount;\r\n\r\n\t\t\tvar barWidth = fullBarWidth * xScale.options.barPercentage;\r\n\t\t\tvar barSpacing = fullBarWidth - (fullBarWidth * xScale.options.barPercentage);\r\n\r\n\t\t\treturn {\r\n\t\t\t\tstackCount: stackCount,\r\n\t\t\t\ttickWidth: tickWidth,\r\n\t\t\t\tcategoryWidth: categoryWidth,\r\n\t\t\t\tcategorySpacing: categorySpacing,\r\n\t\t\t\tfullBarWidth: fullBarWidth,\r\n\t\t\t\tbarWidth: barWidth,\r\n\t\t\t\tbarSpacing: barSpacing\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tcalculateBarWidth: function(ruler) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\tif (xScale.options.barThickness) {\r\n\t\t\t\treturn xScale.options.barThickness;\r\n\t\t\t}\r\n\t\t\treturn ruler.barWidth;\r\n\t\t},\r\n\r\n\t\t// Get stack index from the given dataset index accounting for stacks and the fact that not all bars are visible\r\n\t\tgetStackIndex: function(datasetIndex) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.chart.getDatasetMeta(datasetIndex);\r\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\tvar dsMeta, j;\r\n\t\t\tvar stacks = [meta.stack];\r\n\r\n\t\t\tfor (j = 0; j < datasetIndex; ++j) {\r\n\t\t\t\tdsMeta = this.chart.getDatasetMeta(j);\r\n\t\t\t\tif (dsMeta.bar && this.chart.isDatasetVisible(j) &&\r\n\t\t\t\t\t(yScale.options.stacked === false ||\r\n\t\t\t\t\t(yScale.options.stacked === true && stacks.indexOf(dsMeta.stack) === -1) ||\r\n\t\t\t\t\t(yScale.options.stacked === undefined && (dsMeta.stack === undefined || stacks.indexOf(dsMeta.stack) === -1)))) {\r\n\t\t\t\t\tstacks.push(dsMeta.stack);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn stacks.length - 1;\r\n\t\t},\r\n\r\n\t\tcalculateBarX: function(index, datasetIndex, ruler) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex);\r\n\t\t\tvar leftTick = xScale.getPixelForValue(null, index, datasetIndex, me.chart.isCombo);\r\n\t\t\tleftTick -= me.chart.isCombo ? (ruler.tickWidth / 2) : 0;\r\n\r\n\t\t\treturn leftTick +\r\n\t\t\t\t(ruler.barWidth / 2) +\r\n\t\t\t\truler.categorySpacing +\r\n\t\t\t\t(ruler.barWidth * stackIndex) +\r\n\t\t\t\t(ruler.barSpacing / 2) +\r\n\t\t\t\t(ruler.barSpacing * stackIndex);\r\n\t\t},\r\n\r\n\t\tcalculateBarY: function(index, datasetIndex) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\tvar value = Number(me.getDataset().data[index]);\r\n\r\n\t\t\tif (yScale.options.stacked ||\r\n\t\t\t\t(yScale.options.stacked === undefined && meta.stack !== undefined)) {\r\n\t\t\t\tvar base = yScale.getBaseValue();\r\n\t\t\t\tvar sumPos = base,\r\n\t\t\t\t\tsumNeg = base;\r\n\r\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\tvar ds = me.chart.data.datasets[i];\r\n\t\t\t\t\tvar dsMeta = me.chart.getDatasetMeta(i);\r\n\t\t\t\t\tif (dsMeta.bar && dsMeta.yAxisID === yScale.id && me.chart.isDatasetVisible(i) &&\r\n\t\t\t\t\t\tmeta.stack === dsMeta.stack) {\r\n\t\t\t\t\t\tvar stackedVal = Number(ds.data[index]);\r\n\t\t\t\t\t\tif (stackedVal < 0) {\r\n\t\t\t\t\t\t\tsumNeg += stackedVal || 0;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsumPos += stackedVal || 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value < 0) {\r\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + value);\r\n\t\t\t\t}\r\n\t\t\t\treturn yScale.getPixelForValue(sumPos + value);\r\n\t\t\t}\r\n\r\n\t\t\treturn yScale.getPixelForValue(value);\r\n\t\t},\r\n\r\n\t\tdraw: function(ease) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar easingDecimal = ease || 1;\r\n\t\t\tvar metaData = me.getMeta().data;\r\n\t\t\tvar dataset = me.getDataset();\r\n\t\t\tvar i, len;\r\n\r\n\t\t\tChart.canvasHelpers.clipArea(me.chart.chart.ctx, me.chart.chartArea);\r\n\t\t\tfor (i = 0, len = metaData.length; i < len; ++i) {\r\n\t\t\t\tvar d = dataset.data[i];\r\n\t\t\t\tif (d !== null && d !== undefined && !isNaN(d)) {\r\n\t\t\t\t\tmetaData[i].transition(easingDecimal).draw();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tChart.canvasHelpers.unclipArea(me.chart.chart.ctx);\r\n\t\t},\r\n\r\n\t\tsetHoverStyle: function(rectangle) {\r\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n\t\t\tvar index = rectangle._index;\r\n\r\n\t\t\tvar custom = rectangle.custom || {};\r\n\t\t\tvar model = rectangle._model;\r\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(rectangle) {\r\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n\t\t\tvar index = rectangle._index;\r\n\t\t\tvar custom = rectangle.custom || {};\r\n\t\t\tvar model = rectangle._model;\r\n\t\t\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\r\n\r\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\r\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\r\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\r\n\t\t}\r\n\r\n\t});\r\n\r\n\r\n\t// including horizontalBar in the bar file, instead of a file of its own\r\n\t// it extends bar (like pie extends doughnut)\r\n\tChart.defaults.horizontalBar = {\r\n\t\thover: {\r\n\t\t\tmode: 'label'\r\n\t\t},\r\n\r\n\t\tscales: {\r\n\t\t\txAxes: [{\r\n\t\t\t\ttype: 'linear',\r\n\t\t\t\tposition: 'bottom'\r\n\t\t\t}],\r\n\t\t\tyAxes: [{\r\n\t\t\t\tposition: 'left',\r\n\t\t\t\ttype: 'category',\r\n\r\n\t\t\t\t// Specific to Horizontal Bar Controller\r\n\t\t\t\tcategoryPercentage: 0.8,\r\n\t\t\t\tbarPercentage: 0.9,\r\n\r\n\t\t\t\t// grid line settings\r\n\t\t\t\tgridLines: {\r\n\t\t\t\t\toffsetGridLines: true\r\n\t\t\t\t}\r\n\t\t\t}]\r\n\t\t},\r\n\t\telements: {\r\n\t\t\trectangle: {\r\n\t\t\t\tborderSkipped: 'left'\r\n\t\t\t}\r\n\t\t},\r\n\t\ttooltips: {\r\n\t\t\tcallbacks: {\r\n\t\t\t\ttitle: function(tooltipItems, data) {\r\n\t\t\t\t\t// Pick first xLabel for now\r\n\t\t\t\t\tvar title = '';\r\n\r\n\t\t\t\t\tif (tooltipItems.length > 0) {\r\n\t\t\t\t\t\tif (tooltipItems[0].yLabel) {\r\n\t\t\t\t\t\t\ttitle = tooltipItems[0].yLabel;\r\n\t\t\t\t\t\t} else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\r\n\t\t\t\t\t\t\ttitle = data.labels[tooltipItems[0].index];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn title;\r\n\t\t\t\t},\r\n\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\t\t\t\t\treturn datasetLabel + ': ' + tooltipItem.xLabel;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\r\n\r\n\t\t// Correctly calculate the bar width accounting for stacks and the fact that not all bars are visible\r\n\t\tgetStackCount: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\r\n\t\t\tvar stacks = [];\r\n\t\t\thelpers.each(me.chart.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tvar dsMeta = me.chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\tif (dsMeta.bar && me.chart.isDatasetVisible(datasetIndex) &&\r\n\t\t\t\t\t(xScale.options.stacked === false ||\r\n\t\t\t\t\t(xScale.options.stacked === true && stacks.indexOf(dsMeta.stack) === -1) ||\r\n\t\t\t\t\t(xScale.options.stacked === undefined && (dsMeta.stack === undefined || stacks.indexOf(dsMeta.stack) === -1)))) {\r\n\t\t\t\t\tstacks.push(dsMeta.stack);\r\n\t\t\t\t}\r\n\t\t\t}, me);\r\n\r\n\t\t\treturn stacks.length;\r\n\t\t},\r\n\r\n\t\tupdateElement: function(rectangle, index, reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\tvar scaleBase = xScale.getBasePixel();\r\n\t\t\tvar custom = rectangle.custom || {};\r\n\t\t\tvar dataset = me.getDataset();\r\n\t\t\tvar rectangleElementOptions = me.chart.options.elements.rectangle;\r\n\r\n\t\t\trectangle._xScale = xScale;\r\n\t\t\trectangle._yScale = yScale;\r\n\t\t\trectangle._datasetIndex = me.index;\r\n\t\t\trectangle._index = index;\r\n\r\n\t\t\tvar ruler = me.getRuler(index); // The index argument for compatible\r\n\t\t\trectangle._model = {\r\n\t\t\t\tx: reset ? scaleBase : me.calculateBarX(index, me.index),\r\n\t\t\t\ty: me.calculateBarY(index, me.index, ruler),\r\n\r\n\t\t\t\t// Tooltip\r\n\t\t\t\tlabel: me.chart.data.labels[index],\r\n\t\t\t\tdatasetLabel: dataset.label,\r\n\r\n\t\t\t\t// Appearance\r\n\t\t\t\thorizontal: true,\r\n\t\t\t\tbase: reset ? scaleBase : me.calculateBarBase(me.index, index),\r\n\t\t\t\theight: me.calculateBarHeight(ruler),\r\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor),\r\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleElementOptions.borderSkipped,\r\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor),\r\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth)\r\n\t\t\t};\r\n\r\n\t\t\trectangle.pivot();\r\n\t\t},\r\n\r\n\t\tcalculateBarBase: function(datasetIndex, index) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\tvar base = xScale.getBaseValue();\r\n\t\t\tvar originalBase = base;\r\n\r\n\t\t\tif (xScale.options.stacked ||\r\n\t\t\t\t(xScale.options.stacked === undefined && meta.stack !== undefined)) {\r\n\t\t\t\tvar chart = me.chart;\r\n\t\t\t\tvar datasets = chart.data.datasets;\r\n\t\t\t\tvar value = Number(datasets[datasetIndex].data[index]);\r\n\r\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\tvar currentDs = datasets[i];\r\n\t\t\t\t\tvar currentDsMeta = chart.getDatasetMeta(i);\r\n\t\t\t\t\tif (currentDsMeta.bar && currentDsMeta.xAxisID === xScale.id && chart.isDatasetVisible(i) &&\r\n\t\t\t\t\t\tmeta.stack === currentDsMeta.stack) {\r\n\t\t\t\t\t\tvar currentVal = Number(currentDs.data[index]);\r\n\t\t\t\t\t\tbase += value < 0 ? Math.min(currentVal, originalBase) : Math.max(currentVal, originalBase);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn xScale.getPixelForValue(base);\r\n\t\t\t}\r\n\r\n\t\t\treturn xScale.getBasePixel();\r\n\t\t},\r\n\r\n\t\tgetRuler: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\tvar stackCount = me.getStackCount();\r\n\r\n\t\t\tvar tickHeight = yScale.height / yScale.ticks.length;\r\n\t\t\tvar categoryHeight = tickHeight * yScale.options.categoryPercentage;\r\n\t\t\tvar categorySpacing = (tickHeight - (tickHeight * yScale.options.categoryPercentage)) / 2;\r\n\t\t\tvar fullBarHeight = categoryHeight / stackCount;\r\n\r\n\t\t\tvar barHeight = fullBarHeight * yScale.options.barPercentage;\r\n\t\t\tvar barSpacing = fullBarHeight - (fullBarHeight * yScale.options.barPercentage);\r\n\r\n\t\t\treturn {\r\n\t\t\t\tstackCount: stackCount,\r\n\t\t\t\ttickHeight: tickHeight,\r\n\t\t\t\tcategoryHeight: categoryHeight,\r\n\t\t\t\tcategorySpacing: categorySpacing,\r\n\t\t\t\tfullBarHeight: fullBarHeight,\r\n\t\t\t\tbarHeight: barHeight,\r\n\t\t\t\tbarSpacing: barSpacing\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tcalculateBarHeight: function(ruler) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\tif (yScale.options.barThickness) {\r\n\t\t\t\treturn yScale.options.barThickness;\r\n\t\t\t}\r\n\t\t\treturn ruler.barHeight;\r\n\t\t},\r\n\r\n\t\t// Get stack index from the given dataset index accounting for stacks and the fact that not all bars are visible\r\n\t\tgetStackIndex: function(datasetIndex) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.chart.getDatasetMeta(datasetIndex);\r\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\tvar dsMeta, j;\r\n\t\t\tvar stacks = [meta.stack];\r\n\r\n\t\t\tfor (j = 0; j < datasetIndex; ++j) {\r\n\t\t\t\tdsMeta = this.chart.getDatasetMeta(j);\r\n\t\t\t\tif (dsMeta.bar && this.chart.isDatasetVisible(j) &&\r\n\t\t\t\t\t(xScale.options.stacked === false ||\r\n\t\t\t\t\t(xScale.options.stacked === true && stacks.indexOf(dsMeta.stack) === -1) ||\r\n\t\t\t\t\t(xScale.options.stacked === undefined && (dsMeta.stack === undefined || stacks.indexOf(dsMeta.stack) === -1)))) {\r\n\t\t\t\t\tstacks.push(dsMeta.stack);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn stacks.length - 1;\r\n\t\t},\r\n\r\n\t\tcalculateBarX: function(index, datasetIndex) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\tvar value = Number(me.getDataset().data[index]);\r\n\r\n\t\t\tif (xScale.options.stacked ||\r\n\t\t\t\t(xScale.options.stacked === undefined && meta.stack !== undefined)) {\r\n\t\t\t\tvar base = xScale.getBaseValue();\r\n\t\t\t\tvar sumPos = base,\r\n\t\t\t\t\tsumNeg = base;\r\n\r\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\tvar ds = me.chart.data.datasets[i];\r\n\t\t\t\t\tvar dsMeta = me.chart.getDatasetMeta(i);\r\n\t\t\t\t\tif (dsMeta.bar && dsMeta.xAxisID === xScale.id && me.chart.isDatasetVisible(i) &&\r\n\t\t\t\t\t\tmeta.stack === dsMeta.stack) {\r\n\t\t\t\t\t\tvar stackedVal = Number(ds.data[index]);\r\n\t\t\t\t\t\tif (stackedVal < 0) {\r\n\t\t\t\t\t\t\tsumNeg += stackedVal || 0;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsumPos += stackedVal || 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value < 0) {\r\n\t\t\t\t\treturn xScale.getPixelForValue(sumNeg + value);\r\n\t\t\t\t}\r\n\t\t\t\treturn xScale.getPixelForValue(sumPos + value);\r\n\t\t\t}\r\n\r\n\t\t\treturn xScale.getPixelForValue(value);\r\n\t\t},\r\n\r\n\t\tcalculateBarY: function(index, datasetIndex, ruler) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex);\r\n\t\t\tvar topTick = yScale.getPixelForValue(null, index, datasetIndex, me.chart.isCombo);\r\n\t\t\ttopTick -= me.chart.isCombo ? (ruler.tickHeight / 2) : 0;\r\n\r\n\t\t\treturn topTick +\r\n\t\t\t\t(ruler.barHeight / 2) +\r\n\t\t\t\truler.categorySpacing +\r\n\t\t\t\t(ruler.barHeight * stackIndex) +\r\n\t\t\t\t(ruler.barSpacing / 2) +\r\n\t\t\t\t(ruler.barSpacing * stackIndex);\r\n\t\t}\r\n\t});\r\n};\r\n\r\n},{}],16:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.bubble = {\r\n\t\thover: {\r\n\t\t\tmode: 'single'\r\n\t\t},\r\n\r\n\t\tscales: {\r\n\t\t\txAxes: [{\r\n\t\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\r\n\t\t\t\tposition: 'bottom',\r\n\t\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\r\n\t\t\t}],\r\n\t\t\tyAxes: [{\r\n\t\t\t\ttype: 'linear',\r\n\t\t\t\tposition: 'left',\r\n\t\t\t\tid: 'y-axis-0'\r\n\t\t\t}]\r\n\t\t},\r\n\r\n\t\ttooltips: {\r\n\t\t\tcallbacks: {\r\n\t\t\t\ttitle: function() {\r\n\t\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t},\r\n\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\t\t\t\t\tvar dataPoint = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\r\n\t\t\t\t\treturn datasetLabel + ': (' + tooltipItem.xLabel + ', ' + tooltipItem.yLabel + ', ' + dataPoint.r + ')';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tChart.controllers.bubble = Chart.DatasetController.extend({\r\n\r\n\t\tdataElementType: Chart.elements.Point,\r\n\r\n\t\tupdate: function(reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar points = meta.data;\r\n\r\n\t\t\t// Update Points\r\n\t\t\thelpers.each(points, function(point, index) {\r\n\t\t\t\tme.updateElement(point, index, reset);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tupdateElement: function(point, index, reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar dataset = me.getDataset();\r\n\t\t\tvar data = dataset.data[index];\r\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\r\n\t\t\tvar dsIndex = me.index;\r\n\r\n\t\t\thelpers.extend(point, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_xScale: xScale,\r\n\t\t\t\t_yScale: yScale,\r\n\t\t\t\t_datasetIndex: dsIndex,\r\n\t\t\t\t_index: index,\r\n\r\n\t\t\t\t// Desired view properties\r\n\t\t\t\t_model: {\r\n\t\t\t\t\tx: reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex, me.chart.isCombo),\r\n\t\t\t\t\ty: reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex),\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\tradius: reset ? 0 : custom.radius ? custom.radius : me.getRadius(data),\r\n\r\n\t\t\t\t\t// Tooltip\r\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.getValueAtIndexOrDefault(dataset.hitRadius, index, pointElementOptions.hitRadius)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Trick to reset the styles of the point\r\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(me, point, pointElementOptions);\r\n\r\n\t\t\tvar model = point._model;\r\n\t\t\tmodel.skip = custom.skip ? custom.skip : (isNaN(model.x) || isNaN(model.y));\r\n\r\n\t\t\tpoint.pivot();\r\n\t\t},\r\n\r\n\t\tgetRadius: function(value) {\r\n\t\t\treturn value.r || this.chart.options.elements.point.radius;\r\n\t\t},\r\n\r\n\t\tsetHoverStyle: function(point) {\r\n\t\t\tvar me = this;\r\n\t\t\tChart.DatasetController.prototype.setHoverStyle.call(me, point);\r\n\r\n\t\t\t// Radius\r\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\r\n\t\t\tvar index = point._index;\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar model = point._model;\r\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : (helpers.getValueAtIndexOrDefault(dataset.hoverRadius, index, me.chart.options.elements.point.hoverRadius)) + me.getRadius(dataset.data[index]);\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(point) {\r\n\t\t\tvar me = this;\r\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(me, point, me.chart.options.elements.point);\r\n\r\n\t\t\tvar dataVal = me.chart.data.datasets[point._datasetIndex].data[point._index];\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar model = point._model;\r\n\r\n\t\t\tmodel.radius = custom.radius ? custom.radius : me.getRadius(dataVal);\r\n\t\t}\r\n\t});\r\n};\r\n\r\n},{}],17:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers,\r\n\t\tdefaults = Chart.defaults;\r\n\r\n\tdefaults.doughnut = {\r\n\t\tanimation: {\r\n\t\t\t// Boolean - Whether we animate the rotation of the Doughnut\r\n\t\t\tanimateRotate: true,\r\n\t\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\r\n\t\t\tanimateScale: false\r\n\t\t},\r\n\t\taspectRatio: 1,\r\n\t\thover: {\r\n\t\t\tmode: 'single'\r\n\t\t},\r\n\t\tlegendCallback: function(chart) {\r\n\t\t\tvar text = [];\r\n\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\r\n\r\n\t\t\tvar data = chart.data;\r\n\t\t\tvar datasets = data.datasets;\r\n\t\t\tvar labels = data.labels;\r\n\r\n\t\t\tif (datasets.length) {\r\n\t\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\r\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\r\n\t\t\t\t\tif (labels[i]) {\r\n\t\t\t\t\t\ttext.push(labels[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttext.push('</li>');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttext.push('</ul>');\r\n\t\t\treturn text.join('');\r\n\t\t},\r\n\t\tlegend: {\r\n\t\t\tlabels: {\r\n\t\t\t\tgenerateLabels: function(chart) {\r\n\t\t\t\t\tvar data = chart.data;\r\n\t\t\t\t\tif (data.labels.length && data.datasets.length) {\r\n\t\t\t\t\t\treturn data.labels.map(function(label, i) {\r\n\t\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\r\n\t\t\t\t\t\t\tvar ds = data.datasets[0];\r\n\t\t\t\t\t\t\tvar arc = meta.data[i];\r\n\t\t\t\t\t\t\tvar custom = arc && arc.custom || {};\r\n\t\t\t\t\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\r\n\t\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\r\n\t\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\r\n\t\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\r\n\t\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\r\n\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\ttext: label,\r\n\t\t\t\t\t\t\t\tfillStyle: fill,\r\n\t\t\t\t\t\t\t\tstrokeStyle: stroke,\r\n\t\t\t\t\t\t\t\tlineWidth: bw,\r\n\t\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\r\n\r\n\t\t\t\t\t\t\t\t// Extra data used for toggling the correct item\r\n\t\t\t\t\t\t\t\tindex: i\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tonClick: function(e, legendItem) {\r\n\t\t\t\tvar index = legendItem.index;\r\n\t\t\t\tvar chart = this.chart;\r\n\t\t\t\tvar i, ilen, meta;\r\n\r\n\t\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\r\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\r\n\t\t\t\t\t// toggle visibility of index if exists\r\n\t\t\t\t\tif (meta.data[index]) {\r\n\t\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tchart.update();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// The percentage of the chart that we cut out of the middle.\r\n\t\tcutoutPercentage: 50,\r\n\r\n\t\t// The rotation of the chart, where the first data arc begins.\r\n\t\trotation: Math.PI * -0.5,\r\n\r\n\t\t// The total circumference of the chart.\r\n\t\tcircumference: Math.PI * 2.0,\r\n\r\n\t\t// Need to override these to give a nice default\r\n\t\ttooltips: {\r\n\t\t\tcallbacks: {\r\n\t\t\t\ttitle: function() {\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t},\r\n\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\r\n\t\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\r\n\r\n\t\t\t\t\tif (helpers.isArray(dataLabel)) {\r\n\t\t\t\t\t\t// show value on first line of multiline label\r\n\t\t\t\t\t\t// need to clone because we are changing the value\r\n\t\t\t\t\t\tdataLabel = dataLabel.slice();\r\n\t\t\t\t\t\tdataLabel[0] += value;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdataLabel += value;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn dataLabel;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tdefaults.pie = helpers.clone(defaults.doughnut);\r\n\thelpers.extend(defaults.pie, {\r\n\t\tcutoutPercentage: 0\r\n\t});\r\n\r\n\r\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\r\n\r\n\t\tdataElementType: Chart.elements.Arc,\r\n\r\n\t\tlinkScales: helpers.noop,\r\n\r\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\r\n\t\tgetRingIndex: function(datasetIndex) {\r\n\t\t\tvar ringIndex = 0;\r\n\r\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\r\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\r\n\t\t\t\t\t++ringIndex;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn ringIndex;\r\n\t\t},\r\n\r\n\t\tupdate: function(reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar chart = me.chart,\r\n\t\t\t\tchartArea = chart.chartArea,\r\n\t\t\t\topts = chart.options,\r\n\t\t\t\tarcOpts = opts.elements.arc,\r\n\t\t\t\tavailableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth,\r\n\t\t\t\tavailableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth,\r\n\t\t\t\tminSize = Math.min(availableWidth, availableHeight),\r\n\t\t\t\toffset = {\r\n\t\t\t\t\tx: 0,\r\n\t\t\t\t\ty: 0\r\n\t\t\t\t},\r\n\t\t\t\tmeta = me.getMeta(),\r\n\t\t\t\tcutoutPercentage = opts.cutoutPercentage,\r\n\t\t\t\tcircumference = opts.circumference;\r\n\r\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\r\n\t\t\tif (circumference < Math.PI * 2.0) {\r\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\r\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\r\n\t\t\t\tvar endAngle = startAngle + circumference;\r\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\r\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\r\n\t\t\t\tvar contains0 = (startAngle <= 0 && 0 <= endAngle) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\r\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\r\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\r\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\r\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\r\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\r\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\r\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\r\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\r\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\r\n\t\t\t}\r\n\r\n\t\t\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\r\n\t\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\r\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\r\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\r\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\r\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\r\n\r\n\t\t\tmeta.total = me.calculateTotal();\r\n\r\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\r\n\t\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\r\n\r\n\t\t\thelpers.each(meta.data, function(arc, index) {\r\n\t\t\t\tme.updateElement(arc, index, reset);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tupdateElement: function(arc, index, reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar chart = me.chart,\r\n\t\t\t\tchartArea = chart.chartArea,\r\n\t\t\t\topts = chart.options,\r\n\t\t\t\tanimationOpts = opts.animation,\r\n\t\t\t\tcenterX = (chartArea.left + chartArea.right) / 2,\r\n\t\t\t\tcenterY = (chartArea.top + chartArea.bottom) / 2,\r\n\t\t\t\tstartAngle = opts.rotation, // non reset case handled later\r\n\t\t\t\tendAngle = opts.rotation, // non reset case handled later\r\n\t\t\t\tdataset = me.getDataset(),\r\n\t\t\t\tcircumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI)),\r\n\t\t\t\tinnerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius,\r\n\t\t\t\touterRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius,\r\n\t\t\t\tvalueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\r\n\r\n\t\t\thelpers.extend(arc, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_datasetIndex: me.index,\r\n\t\t\t\t_index: index,\r\n\r\n\t\t\t\t// Desired view properties\r\n\t\t\t\t_model: {\r\n\t\t\t\t\tx: centerX + chart.offsetX,\r\n\t\t\t\t\ty: centerY + chart.offsetY,\r\n\t\t\t\t\tstartAngle: startAngle,\r\n\t\t\t\t\tendAngle: endAngle,\r\n\t\t\t\t\tcircumference: circumference,\r\n\t\t\t\t\touterRadius: outerRadius,\r\n\t\t\t\t\tinnerRadius: innerRadius,\r\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tvar model = arc._model;\r\n\t\t\t// Resets the visual styles\r\n\t\t\tthis.removeHoverStyle(arc);\r\n\r\n\t\t\t// Set correct angles if not resetting\r\n\t\t\tif (!reset || !animationOpts.animateRotate) {\r\n\t\t\t\tif (index === 0) {\r\n\t\t\t\t\tmodel.startAngle = opts.rotation;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\r\n\t\t\t}\r\n\r\n\t\t\tarc.pivot();\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(arc) {\r\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\r\n\t\t},\r\n\r\n\t\tcalculateTotal: function() {\r\n\t\t\tvar dataset = this.getDataset();\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar total = 0;\r\n\t\t\tvar value;\r\n\r\n\t\t\thelpers.each(meta.data, function(element, index) {\r\n\t\t\t\tvalue = dataset.data[index];\r\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\r\n\t\t\t\t\ttotal += Math.abs(value);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t/* if (total === 0) {\r\n\t\t\t\ttotal = NaN;\r\n\t\t\t}*/\r\n\r\n\t\t\treturn total;\r\n\t\t},\r\n\r\n\t\tcalculateCircumference: function(value) {\r\n\t\t\tvar total = this.getMeta().total;\r\n\t\t\tif (total > 0 && !isNaN(value)) {\r\n\t\t\t\treturn (Math.PI * 2.0) * (value / total);\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t},\r\n\r\n\t\t// gets the max border or hover width to properly scale pie charts\r\n\t\tgetMaxBorderWidth: function(elements) {\r\n\t\t\tvar max = 0,\r\n\t\t\t\tindex = this.index,\r\n\t\t\t\tlength = elements.length,\r\n\t\t\t\tborderWidth,\r\n\t\t\t\thoverWidth;\r\n\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tborderWidth = elements[i]._model ? elements[i]._model.borderWidth : 0;\r\n\t\t\t\thoverWidth = elements[i]._chart ? elements[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\r\n\r\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\r\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\r\n\t\t\t}\r\n\t\t\treturn max;\r\n\t\t}\r\n\t});\r\n};\r\n\r\n},{}],18:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.line = {\r\n\t\tshowLines: true,\r\n\t\tspanGaps: false,\r\n\r\n\t\thover: {\r\n\t\t\tmode: 'label'\r\n\t\t},\r\n\r\n\t\tscales: {\r\n\t\t\txAxes: [{\r\n\t\t\t\ttype: 'category',\r\n\t\t\t\tid: 'x-axis-0'\r\n\t\t\t}],\r\n\t\t\tyAxes: [{\r\n\t\t\t\ttype: 'linear',\r\n\t\t\t\tid: 'y-axis-0'\r\n\t\t\t}]\r\n\t\t}\r\n\t};\r\n\r\n\tfunction lineEnabled(dataset, options) {\r\n\t\treturn helpers.getValueOrDefault(dataset.showLine, options.showLines);\r\n\t}\r\n\r\n\tChart.controllers.line = Chart.DatasetController.extend({\r\n\r\n\t\tdatasetElementType: Chart.elements.Line,\r\n\r\n\t\tdataElementType: Chart.elements.Point,\r\n\r\n\t\tupdate: function(reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar line = meta.dataset;\r\n\t\t\tvar points = meta.data || [];\r\n\t\t\tvar options = me.chart.options;\r\n\t\t\tvar lineElementOptions = options.elements.line;\r\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\r\n\t\t\tvar i, ilen, custom;\r\n\t\t\tvar dataset = me.getDataset();\r\n\t\t\tvar showLine = lineEnabled(dataset, options);\r\n\r\n\t\t\t// Update Line\r\n\t\t\tif (showLine) {\r\n\t\t\t\tcustom = line.custom || {};\r\n\r\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\r\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\r\n\t\t\t\t\tdataset.lineTension = dataset.tension;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Utility\r\n\t\t\t\tline._scale = scale;\r\n\t\t\t\tline._datasetIndex = me.index;\r\n\t\t\t\t// Data\r\n\t\t\t\tline._children = points;\r\n\t\t\t\t// Model\r\n\t\t\t\tline._model = {\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\r\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\r\n\t\t\t\t\t// This option gives lines the ability to span gaps\r\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\r\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, lineElementOptions.tension),\r\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\r\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\r\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\r\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\r\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\r\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\r\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\r\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\r\n\t\t\t\t\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.getValueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\r\n\t\t\t\t\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.getValueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\r\n\t\t\t\t\t// Scale\r\n\t\t\t\t\tscaleTop: scale.top,\r\n\t\t\t\t\tscaleBottom: scale.bottom,\r\n\t\t\t\t\tscaleZero: scale.getBasePixel()\r\n\t\t\t\t};\r\n\r\n\t\t\t\tline.pivot();\r\n\t\t\t}\r\n\r\n\t\t\t// Update Points\r\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\r\n\t\t\t\tme.updateElement(points[i], i, reset);\r\n\t\t\t}\r\n\r\n\t\t\tif (showLine && line._model.tension !== 0) {\r\n\t\t\t\tme.updateBezierControlPoints();\r\n\t\t\t}\r\n\r\n\t\t\t// Now pivot the point for animation\r\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\r\n\t\t\t\tpoints[i].pivot();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetPointBackgroundColor: function(point, index) {\r\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\r\n\t\t\tvar dataset = this.getDataset();\r\n\t\t\tvar custom = point.custom || {};\r\n\r\n\t\t\tif (custom.backgroundColor) {\r\n\t\t\t\tbackgroundColor = custom.backgroundColor;\r\n\t\t\t} else if (dataset.pointBackgroundColor) {\r\n\t\t\t\tbackgroundColor = helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\r\n\t\t\t} else if (dataset.backgroundColor) {\r\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\r\n\t\t\t}\r\n\r\n\t\t\treturn backgroundColor;\r\n\t\t},\r\n\r\n\t\tgetPointBorderColor: function(point, index) {\r\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\r\n\t\t\tvar dataset = this.getDataset();\r\n\t\t\tvar custom = point.custom || {};\r\n\r\n\t\t\tif (custom.borderColor) {\r\n\t\t\t\tborderColor = custom.borderColor;\r\n\t\t\t} else if (dataset.pointBorderColor) {\r\n\t\t\t\tborderColor = helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\r\n\t\t\t} else if (dataset.borderColor) {\r\n\t\t\t\tborderColor = dataset.borderColor;\r\n\t\t\t}\r\n\r\n\t\t\treturn borderColor;\r\n\t\t},\r\n\r\n\t\tgetPointBorderWidth: function(point, index) {\r\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\r\n\t\t\tvar dataset = this.getDataset();\r\n\t\t\tvar custom = point.custom || {};\r\n\r\n\t\t\tif (!isNaN(custom.borderWidth)) {\r\n\t\t\t\tborderWidth = custom.borderWidth;\r\n\t\t\t} else if (!isNaN(dataset.pointBorderWidth)) {\r\n\t\t\t\tborderWidth = helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\r\n\t\t\t} else if (!isNaN(dataset.borderWidth)) {\r\n\t\t\t\tborderWidth = dataset.borderWidth;\r\n\t\t\t}\r\n\r\n\t\t\treturn borderWidth;\r\n\t\t},\r\n\r\n\t\tupdateElement: function(point, index, reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar dataset = me.getDataset();\r\n\t\t\tvar datasetIndex = me.index;\r\n\t\t\tvar value = dataset.data[index];\r\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\tvar pointOptions = me.chart.options.elements.point;\r\n\t\t\tvar x, y;\r\n\t\t\tvar labels = me.chart.data.labels || [];\r\n\t\t\tvar includeOffset = (labels.length === 1 || dataset.data.length === 1) || me.chart.isCombo;\r\n\r\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\r\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n\t\t\t\tdataset.pointRadius = dataset.radius;\r\n\t\t\t}\r\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\r\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\r\n\t\t\t}\r\n\r\n\t\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex, includeOffset);\r\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\r\n\r\n\t\t\t// Utility\r\n\t\t\tpoint._xScale = xScale;\r\n\t\t\tpoint._yScale = yScale;\r\n\t\t\tpoint._datasetIndex = datasetIndex;\r\n\t\t\tpoint._index = index;\r\n\r\n\t\t\t// Desired view properties\r\n\t\t\tpoint._model = {\r\n\t\t\t\tx: x,\r\n\t\t\t\ty: y,\r\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\r\n\t\t\t\t// Appearance\r\n\t\t\t\tradius: custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\r\n\t\t\t\tpointStyle: custom.pointStyle || helpers.getValueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\r\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\r\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\r\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\r\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\r\n\t\t\t\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\r\n\t\t\t\t// Tooltip\r\n\t\t\t\thitRadius: custom.hitRadius || helpers.getValueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tcalculatePointY: function(value, index, datasetIndex) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar chart = me.chart;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\tvar sumPos = 0;\r\n\t\t\tvar sumNeg = 0;\r\n\t\t\tvar i, ds, dsMeta;\r\n\r\n\t\t\tif (yScale.options.stacked) {\r\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\tds = chart.data.datasets[i];\r\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\r\n\t\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\r\n\t\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\r\n\t\t\t\t\t\tif (stackedRightValue < 0) {\r\n\t\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsumPos += stackedRightValue || 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar rightValue = Number(yScale.getRightValue(value));\r\n\t\t\t\tif (rightValue < 0) {\r\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\r\n\t\t\t\t}\r\n\t\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\r\n\t\t\t}\r\n\r\n\t\t\treturn yScale.getPixelForValue(value);\r\n\t\t},\r\n\r\n\t\tupdateBezierControlPoints: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar area = me.chart.chartArea;\r\n\t\t\tvar points = (meta.data || []);\r\n\t\t\tvar i, ilen, point, model, controlPoints;\r\n\r\n\t\t\t// Only consider points that are drawn in case the spanGaps option is used\r\n\t\t\tif (meta.dataset._model.spanGaps) {\r\n\t\t\t\tpoints = points.filter(function(pt) {\r\n\t\t\t\t\treturn !pt._model.skip;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tfunction capControlPoint(pt, min, max) {\r\n\t\t\t\treturn Math.max(Math.min(pt, max), min);\r\n\t\t\t}\r\n\r\n\t\t\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\r\n\t\t\t\thelpers.splineCurveMonotone(points);\r\n\t\t\t} else {\r\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\r\n\t\t\t\t\tpoint = points[i];\r\n\t\t\t\t\tmodel = point._model;\r\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\r\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\r\n\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\r\n\t\t\t\t\t\tmeta.dataset._model.tension\r\n\t\t\t\t\t);\r\n\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\r\n\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\r\n\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\r\n\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (me.chart.options.elements.line.capBezierPoints) {\r\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\r\n\t\t\t\t\tmodel = points[i]._model;\r\n\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\r\n\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\r\n\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\r\n\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdraw: function(ease) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar points = meta.data || [];\r\n\t\t\tvar easingDecimal = ease || 1;\r\n\t\t\tvar i, ilen;\r\n\r\n\t\t\t// Transition Point Locations\r\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\r\n\t\t\t\tpoints[i].transition(easingDecimal);\r\n\t\t\t}\r\n\r\n\t\t\tChart.canvasHelpers.clipArea(me.chart.chart.ctx, me.chart.chartArea);\r\n\t\t\t// Transition and Draw the line\r\n\t\t\tif (lineEnabled(me.getDataset(), me.chart.options)) {\r\n\t\t\t\tmeta.dataset.transition(easingDecimal).draw();\r\n\t\t\t}\r\n\t\t\tChart.canvasHelpers.unclipArea(me.chart.chart.ctx);\r\n\r\n\t\t\t// Draw the points\r\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\r\n\t\t\t\tpoints[i].draw(me.chart.chartArea);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsetHoverStyle: function(point) {\r\n\t\t\t// Point\r\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\r\n\t\t\tvar index = point._index;\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar model = point._model;\r\n\r\n\t\t\tmodel.radius = custom.hoverRadius || helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\r\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(point) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\r\n\t\t\tvar index = point._index;\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar model = point._model;\r\n\r\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\r\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n\t\t\t\tdataset.pointRadius = dataset.radius;\r\n\t\t\t}\r\n\r\n\t\t\tmodel.radius = custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\r\n\t\t\tmodel.backgroundColor = me.getPointBackgroundColor(point, index);\r\n\t\t\tmodel.borderColor = me.getPointBorderColor(point, index);\r\n\t\t\tmodel.borderWidth = me.getPointBorderWidth(point, index);\r\n\t\t}\r\n\t});\r\n};\r\n\r\n},{}],19:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.polarArea = {\r\n\r\n\t\tscale: {\r\n\t\t\ttype: 'radialLinear',\r\n\t\t\tlineArc: true, // so that lines are circular\r\n\t\t\tticks: {\r\n\t\t\t\tbeginAtZero: true\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Boolean - Whether to animate the rotation of the chart\r\n\t\tanimation: {\r\n\t\t\tanimateRotate: true,\r\n\t\t\tanimateScale: true\r\n\t\t},\r\n\r\n\t\tstartAngle: -0.5 * Math.PI,\r\n\t\taspectRatio: 1,\r\n\t\tlegendCallback: function(chart) {\r\n\t\t\tvar text = [];\r\n\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\r\n\r\n\t\t\tvar data = chart.data;\r\n\t\t\tvar datasets = data.datasets;\r\n\t\t\tvar labels = data.labels;\r\n\r\n\t\t\tif (datasets.length) {\r\n\t\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\r\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\r\n\t\t\t\t\tif (labels[i]) {\r\n\t\t\t\t\t\ttext.push(labels[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttext.push('</li>');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttext.push('</ul>');\r\n\t\t\treturn text.join('');\r\n\t\t},\r\n\t\tlegend: {\r\n\t\t\tlabels: {\r\n\t\t\t\tgenerateLabels: function(chart) {\r\n\t\t\t\t\tvar data = chart.data;\r\n\t\t\t\t\tif (data.labels.length && data.datasets.length) {\r\n\t\t\t\t\t\treturn data.labels.map(function(label, i) {\r\n\t\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\r\n\t\t\t\t\t\t\tvar ds = data.datasets[0];\r\n\t\t\t\t\t\t\tvar arc = meta.data[i];\r\n\t\t\t\t\t\t\tvar custom = arc.custom || {};\r\n\t\t\t\t\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\r\n\t\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\r\n\t\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\r\n\t\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\r\n\t\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\r\n\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\ttext: label,\r\n\t\t\t\t\t\t\t\tfillStyle: fill,\r\n\t\t\t\t\t\t\t\tstrokeStyle: stroke,\r\n\t\t\t\t\t\t\t\tlineWidth: bw,\r\n\t\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\r\n\r\n\t\t\t\t\t\t\t\t// Extra data used for toggling the correct item\r\n\t\t\t\t\t\t\t\tindex: i\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tonClick: function(e, legendItem) {\r\n\t\t\t\tvar index = legendItem.index;\r\n\t\t\t\tvar chart = this.chart;\r\n\t\t\t\tvar i, ilen, meta;\r\n\r\n\t\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\r\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\r\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tchart.update();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Need to override these to give a nice default\r\n\t\ttooltips: {\r\n\t\t\tcallbacks: {\r\n\t\t\t\ttitle: function() {\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t},\r\n\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\treturn data.labels[tooltipItem.index] + ': ' + tooltipItem.yLabel;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\r\n\r\n\t\tdataElementType: Chart.elements.Arc,\r\n\r\n\t\tlinkScales: helpers.noop,\r\n\r\n\t\tupdate: function(reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar chart = me.chart;\r\n\t\t\tvar chartArea = chart.chartArea;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar opts = chart.options;\r\n\t\t\tvar arcOpts = opts.elements.arc;\r\n\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\r\n\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\r\n\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\r\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\r\n\r\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\r\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\r\n\r\n\t\t\tmeta.count = me.countVisibleElements();\r\n\r\n\t\t\thelpers.each(meta.data, function(arc, index) {\r\n\t\t\t\tme.updateElement(arc, index, reset);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tupdateElement: function(arc, index, reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar chart = me.chart;\r\n\t\t\tvar dataset = me.getDataset();\r\n\t\t\tvar opts = chart.options;\r\n\t\t\tvar animationOpts = opts.animation;\r\n\t\t\tvar scale = chart.scale;\r\n\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\r\n\t\t\tvar labels = chart.data.labels;\r\n\r\n\t\t\tvar circumference = me.calculateCircumference(dataset.data[index]);\r\n\t\t\tvar centerX = scale.xCenter;\r\n\t\t\tvar centerY = scale.yCenter;\r\n\r\n\t\t\t// If there is NaN data before us, we need to calculate the starting angle correctly.\r\n\t\t\t// We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\r\n\t\t\tvar visibleCount = 0;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tfor (var i = 0; i < index; ++i) {\r\n\t\t\t\tif (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\r\n\t\t\t\t\t++visibleCount;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// var negHalfPI = -0.5 * Math.PI;\r\n\t\t\tvar datasetStartAngle = opts.startAngle;\r\n\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\r\n\t\t\tvar startAngle = datasetStartAngle + (circumference * visibleCount);\r\n\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : circumference);\r\n\r\n\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\r\n\r\n\t\t\thelpers.extend(arc, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_datasetIndex: me.index,\r\n\t\t\t\t_index: index,\r\n\t\t\t\t_scale: scale,\r\n\r\n\t\t\t\t// Desired view properties\r\n\t\t\t\t_model: {\r\n\t\t\t\t\tx: centerX,\r\n\t\t\t\t\ty: centerY,\r\n\t\t\t\t\tinnerRadius: 0,\r\n\t\t\t\t\touterRadius: reset ? resetRadius : distance,\r\n\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\r\n\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\r\n\t\t\t\t\tlabel: getValueAtIndexOrDefault(labels, index, labels[index])\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Apply border and fill style\r\n\t\t\tme.removeHoverStyle(arc);\r\n\r\n\t\t\tarc.pivot();\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(arc) {\r\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\r\n\t\t},\r\n\r\n\t\tcountVisibleElements: function() {\r\n\t\t\tvar dataset = this.getDataset();\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar count = 0;\r\n\r\n\t\t\thelpers.each(meta.data, function(element, index) {\r\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn count;\r\n\t\t},\r\n\r\n\t\tcalculateCircumference: function(value) {\r\n\t\t\tvar count = this.getMeta().count;\r\n\t\t\tif (count > 0 && !isNaN(value)) {\r\n\t\t\t\treturn (2 * Math.PI) / count;\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t});\r\n};\r\n\r\n},{}],20:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.radar = {\r\n\t\taspectRatio: 1,\r\n\t\tscale: {\r\n\t\t\ttype: 'radialLinear'\r\n\t\t},\r\n\t\telements: {\r\n\t\t\tline: {\r\n\t\t\t\ttension: 0 // no bezier in radar\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tChart.controllers.radar = Chart.DatasetController.extend({\r\n\r\n\t\tdatasetElementType: Chart.elements.Line,\r\n\r\n\t\tdataElementType: Chart.elements.Point,\r\n\r\n\t\tlinkScales: helpers.noop,\r\n\r\n\t\tupdate: function(reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar line = meta.dataset;\r\n\t\t\tvar points = meta.data;\r\n\t\t\tvar custom = line.custom || {};\r\n\t\t\tvar dataset = me.getDataset();\r\n\t\t\tvar lineElementOptions = me.chart.options.elements.line;\r\n\t\t\tvar scale = me.chart.scale;\r\n\r\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\r\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\r\n\t\t\t\tdataset.lineTension = dataset.tension;\r\n\t\t\t}\r\n\r\n\t\t\thelpers.extend(meta.dataset, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_datasetIndex: me.index,\r\n\t\t\t\t// Data\r\n\t\t\t\t_children: points,\r\n\t\t\t\t_loop: true,\r\n\t\t\t\t// Model\r\n\t\t\t\t_model: {\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, lineElementOptions.tension),\r\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\r\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\r\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\r\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\r\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\r\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\r\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\r\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\r\n\r\n\t\t\t\t\t// Scale\r\n\t\t\t\t\tscaleTop: scale.top,\r\n\t\t\t\t\tscaleBottom: scale.bottom,\r\n\t\t\t\t\tscaleZero: scale.getBasePosition()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tmeta.dataset.pivot();\r\n\r\n\t\t\t// Update Points\r\n\t\t\thelpers.each(points, function(point, index) {\r\n\t\t\t\tme.updateElement(point, index, reset);\r\n\t\t\t}, me);\r\n\r\n\t\t\t// Update bezier control points\r\n\t\t\tme.updateBezierControlPoints();\r\n\t\t},\r\n\t\tupdateElement: function(point, index, reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar dataset = me.getDataset();\r\n\t\t\tvar scale = me.chart.scale;\r\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\r\n\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\r\n\r\n\t\t\thelpers.extend(point, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_datasetIndex: me.index,\r\n\t\t\t\t_index: index,\r\n\t\t\t\t_scale: scale,\r\n\r\n\t\t\t\t// Desired view properties\r\n\t\t\t\t_model: {\r\n\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\r\n\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\r\n\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\r\n\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\r\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\r\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\r\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\r\n\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.getValueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\r\n\r\n\t\t\t\t\t// Tooltip\r\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.getValueAtIndexOrDefault(dataset.hitRadius, index, pointElementOptions.hitRadius)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\r\n\t\t},\r\n\t\tupdateBezierControlPoints: function() {\r\n\t\t\tvar chartArea = this.chart.chartArea;\r\n\t\t\tvar meta = this.getMeta();\r\n\r\n\t\t\thelpers.each(meta.data, function(point, index) {\r\n\t\t\t\tvar model = point._model;\r\n\t\t\t\tvar controlPoints = helpers.splineCurve(\r\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\r\n\t\t\t\t\tmodel,\r\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\r\n\t\t\t\t\tmodel.tension\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\r\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\r\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\r\n\r\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\r\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\r\n\r\n\t\t\t\t// Now pivot the point for animation\r\n\t\t\t\tpoint.pivot();\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tdraw: function(ease) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar easingDecimal = ease || 1;\r\n\r\n\t\t\t// Transition Point Locations\r\n\t\t\thelpers.each(meta.data, function(point) {\r\n\t\t\t\tpoint.transition(easingDecimal);\r\n\t\t\t});\r\n\r\n\t\t\t// Transition and Draw the line\r\n\t\t\tmeta.dataset.transition(easingDecimal).draw();\r\n\r\n\t\t\t// Draw the points\r\n\t\t\thelpers.each(meta.data, function(point) {\r\n\t\t\t\tpoint.draw();\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tsetHoverStyle: function(point) {\r\n\t\t\t// Point\r\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar index = point._index;\r\n\t\t\tvar model = point._model;\r\n\r\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\r\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(point) {\r\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar index = point._index;\r\n\t\t\tvar model = point._model;\r\n\t\t\tvar pointElementOptions = this.chart.options.elements.point;\r\n\r\n\t\t\tmodel.radius = custom.radius ? custom.radius : helpers.getValueAtIndexOrDefault(dataset.radius, index, pointElementOptions.radius);\r\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\r\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\r\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\r\n\t\t}\r\n\t});\r\n};\r\n\r\n},{}],21:[function(require,module,exports){\r\n/* global window: false */\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.global.animation = {\r\n\t\tduration: 1000,\r\n\t\teasing: 'easeOutQuart',\r\n\t\tonProgress: helpers.noop,\r\n\t\tonComplete: helpers.noop\r\n\t};\r\n\r\n\tChart.Animation = Chart.Element.extend({\r\n\t\tcurrentStep: null, // the current animation step\r\n\t\tnumSteps: 60, // default number of steps\r\n\t\teasing: '', // the easing to use for this animation\r\n\t\trender: null, // render function used by the animation service\r\n\r\n\t\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\r\n\t\tonAnimationComplete: null // user specified callback to fire when the animation finishes\r\n\t});\r\n\r\n\tChart.animationService = {\r\n\t\tframeDuration: 17,\r\n\t\tanimations: [],\r\n\t\tdropFrames: 0,\r\n\t\trequest: null,\r\n\r\n\t\t/**\r\n\t\t * @function Chart.animationService.addAnimation\r\n\t\t * @param chartInstance {ChartController} the chart to animate\r\n\t\t * @param animationObject {IAnimation} the animation that we will animate\r\n\t\t * @param duration {Number} length of animation in ms\r\n\t\t * @param lazy {Boolean} if true, the chart is not marked as animating to enable more responsive interactions\r\n\t\t */\r\n\t\taddAnimation: function(chartInstance, animationObject, duration, lazy) {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\tif (!lazy) {\r\n\t\t\t\tchartInstance.animating = true;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var index = 0; index < me.animations.length; ++index) {\r\n\t\t\t\tif (me.animations[index].chartInstance === chartInstance) {\r\n\t\t\t\t\t// replacing an in progress animation\r\n\t\t\t\t\tme.animations[index].animationObject = animationObject;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tme.animations.push({\r\n\t\t\t\tchartInstance: chartInstance,\r\n\t\t\t\tanimationObject: animationObject\r\n\t\t\t});\r\n\r\n\t\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\r\n\t\t\tif (me.animations.length === 1) {\r\n\t\t\t\tme.requestAnimationFrame();\r\n\t\t\t}\r\n\t\t},\r\n\t\t// Cancel the animation for a given chart instance\r\n\t\tcancelAnimation: function(chartInstance) {\r\n\t\t\tvar index = helpers.findIndex(this.animations, function(animationWrapper) {\r\n\t\t\t\treturn animationWrapper.chartInstance === chartInstance;\r\n\t\t\t});\r\n\r\n\t\t\tif (index !== -1) {\r\n\t\t\t\tthis.animations.splice(index, 1);\r\n\t\t\t\tchartInstance.animating = false;\r\n\t\t\t}\r\n\t\t},\r\n\t\trequestAnimationFrame: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tif (me.request === null) {\r\n\t\t\t\t// Skip animation frame requests until the active one is executed.\r\n\t\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\r\n\t\t\t\t// and 'mouseout' events will trigger multiple renders.\r\n\t\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\r\n\t\t\t\t\tme.request = null;\r\n\t\t\t\t\tme.startDigest();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tstartDigest: function() {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\tvar startTime = Date.now();\r\n\t\t\tvar framesToDrop = 0;\r\n\r\n\t\t\tif (me.dropFrames > 1) {\r\n\t\t\t\tframesToDrop = Math.floor(me.dropFrames);\r\n\t\t\t\tme.dropFrames = me.dropFrames % 1;\r\n\t\t\t}\r\n\r\n\t\t\tvar i = 0;\r\n\t\t\twhile (i < me.animations.length) {\r\n\t\t\t\tif (me.animations[i].animationObject.currentStep === null) {\r\n\t\t\t\t\tme.animations[i].animationObject.currentStep = 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tme.animations[i].animationObject.currentStep += 1 + framesToDrop;\r\n\r\n\t\t\t\tif (me.animations[i].animationObject.currentStep > me.animations[i].animationObject.numSteps) {\r\n\t\t\t\t\tme.animations[i].animationObject.currentStep = me.animations[i].animationObject.numSteps;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tme.animations[i].animationObject.render(me.animations[i].chartInstance, me.animations[i].animationObject);\r\n\t\t\t\tif (me.animations[i].animationObject.onAnimationProgress && me.animations[i].animationObject.onAnimationProgress.call) {\r\n\t\t\t\t\tme.animations[i].animationObject.onAnimationProgress.call(me.animations[i].chartInstance, me.animations[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.animations[i].animationObject.currentStep === me.animations[i].animationObject.numSteps) {\r\n\t\t\t\t\tif (me.animations[i].animationObject.onAnimationComplete && me.animations[i].animationObject.onAnimationComplete.call) {\r\n\t\t\t\t\t\tme.animations[i].animationObject.onAnimationComplete.call(me.animations[i].chartInstance, me.animations[i]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// executed the last frame. Remove the animation.\r\n\t\t\t\t\tme.animations[i].chartInstance.animating = false;\r\n\r\n\t\t\t\t\tme.animations.splice(i, 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t++i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar endTime = Date.now();\r\n\t\t\tvar dropFrames = (endTime - startTime) / me.frameDuration;\r\n\r\n\t\t\tme.dropFrames += dropFrames;\r\n\r\n\t\t\t// Do we have more stuff to animate?\r\n\t\t\tif (me.animations.length > 0) {\r\n\t\t\t\tme.requestAnimationFrame();\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n};\r\n\r\n},{}],22:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\t// Global Chart canvas helpers object for drawing items to canvas\r\n\tvar helpers = Chart.canvasHelpers = {};\r\n\r\n\thelpers.drawPoint = function(ctx, pointStyle, radius, x, y) {\r\n\t\tvar type, edgeLength, xOffset, yOffset, height, size;\r\n\r\n\t\tif (typeof pointStyle === 'object') {\r\n\t\t\ttype = pointStyle.toString();\r\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\r\n\t\t\t\tctx.drawImage(pointStyle, x - pointStyle.width / 2, y - pointStyle.height / 2);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (isNaN(radius) || radius <= 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tswitch (pointStyle) {\r\n\t\t// Default includes circle\r\n\t\tdefault:\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.arc(x, y, radius, 0, Math.PI * 2);\r\n\t\t\tctx.closePath();\r\n\t\t\tctx.fill();\r\n\t\t\tbreak;\r\n\t\tcase 'triangle':\r\n\t\t\tctx.beginPath();\r\n\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\r\n\t\t\theight = edgeLength * Math.sqrt(3) / 2;\r\n\t\t\tctx.moveTo(x - edgeLength / 2, y + height / 3);\r\n\t\t\tctx.lineTo(x + edgeLength / 2, y + height / 3);\r\n\t\t\tctx.lineTo(x, y - 2 * height / 3);\r\n\t\t\tctx.closePath();\r\n\t\t\tctx.fill();\r\n\t\t\tbreak;\r\n\t\tcase 'rect':\r\n\t\t\tsize = 1 / Math.SQRT2 * radius;\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.fillRect(x - size, y - size, 2 * size, 2 * size);\r\n\t\t\tctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\r\n\t\t\tbreak;\r\n\t\tcase 'rectRounded':\r\n\t\t\tvar offset = radius / Math.SQRT2;\r\n\t\t\tvar leftX = x - offset;\r\n\t\t\tvar topY = y - offset;\r\n\t\t\tvar sideSize = Math.SQRT2 * radius;\r\n\t\t\tChart.helpers.drawRoundedRectangle(ctx, leftX, topY, sideSize, sideSize, radius / 2);\r\n\t\t\tctx.fill();\r\n\t\t\tbreak;\r\n\t\tcase 'rectRot':\r\n\t\t\tsize = 1 / Math.SQRT2 * radius;\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(x - size, y);\r\n\t\t\tctx.lineTo(x, y + size);\r\n\t\t\tctx.lineTo(x + size, y);\r\n\t\t\tctx.lineTo(x, y - size);\r\n\t\t\tctx.closePath();\r\n\t\t\tctx.fill();\r\n\t\t\tbreak;\r\n\t\tcase 'cross':\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(x, y + radius);\r\n\t\t\tctx.lineTo(x, y - radius);\r\n\t\t\tctx.moveTo(x - radius, y);\r\n\t\t\tctx.lineTo(x + radius, y);\r\n\t\t\tctx.closePath();\r\n\t\t\tbreak;\r\n\t\tcase 'crossRot':\r\n\t\t\tctx.beginPath();\r\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\r\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\r\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\r\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\r\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\r\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\r\n\t\t\tctx.closePath();\r\n\t\t\tbreak;\r\n\t\tcase 'star':\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(x, y + radius);\r\n\t\t\tctx.lineTo(x, y - radius);\r\n\t\t\tctx.moveTo(x - radius, y);\r\n\t\t\tctx.lineTo(x + radius, y);\r\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\r\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\r\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\r\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\r\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\r\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\r\n\t\t\tctx.closePath();\r\n\t\t\tbreak;\r\n\t\tcase 'line':\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(x - radius, y);\r\n\t\t\tctx.lineTo(x + radius, y);\r\n\t\t\tctx.closePath();\r\n\t\t\tbreak;\r\n\t\tcase 'dash':\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(x, y);\r\n\t\t\tctx.lineTo(x + radius, y);\r\n\t\t\tctx.closePath();\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tctx.stroke();\r\n\t};\r\n\r\n\thelpers.clipArea = function(ctx, clipArea) {\r\n\t\tctx.save();\r\n\t\tctx.beginPath();\r\n\t\tctx.rect(clipArea.left, clipArea.top, clipArea.right - clipArea.left, clipArea.bottom - clipArea.top);\r\n\t\tctx.clip();\r\n\t};\r\n\r\n\thelpers.unclipArea = function(ctx) {\r\n\t\tctx.restore();\r\n\t};\r\n\r\n};\r\n\r\n},{}],23:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\tvar plugins = Chart.plugins;\r\n\tvar platform = Chart.platform;\r\n\r\n\t// Create a dictionary of chart types, to allow for extension of existing types\r\n\tChart.types = {};\r\n\r\n\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\r\n\t// Destroy method on the chart will remove the instance of the chart from this reference.\r\n\tChart.instances = {};\r\n\r\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\r\n\tChart.controllers = {};\r\n\r\n\t/**\r\n\t * Initializes the given config with global and chart default values.\r\n\t */\r\n\tfunction initConfig(config) {\r\n\t\tconfig = config || {};\r\n\r\n\t\t// Do NOT use configMerge() for the data object because this method merges arrays\r\n\t\t// and so would change references to labels and datasets, preventing data updates.\r\n\t\tvar data = config.data = config.data || {};\r\n\t\tdata.datasets = data.datasets || [];\r\n\t\tdata.labels = data.labels || [];\r\n\r\n\t\tconfig.options = helpers.configMerge(\r\n\t\t\tChart.defaults.global,\r\n\t\t\tChart.defaults[config.type],\r\n\t\t\tconfig.options || {});\r\n\r\n\t\treturn config;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the config of the chart\r\n\t * @param chart {Chart.Controller} chart to update the options for\r\n\t */\r\n\tfunction updateConfig(chart) {\r\n\t\tvar newOptions = chart.options;\r\n\r\n\t\t// Update Scale(s) with options\r\n\t\tif (newOptions.scale) {\r\n\t\t\tchart.scale.options = newOptions.scale;\r\n\t\t} else if (newOptions.scales) {\r\n\t\t\tnewOptions.scales.xAxes.concat(newOptions.scales.yAxes).forEach(function(scaleOptions) {\r\n\t\t\t\tchart.scales[scaleOptions.id].options = scaleOptions;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Tooltip\r\n\t\tchart.tooltip._options = newOptions.tooltips;\r\n\t}\r\n\r\n\t/**\r\n\t * @class Chart.Controller\r\n\t * The main controller of a chart.\r\n\t */\r\n\tChart.Controller = function(item, config, instance) {\r\n\t\tvar me = this;\r\n\r\n\t\tconfig = initConfig(config);\r\n\r\n\t\tvar context = platform.acquireContext(item, config);\r\n\t\tvar canvas = context && context.canvas;\r\n\t\tvar height = canvas && canvas.height;\r\n\t\tvar width = canvas && canvas.width;\r\n\r\n\t\tinstance.ctx = context;\r\n\t\tinstance.canvas = canvas;\r\n\t\tinstance.config = config;\r\n\t\tinstance.width = width;\r\n\t\tinstance.height = height;\r\n\t\tinstance.aspectRatio = height? width / height : null;\r\n\r\n\t\tme.id = helpers.uid();\r\n\t\tme.chart = instance;\r\n\t\tme.config = config;\r\n\t\tme.options = config.options;\r\n\t\tme._bufferedRender = false;\r\n\r\n\t\t// Add the chart instance to the global namespace\r\n\t\tChart.instances[me.id] = me;\r\n\r\n\t\tObject.defineProperty(me, 'data', {\r\n\t\t\tget: function() {\r\n\t\t\t\treturn me.config.data;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (!context || !canvas) {\r\n\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\r\n\t\t\t// the chart initialization but after setting basic chart / controller properties that\r\n\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\r\n\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\r\n\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\r\n\t\t\treturn me;\r\n\t\t}\r\n\r\n\t\tme.initialize();\r\n\t\tme.update();\r\n\r\n\t\treturn me;\r\n\t};\r\n\r\n\thelpers.extend(Chart.Controller.prototype, /** @lends Chart.Controller.prototype */ {\r\n\t\tinitialize: function() {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\t// Before init plugin notification\r\n\t\t\tplugins.notify(me, 'beforeInit');\r\n\r\n\t\t\thelpers.retinaScale(me.chart);\r\n\r\n\t\t\tme.bindEvents();\r\n\r\n\t\t\tif (me.options.responsive) {\r\n\t\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\r\n\t\t\t\tme.resize(true);\r\n\t\t\t}\r\n\r\n\t\t\t// Make sure scales have IDs and are built before we build any controllers.\r\n\t\t\tme.ensureScalesHaveIDs();\r\n\t\t\tme.buildScales();\r\n\t\t\tme.initToolTip();\r\n\r\n\t\t\t// After init plugin notification\r\n\t\t\tplugins.notify(me, 'afterInit');\r\n\r\n\t\t\treturn me;\r\n\t\t},\r\n\r\n\t\tclear: function() {\r\n\t\t\thelpers.clear(this.chart);\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tstop: function() {\r\n\t\t\t// Stops any current animation loop occurring\r\n\t\t\tChart.animationService.cancelAnimation(this);\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tresize: function(silent) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar chart = me.chart;\r\n\t\t\tvar options = me.options;\r\n\t\t\tvar canvas = chart.canvas;\r\n\t\t\tvar aspectRatio = (options.maintainAspectRatio && chart.aspectRatio) || null;\r\n\r\n\t\t\t// the canvas render width and height will be casted to integers so make sure that\r\n\t\t\t// the canvas display style uses the same integer values to avoid blurring effect.\r\n\t\t\tvar newWidth = Math.floor(helpers.getMaximumWidth(canvas));\r\n\t\t\tvar newHeight = Math.floor(aspectRatio? newWidth / aspectRatio : helpers.getMaximumHeight(canvas));\r\n\r\n\t\t\tif (chart.width === newWidth && chart.height === newHeight) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tcanvas.width = chart.width = newWidth;\r\n\t\t\tcanvas.height = chart.height = newHeight;\r\n\t\t\tcanvas.style.width = newWidth + 'px';\r\n\t\t\tcanvas.style.height = newHeight + 'px';\r\n\r\n\t\t\thelpers.retinaScale(chart);\r\n\r\n\t\t\tif (!silent) {\r\n\t\t\t\t// Notify any plugins about the resize\r\n\t\t\t\tvar newSize = {width: newWidth, height: newHeight};\r\n\t\t\t\tplugins.notify(me, 'resize', [newSize]);\r\n\r\n\t\t\t\t// Notify of resize\r\n\t\t\t\tif (me.options.onResize) {\r\n\t\t\t\t\tme.options.onResize(me, newSize);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tme.stop();\r\n\t\t\t\tme.update(me.options.responsiveAnimationDuration);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tensureScalesHaveIDs: function() {\r\n\t\t\tvar options = this.options;\r\n\t\t\tvar scalesOptions = options.scales || {};\r\n\t\t\tvar scaleOptions = options.scale;\r\n\r\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\r\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\r\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\r\n\t\t\t});\r\n\r\n\t\t\tif (scaleOptions) {\r\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Builds a map of scale ID to scale object for future lookup.\r\n\t\t */\r\n\t\tbuildScales: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar options = me.options;\r\n\t\t\tvar scales = me.scales = {};\r\n\t\t\tvar items = [];\r\n\r\n\t\t\tif (options.scales) {\r\n\t\t\t\titems = items.concat(\r\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\r\n\t\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category'};\r\n\t\t\t\t\t}),\r\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\r\n\t\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear'};\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tif (options.scale) {\r\n\t\t\t\titems.push({options: options.scale, dtype: 'radialLinear', isDefault: true});\r\n\t\t\t}\r\n\r\n\t\t\thelpers.each(items, function(item) {\r\n\t\t\t\tvar scaleOptions = item.options;\r\n\t\t\t\tvar scaleType = helpers.getValueOrDefault(scaleOptions.type, item.dtype);\r\n\t\t\t\tvar scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\r\n\t\t\t\tif (!scaleClass) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar scale = new scaleClass({\r\n\t\t\t\t\tid: scaleOptions.id,\r\n\t\t\t\t\toptions: scaleOptions,\r\n\t\t\t\t\tctx: me.chart.ctx,\r\n\t\t\t\t\tchart: me\r\n\t\t\t\t});\r\n\r\n\t\t\t\tscales[scale.id] = scale;\r\n\r\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\r\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\r\n\t\t\t\t// make the logic easier and remove some useless? custom code.\r\n\t\t\t\tif (item.isDefault) {\r\n\t\t\t\t\tme.scale = scale;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tChart.scaleService.addScalesToLayout(this);\r\n\t\t},\r\n\r\n\t\tbuildOrUpdateControllers: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar types = [];\r\n\t\t\tvar newControllers = [];\r\n\r\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\r\n\t\t\t\tif (!meta.type) {\r\n\t\t\t\t\tmeta.type = dataset.type || me.config.type;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttypes.push(meta.type);\r\n\r\n\t\t\t\tif (meta.controller) {\r\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmeta.controller = new Chart.controllers[meta.type](me, datasetIndex);\r\n\t\t\t\t\tnewControllers.push(meta.controller);\r\n\t\t\t\t}\r\n\t\t\t}, me);\r\n\r\n\t\t\tif (types.length > 1) {\r\n\t\t\t\tfor (var i = 1; i < types.length; i++) {\r\n\t\t\t\t\tif (types[i] !== types[i - 1]) {\r\n\t\t\t\t\t\tme.isCombo = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn newControllers;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Reset the elements of all datasets\r\n\t\t * @private\r\n\t\t */\r\n\t\tresetElements: function() {\r\n\t\t\tvar me = this;\r\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\r\n\t\t\t}, me);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* Resets the chart back to it's state before the initial animation\r\n\t\t*/\r\n\t\treset: function() {\r\n\t\t\tthis.resetElements();\r\n\t\t\tthis.tooltip.initialize();\r\n\t\t},\r\n\r\n\t\tupdate: function(animationDuration, lazy) {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\tupdateConfig(me);\r\n\r\n\t\t\tif (plugins.notify(me, 'beforeUpdate') === false) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// In case the entire data object changed\r\n\t\t\tme.tooltip._data = me.data;\r\n\r\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\r\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\r\n\r\n\t\t\t// Make sure all dataset controllers have correct meta data counts\r\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\r\n\t\t\t}, me);\r\n\r\n\t\t\tme.updateLayout();\r\n\r\n\t\t\t// Can only reset the new controllers after the scales have been updated\r\n\t\t\thelpers.each(newControllers, function(controller) {\r\n\t\t\t\tcontroller.reset();\r\n\t\t\t});\r\n\r\n\t\t\tme.updateDatasets();\r\n\r\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\r\n\t\t\tplugins.notify(me, 'afterUpdate');\r\n\r\n\t\t\tif (me._bufferedRender) {\r\n\t\t\t\tme._bufferedRequest = {\r\n\t\t\t\t\tlazy: lazy,\r\n\t\t\t\t\tduration: animationDuration\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tme.render(animationDuration, lazy);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\r\n\t\t * hook, in which case, plugins will not be called on `afterLayout`.\r\n\t\t * @private\r\n\t\t */\r\n\t\tupdateLayout: function() {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\tif (plugins.notify(me, 'beforeLayout') === false) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tChart.layoutService.update(this, this.chart.width, this.chart.height);\r\n\r\n\t\t\t/**\r\n\t\t\t * Provided for backward compatibility, use `afterLayout` instead.\r\n\t\t\t * @method IPlugin#afterScaleUpdate\r\n\t\t\t * @deprecated since version 2.5.0\r\n\t\t\t * @todo remove at version 3\r\n\t\t\t */\r\n\t\t\tplugins.notify(me, 'afterScaleUpdate');\r\n\t\t\tplugins.notify(me, 'afterLayout');\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\r\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\r\n\t\t * @private\r\n\t\t */\r\n\t\tupdateDatasets: function() {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\tif (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n\t\t\t\tme.getDatasetMeta(i).controller.update();\r\n\t\t\t}\r\n\r\n\t\t\tplugins.notify(me, 'afterDatasetsUpdate');\r\n\t\t},\r\n\r\n\t\trender: function(duration, lazy) {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\tif (plugins.notify(me, 'beforeRender') === false) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar animationOptions = me.options.animation;\r\n\t\t\tvar onComplete = function() {\r\n\t\t\t\tplugins.notify(me, 'afterRender');\r\n\t\t\t\tvar callback = animationOptions && animationOptions.onComplete;\r\n\t\t\t\tif (callback && callback.call) {\r\n\t\t\t\t\tcallback.call(me);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\r\n\t\t\t\tvar animation = new Chart.Animation();\r\n\t\t\t\tanimation.numSteps = (duration || animationOptions.duration) / 16.66; // 60 fps\r\n\t\t\t\tanimation.easing = animationOptions.easing;\r\n\r\n\t\t\t\t// render function\r\n\t\t\t\tanimation.render = function(chartInstance, animationObject) {\r\n\t\t\t\t\tvar easingFunction = helpers.easingEffects[animationObject.easing];\r\n\t\t\t\t\tvar stepDecimal = animationObject.currentStep / animationObject.numSteps;\r\n\t\t\t\t\tvar easeDecimal = easingFunction(stepDecimal);\r\n\r\n\t\t\t\t\tchartInstance.draw(easeDecimal, stepDecimal, animationObject.currentStep);\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// user events\r\n\t\t\t\tanimation.onAnimationProgress = animationOptions.onProgress;\r\n\t\t\t\tanimation.onAnimationComplete = onComplete;\r\n\r\n\t\t\t\tChart.animationService.addAnimation(me, animation, duration, lazy);\r\n\t\t\t} else {\r\n\t\t\t\tme.draw();\r\n\t\t\t\tonComplete();\r\n\t\t\t}\r\n\r\n\t\t\treturn me;\r\n\t\t},\r\n\r\n\t\tdraw: function(easingValue) {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\tme.clear();\r\n\r\n\t\t\tif (easingValue === undefined || easingValue === null) {\r\n\t\t\t\teasingValue = 1;\r\n\t\t\t}\r\n\r\n\t\t\tif (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Draw all the scales\r\n\t\t\thelpers.each(me.boxes, function(box) {\r\n\t\t\t\tbox.draw(me.chartArea);\r\n\t\t\t}, me);\r\n\r\n\t\t\tif (me.scale) {\r\n\t\t\t\tme.scale.draw();\r\n\t\t\t}\r\n\r\n\t\t\tme.drawDatasets(easingValue);\r\n\r\n\t\t\t// Finally draw the tooltip\r\n\t\t\tme.tooltip.transition(easingValue).draw();\r\n\r\n\t\t\tplugins.notify(me, 'afterDraw', [easingValue]);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\r\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\r\n\t\t * @private\r\n\t\t */\r\n\t\tdrawDatasets: function(easingValue) {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\tif (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Draw each dataset via its respective controller (reversed to support proper line stacking)\r\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tif (me.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\tme.getDatasetMeta(datasetIndex).controller.draw(easingValue);\r\n\t\t\t\t}\r\n\t\t\t}, me, true);\r\n\r\n\t\t\tplugins.notify(me, 'afterDatasetsDraw', [easingValue]);\r\n\t\t},\r\n\r\n\t\t// Get the single element that was clicked on\r\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\r\n\t\tgetElementAtEvent: function(e) {\r\n\t\t\treturn Chart.Interaction.modes.single(this, e);\r\n\t\t},\r\n\r\n\t\tgetElementsAtEvent: function(e) {\r\n\t\t\treturn Chart.Interaction.modes.label(this, e, {intersect: true});\r\n\t\t},\r\n\r\n\t\tgetElementsAtXAxis: function(e) {\r\n\t\t\treturn Chart.Interaction.modes['x-axis'](this, e, {intersect: true});\r\n\t\t},\r\n\r\n\t\tgetElementsAtEventForMode: function(e, mode, options) {\r\n\t\t\tvar method = Chart.Interaction.modes[mode];\r\n\t\t\tif (typeof method === 'function') {\r\n\t\t\t\treturn method(this, e, options);\r\n\t\t\t}\r\n\r\n\t\t\treturn [];\r\n\t\t},\r\n\r\n\t\tgetDatasetAtEvent: function(e) {\r\n\t\t\treturn Chart.Interaction.modes.dataset(this, e, {intersect: true});\r\n\t\t},\r\n\r\n\t\tgetDatasetMeta: function(datasetIndex) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\r\n\t\t\tif (!dataset._meta) {\r\n\t\t\t\tdataset._meta = {};\r\n\t\t\t}\r\n\r\n\t\t\tvar meta = dataset._meta[me.id];\r\n\t\t\tif (!meta) {\r\n\t\t\t\tmeta = dataset._meta[me.id] = {\r\n\t\t\t\t\ttype: null,\r\n\t\t\t\t\tdata: [],\r\n\t\t\t\t\tdataset: null,\r\n\t\t\t\t\tcontroller: null,\r\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\r\n\t\t\t\t\txAxisID: null,\r\n\t\t\t\t\tyAxisID: null\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn meta;\r\n\t\t},\r\n\r\n\t\tgetVisibleDatasetCount: function() {\r\n\t\t\tvar count = 0;\r\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i<ilen; ++i) {\r\n\t\t\t\tif (this.isDatasetVisible(i)) {\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn count;\r\n\t\t},\r\n\r\n\t\tisDatasetVisible: function(datasetIndex) {\r\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\r\n\r\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\r\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\r\n\t\t\treturn typeof meta.hidden === 'boolean'? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\r\n\t\t},\r\n\r\n\t\tgenerateLegend: function() {\r\n\t\t\treturn this.options.legendCallback(this);\r\n\t\t},\r\n\r\n\t\tdestroy: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar canvas = me.chart.canvas;\r\n\t\t\tvar meta, i, ilen;\r\n\r\n\t\t\tme.stop();\r\n\r\n\t\t\t// dataset controllers need to cleanup associated data\r\n\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n\t\t\t\tmeta = me.getDatasetMeta(i);\r\n\t\t\t\tif (meta.controller) {\r\n\t\t\t\t\tmeta.controller.destroy();\r\n\t\t\t\t\tmeta.controller = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (canvas) {\r\n\t\t\t\tme.unbindEvents();\r\n\t\t\t\thelpers.clear(me.chart);\r\n\t\t\t\tplatform.releaseContext(me.chart.ctx);\r\n\t\t\t\tme.chart.canvas = null;\r\n\t\t\t\tme.chart.ctx = null;\r\n\t\t\t}\r\n\r\n\t\t\tplugins.notify(me, 'destroy');\r\n\r\n\t\t\tdelete Chart.instances[me.id];\r\n\t\t},\r\n\r\n\t\ttoBase64Image: function() {\r\n\t\t\treturn this.chart.canvas.toDataURL.apply(this.chart.canvas, arguments);\r\n\t\t},\r\n\r\n\t\tinitToolTip: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tme.tooltip = new Chart.Tooltip({\r\n\t\t\t\t_chart: me.chart,\r\n\t\t\t\t_chartInstance: me,\r\n\t\t\t\t_data: me.data,\r\n\t\t\t\t_options: me.options.tooltips\r\n\t\t\t}, me);\r\n\t\t\tme.tooltip.initialize();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tbindEvents: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar listeners = me._listeners = {};\r\n\t\t\tvar listener = function() {\r\n\t\t\t\tme.eventHandler.apply(me, arguments);\r\n\t\t\t};\r\n\r\n\t\t\thelpers.each(me.options.events, function(type) {\r\n\t\t\t\tplatform.addEventListener(me, type, listener);\r\n\t\t\t\tlisteners[type] = listener;\r\n\t\t\t});\r\n\r\n\t\t\t// Responsiveness is currently based on the use of an iframe, however this method causes\r\n\t\t\t// performance issues and could be troublesome when used with ad blockers. So make sure\r\n\t\t\t// that the user is still able to create a chart without iframe when responsive is false.\r\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/2210\r\n\t\t\tif (me.options.responsive) {\r\n\t\t\t\tlistener = function() {\r\n\t\t\t\t\tme.resize();\r\n\t\t\t\t};\r\n\r\n\t\t\t\tplatform.addEventListener(me, 'resize', listener);\r\n\t\t\t\tlisteners.resize = listener;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tunbindEvents: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar listeners = me._listeners;\r\n\t\t\tif (!listeners) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tdelete me._listeners;\r\n\t\t\thelpers.each(listeners, function(listener, type) {\r\n\t\t\t\tplatform.removeEventListener(me, type, listener);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\r\n\t\t\tvar method = enabled? 'setHoverStyle' : 'removeHoverStyle';\r\n\t\t\tvar element, i, ilen;\r\n\r\n\t\t\tfor (i=0, ilen=elements.length; i<ilen; ++i) {\r\n\t\t\t\telement = elements[i];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\teventHandler: function(e) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar tooltip = me.tooltip;\r\n\r\n\t\t\tif (plugins.notify(me, 'beforeEvent', [e]) === false) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Buffer any update calls so that renders do not occur\r\n\t\t\tme._bufferedRender = true;\r\n\t\t\tme._bufferedRequest = null;\r\n\r\n\t\t\tvar changed = me.handleEvent(e);\r\n\t\t\tchanged |= tooltip && tooltip.handleEvent(e);\r\n\r\n\t\t\tplugins.notify(me, 'afterEvent', [e]);\r\n\r\n\t\t\tvar bufferedRequest = me._bufferedRequest;\r\n\t\t\tif (bufferedRequest) {\r\n\t\t\t\t// If we have an update that was triggered, we need to do a normal render\r\n\t\t\t\tme.render(bufferedRequest.duration, bufferedRequest.lazy);\r\n\t\t\t} else if (changed && !me.animating) {\r\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\r\n\t\t\t\tme.stop();\r\n\r\n\t\t\t\t// We only need to render at this point. Updating will cause scales to be\r\n\t\t\t\t// recomputed generating flicker & using more memory than necessary.\r\n\t\t\t\tme.render(me.options.hover.animationDuration, true);\r\n\t\t\t}\r\n\r\n\t\t\tme._bufferedRender = false;\r\n\t\t\tme._bufferedRequest = null;\r\n\r\n\t\t\treturn me;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Handle an event\r\n\t\t * @private\r\n\t\t * @param {IEvent} event the event to handle\r\n\t\t * @return {Boolean} true if the chart needs to re-render\r\n\t\t */\r\n\t\thandleEvent: function(e) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar options = me.options || {};\r\n\t\t\tvar hoverOptions = options.hover;\r\n\t\t\tvar changed = false;\r\n\r\n\t\t\tme.lastActive = me.lastActive || [];\r\n\r\n\t\t\t// Find Active Elements for hover and tooltips\r\n\t\t\tif (e.type === 'mouseout') {\r\n\t\t\t\tme.active = [];\r\n\t\t\t} else {\r\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\r\n\t\t\t}\r\n\r\n\t\t\t// On Hover hook\r\n\t\t\tif (hoverOptions.onHover) {\r\n\t\t\t\t// Need to call with native event here to not break backwards compatibility\r\n\t\t\t\thoverOptions.onHover.call(me, e.native, me.active);\r\n\t\t\t}\r\n\r\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\r\n\t\t\t\tif (options.onClick) {\r\n\t\t\t\t\t// Use e.native here for backwards compatibility\r\n\t\t\t\t\toptions.onClick.call(me, e.native, me.active);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Remove styling for last active (even if it may still be active)\r\n\t\t\tif (me.lastActive.length) {\r\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\r\n\t\t\t}\r\n\r\n\t\t\t// Built in hover styling\r\n\t\t\tif (me.active.length && hoverOptions.mode) {\r\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\r\n\t\t\t}\r\n\r\n\t\t\tchanged = !helpers.arrayEquals(me.active, me.lastActive);\r\n\r\n\t\t\t// Remember Last Actives\r\n\t\t\tme.lastActive = me.active;\r\n\r\n\t\t\treturn changed;\r\n\t\t}\r\n\t});\r\n};\r\n\r\n},{}],24:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\r\n\r\n\t/**\r\n\t * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\r\n\t * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\r\n\t * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\r\n\t */\r\n\tfunction listenArrayEvents(array, listener) {\r\n\t\tif (array._chartjs) {\r\n\t\t\tarray._chartjs.listeners.push(listener);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tObject.defineProperty(array, '_chartjs', {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable: false,\r\n\t\t\tvalue: {\r\n\t\t\t\tlisteners: [listener]\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tarrayEvents.forEach(function(key) {\r\n\t\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\r\n\t\t\tvar base = array[key];\r\n\r\n\t\t\tObject.defineProperty(array, key, {\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: function() {\r\n\t\t\t\t\tvar args = Array.prototype.slice.call(arguments);\r\n\t\t\t\t\tvar res = base.apply(this, args);\r\n\r\n\t\t\t\t\thelpers.each(array._chartjs.listeners, function(object) {\r\n\t\t\t\t\t\tif (typeof object[method] === 'function') {\r\n\t\t\t\t\t\t\tobject[method].apply(object, args);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\treturn res;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the given array event listener and cleanup extra attached properties (such as\r\n\t * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\r\n\t */\r\n\tfunction unlistenArrayEvents(array, listener) {\r\n\t\tvar stub = array._chartjs;\r\n\t\tif (!stub) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar listeners = stub.listeners;\r\n\t\tvar index = listeners.indexOf(listener);\r\n\t\tif (index !== -1) {\r\n\t\t\tlisteners.splice(index, 1);\r\n\t\t}\r\n\r\n\t\tif (listeners.length > 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tarrayEvents.forEach(function(key) {\r\n\t\t\tdelete array[key];\r\n\t\t});\r\n\r\n\t\tdelete array._chartjs;\r\n\t}\r\n\r\n\t// Base class for all dataset controllers (line, bar, etc)\r\n\tChart.DatasetController = function(chart, datasetIndex) {\r\n\t\tthis.initialize(chart, datasetIndex);\r\n\t};\r\n\r\n\thelpers.extend(Chart.DatasetController.prototype, {\r\n\r\n\t\t/**\r\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\r\n\t\t * @type {Chart.core.element}\r\n\t\t */\r\n\t\tdatasetElementType: null,\r\n\r\n\t\t/**\r\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\r\n\t\t * @type {Chart.core.element}\r\n\t\t */\r\n\t\tdataElementType: null,\r\n\r\n\t\tinitialize: function(chart, datasetIndex) {\r\n\t\t\tvar me = this;\r\n\t\t\tme.chart = chart;\r\n\t\t\tme.index = datasetIndex;\r\n\t\t\tme.linkScales();\r\n\t\t\tme.addElements();\r\n\t\t},\r\n\r\n\t\tupdateIndex: function(datasetIndex) {\r\n\t\t\tthis.index = datasetIndex;\r\n\t\t},\r\n\r\n\t\tlinkScales: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar dataset = me.getDataset();\r\n\r\n\t\t\tif (meta.xAxisID === null) {\r\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\r\n\t\t\t}\r\n\t\t\tif (meta.yAxisID === null) {\r\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetDataset: function() {\r\n\t\t\treturn this.chart.data.datasets[this.index];\r\n\t\t},\r\n\r\n\t\tgetMeta: function() {\r\n\t\t\treturn this.chart.getDatasetMeta(this.index);\r\n\t\t},\r\n\r\n\t\tgetScaleForId: function(scaleID) {\r\n\t\t\treturn this.chart.scales[scaleID];\r\n\t\t},\r\n\r\n\t\treset: function() {\r\n\t\t\tthis.update(true);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tdestroy: function() {\r\n\t\t\tif (this._data) {\r\n\t\t\t\tunlistenArrayEvents(this._data, this);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tcreateMetaDataset: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar type = me.datasetElementType;\r\n\t\t\treturn type && new type({\r\n\t\t\t\t_chart: me.chart.chart,\r\n\t\t\t\t_datasetIndex: me.index\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tcreateMetaData: function(index) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar type = me.dataElementType;\r\n\t\t\treturn type && new type({\r\n\t\t\t\t_chart: me.chart.chart,\r\n\t\t\t\t_datasetIndex: me.index,\r\n\t\t\t\t_index: index\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\taddElements: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar data = me.getDataset().data || [];\r\n\t\t\tvar metaData = meta.data;\r\n\t\t\tvar i, ilen;\r\n\r\n\t\t\tfor (i=0, ilen=data.length; i<ilen; ++i) {\r\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\r\n\t\t\t}\r\n\r\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\r\n\t\t},\r\n\r\n\t\taddElementAndReset: function(index) {\r\n\t\t\tvar element = this.createMetaData(index);\r\n\t\t\tthis.getMeta().data.splice(index, 0, element);\r\n\t\t\tthis.updateElement(element, index, true);\r\n\t\t},\r\n\r\n\t\tbuildOrUpdateElements: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar dataset = me.getDataset();\r\n\t\t\tvar data = dataset.data || (dataset.data = []);\r\n\r\n\t\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\r\n\t\t\t// real-time charts), we need to monitor these data modifications and synchronize\r\n\t\t\t// the internal meta data accordingly.\r\n\t\t\tif (me._data !== data) {\r\n\t\t\t\tif (me._data) {\r\n\t\t\t\t\t// This case happens when the user replaced the data array instance.\r\n\t\t\t\t\tunlistenArrayEvents(me._data, me);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlistenArrayEvents(data, me);\r\n\t\t\t\tme._data = data;\r\n\t\t\t}\r\n\r\n\t\t\t// Re-sync meta data in case the user replaced the data array or if we missed\r\n\t\t\t// any updates and so make sure that we handle number of datapoints changing.\r\n\t\t\tme.resyncElements();\r\n\t\t},\r\n\r\n\t\tupdate: helpers.noop,\r\n\r\n\t\tdraw: function(ease) {\r\n\t\t\tvar easingDecimal = ease || 1;\r\n\t\t\tvar i, len;\r\n\t\t\tvar metaData = this.getMeta().data;\r\n\t\t\tfor (i = 0, len = metaData.length; i < len; ++i) {\r\n\t\t\t\tmetaData[i].transition(easingDecimal).draw();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(element, elementOpts) {\r\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex],\r\n\t\t\t\tindex = element._index,\r\n\t\t\t\tcustom = element.custom || {},\r\n\t\t\t\tvalueOrDefault = helpers.getValueAtIndexOrDefault,\r\n\t\t\t\tmodel = element._model;\r\n\r\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\r\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\r\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\r\n\t\t},\r\n\r\n\t\tsetHoverStyle: function(element) {\r\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex],\r\n\t\t\t\tindex = element._index,\r\n\t\t\t\tcustom = element.custom || {},\r\n\t\t\t\tvalueOrDefault = helpers.getValueAtIndexOrDefault,\r\n\t\t\t\tgetHoverColor = helpers.getHoverColor,\r\n\t\t\t\tmodel = element._model;\r\n\r\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\r\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\r\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tresyncElements: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar data = me.getDataset().data;\r\n\t\t\tvar numMeta = meta.data.length;\r\n\t\t\tvar numData = data.length;\r\n\r\n\t\t\tif (numData < numMeta) {\r\n\t\t\t\tmeta.data.splice(numData, numMeta - numData);\r\n\t\t\t} else if (numData > numMeta) {\r\n\t\t\t\tme.insertElements(numMeta, numData - numMeta);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tinsertElements: function(start, count) {\r\n\t\t\tfor (var i=0; i<count; ++i) {\r\n\t\t\t\tthis.addElementAndReset(start + i);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tonDataPush: function() {\r\n\t\t\tthis.insertElements(this.getDataset().data.length-1, arguments.length);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tonDataPop: function() {\r\n\t\t\tthis.getMeta().data.pop();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tonDataShift: function() {\r\n\t\t\tthis.getMeta().data.shift();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tonDataSplice: function(start, count) {\r\n\t\t\tthis.getMeta().data.splice(start, count);\r\n\t\t\tthis.insertElements(start, arguments.length - 2);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tonDataUnshift: function() {\r\n\t\t\tthis.insertElements(0, arguments.length);\r\n\t\t}\r\n\t});\r\n\r\n\tChart.DatasetController.extend = helpers.inherits;\r\n};\r\n\r\n},{}],25:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.elements = {};\r\n\r\n\tChart.Element = function(configuration) {\r\n\t\thelpers.extend(this, configuration);\r\n\t\tthis.initialize.apply(this, arguments);\r\n\t};\r\n\r\n\thelpers.extend(Chart.Element.prototype, {\r\n\r\n\t\tinitialize: function() {\r\n\t\t\tthis.hidden = false;\r\n\t\t},\r\n\r\n\t\tpivot: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tif (!me._view) {\r\n\t\t\t\tme._view = helpers.clone(me._model);\r\n\t\t\t}\r\n\t\t\tme._start = helpers.clone(me._view);\r\n\t\t\treturn me;\r\n\t\t},\r\n\r\n\t\ttransition: function(ease) {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\tif (!me._view) {\r\n\t\t\t\tme._view = helpers.clone(me._model);\r\n\t\t\t}\r\n\r\n\t\t\t// No animation -> No Transition\r\n\t\t\tif (ease === 1) {\r\n\t\t\t\tme._view = me._model;\r\n\t\t\t\tme._start = null;\r\n\t\t\t\treturn me;\r\n\t\t\t}\r\n\r\n\t\t\tif (!me._start) {\r\n\t\t\t\tme.pivot();\r\n\t\t\t}\r\n\r\n\t\t\thelpers.each(me._model, function(value, key) {\r\n\r\n\t\t\t\tif (key[0] === '_') {\r\n\t\t\t\t\t// Only non-underscored properties\r\n\t\t\t\t// Init if doesn't exist\r\n\t\t\t\t} else if (!me._view.hasOwnProperty(key)) {\r\n\t\t\t\t\tif (typeof value === 'number' && !isNaN(me._view[key])) {\r\n\t\t\t\t\t\tme._view[key] = value * ease;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme._view[key] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t// No unnecessary computations\r\n\t\t\t\t} else if (value === me._view[key]) {\r\n\t\t\t\t\t// It's the same! Woohoo!\r\n\t\t\t\t// Color transitions if possible\r\n\t\t\t\t} else if (typeof value === 'string') {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tvar color = helpers.color(me._model[key]).mix(helpers.color(me._start[key]), ease);\r\n\t\t\t\t\t\tme._view[key] = color.rgbString();\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tme._view[key] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t// Number transitions\r\n\t\t\t\t} else if (typeof value === 'number') {\r\n\t\t\t\t\tvar startVal = me._start[key] !== undefined && isNaN(me._start[key]) === false ? me._start[key] : 0;\r\n\t\t\t\t\tme._view[key] = ((me._model[key] - startVal) * ease) + startVal;\r\n\t\t\t\t// Everything else\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme._view[key] = value;\r\n\t\t\t\t}\r\n\t\t\t}, me);\r\n\r\n\t\t\treturn me;\r\n\t\t},\r\n\r\n\t\ttooltipPosition: function() {\r\n\t\t\treturn {\r\n\t\t\t\tx: this._model.x,\r\n\t\t\t\ty: this._model.y\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\thasValue: function() {\r\n\t\t\treturn helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\r\n\t\t}\r\n\t});\r\n\r\n\tChart.Element.extend = helpers.inherits;\r\n\r\n};\r\n\r\n},{}],26:[function(require,module,exports){\r\n/* global window: false */\r\n/* global document: false */\r\n'use strict';\r\n\r\nvar color = require(3);\r\n\r\nmodule.exports = function(Chart) {\r\n\t// Global Chart helpers object for utility methods and classes\r\n\tvar helpers = Chart.helpers = {};\r\n\r\n\t// -- Basic js utility methods\r\n\thelpers.each = function(loopable, callback, self, reverse) {\r\n\t\t// Check to see if null or undefined firstly.\r\n\t\tvar i, len;\r\n\t\tif (helpers.isArray(loopable)) {\r\n\t\t\tlen = loopable.length;\r\n\t\t\tif (reverse) {\r\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\r\n\t\t\t\t\tcallback.call(self, loopable[i], i);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\t\tcallback.call(self, loopable[i], i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (typeof loopable === 'object') {\r\n\t\t\tvar keys = Object.keys(loopable);\r\n\t\t\tlen = keys.length;\r\n\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\tcallback.call(self, loopable[keys[i]], keys[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\thelpers.clone = function(obj) {\r\n\t\tvar objClone = {};\r\n\t\thelpers.each(obj, function(value, key) {\r\n\t\t\tif (helpers.isArray(value)) {\r\n\t\t\t\tobjClone[key] = value.slice(0);\r\n\t\t\t} else if (typeof value === 'object' && value !== null) {\r\n\t\t\t\tobjClone[key] = helpers.clone(value);\r\n\t\t\t} else {\r\n\t\t\t\tobjClone[key] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn objClone;\r\n\t};\r\n\thelpers.extend = function(base) {\r\n\t\tvar setFn = function(value, key) {\r\n\t\t\tbase[key] = value;\r\n\t\t};\r\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; i++) {\r\n\t\t\thelpers.each(arguments[i], setFn);\r\n\t\t}\r\n\t\treturn base;\r\n\t};\r\n\t// Need a special merge function to chart configs since they are now grouped\r\n\thelpers.configMerge = function(_base) {\r\n\t\tvar base = helpers.clone(_base);\r\n\t\thelpers.each(Array.prototype.slice.call(arguments, 1), function(extension) {\r\n\t\t\thelpers.each(extension, function(value, key) {\r\n\t\t\t\tvar baseHasProperty = base.hasOwnProperty(key);\r\n\t\t\t\tvar baseVal = baseHasProperty ? base[key] : {};\r\n\r\n\t\t\t\tif (key === 'scales') {\r\n\t\t\t\t\t// Scale config merging is complex. Add our own function here for that\r\n\t\t\t\t\tbase[key] = helpers.scaleMerge(baseVal, value);\r\n\t\t\t\t} else if (key === 'scale') {\r\n\t\t\t\t\t// Used in polar area & radar charts since there is only one scale\r\n\t\t\t\t\tbase[key] = helpers.configMerge(baseVal, Chart.scaleService.getScaleDefaults(value.type), value);\r\n\t\t\t\t} else if (baseHasProperty\r\n\t\t\t\t\t\t&& typeof baseVal === 'object'\r\n\t\t\t\t\t\t&& !helpers.isArray(baseVal)\r\n\t\t\t\t\t\t&& baseVal !== null\r\n\t\t\t\t\t\t&& typeof value === 'object'\r\n\t\t\t\t\t\t&& !helpers.isArray(value)) {\r\n\t\t\t\t\t// If we are overwriting an object with an object, do a merge of the properties.\r\n\t\t\t\t\tbase[key] = helpers.configMerge(baseVal, value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// can just overwrite the value in this case\r\n\t\t\t\t\tbase[key] = value;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn base;\r\n\t};\r\n\thelpers.scaleMerge = function(_base, extension) {\r\n\t\tvar base = helpers.clone(_base);\r\n\r\n\t\thelpers.each(extension, function(value, key) {\r\n\t\t\tif (key === 'xAxes' || key === 'yAxes') {\r\n\t\t\t\t// These properties are arrays of items\r\n\t\t\t\tif (base.hasOwnProperty(key)) {\r\n\t\t\t\t\thelpers.each(value, function(valueObj, index) {\r\n\t\t\t\t\t\tvar axisType = helpers.getValueOrDefault(valueObj.type, key === 'xAxes' ? 'category' : 'linear');\r\n\t\t\t\t\t\tvar axisDefaults = Chart.scaleService.getScaleDefaults(axisType);\r\n\t\t\t\t\t\tif (index >= base[key].length || !base[key][index].type) {\r\n\t\t\t\t\t\t\tbase[key].push(helpers.configMerge(axisDefaults, valueObj));\r\n\t\t\t\t\t\t} else if (valueObj.type && valueObj.type !== base[key][index].type) {\r\n\t\t\t\t\t\t\t// Type changed. Bring in the new defaults before we bring in valueObj so that valueObj can override the correct scale defaults\r\n\t\t\t\t\t\t\tbase[key][index] = helpers.configMerge(base[key][index], axisDefaults, valueObj);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Type is the same\r\n\t\t\t\t\t\t\tbase[key][index] = helpers.configMerge(base[key][index], valueObj);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbase[key] = [];\r\n\t\t\t\t\thelpers.each(value, function(valueObj) {\r\n\t\t\t\t\t\tvar axisType = helpers.getValueOrDefault(valueObj.type, key === 'xAxes' ? 'category' : 'linear');\r\n\t\t\t\t\t\tbase[key].push(helpers.configMerge(Chart.scaleService.getScaleDefaults(axisType), valueObj));\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else if (base.hasOwnProperty(key) && typeof base[key] === 'object' && base[key] !== null && typeof value === 'object') {\r\n\t\t\t\t// If we are overwriting an object with an object, do a merge of the properties.\r\n\t\t\t\tbase[key] = helpers.configMerge(base[key], value);\r\n\r\n\t\t\t} else {\r\n\t\t\t\t// can just overwrite the value in this case\r\n\t\t\t\tbase[key] = value;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn base;\r\n\t};\r\n\thelpers.getValueAtIndexOrDefault = function(value, index, defaultValue) {\r\n\t\tif (value === undefined || value === null) {\r\n\t\t\treturn defaultValue;\r\n\t\t}\r\n\r\n\t\tif (helpers.isArray(value)) {\r\n\t\t\treturn index < value.length ? value[index] : defaultValue;\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t};\r\n\thelpers.getValueOrDefault = function(value, defaultValue) {\r\n\t\treturn value === undefined ? defaultValue : value;\r\n\t};\r\n\thelpers.indexOf = Array.prototype.indexOf?\r\n\t\tfunction(array, item) {\r\n\t\t\treturn array.indexOf(item);\r\n\t\t}:\r\n\t\tfunction(array, item) {\r\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\r\n\t\t\t\tif (array[i] === item) {\r\n\t\t\t\t\treturn i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn -1;\r\n\t\t};\r\n\thelpers.where = function(collection, filterCallback) {\r\n\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\r\n\t\t\treturn collection.filter(filterCallback);\r\n\t\t}\r\n\t\tvar filtered = [];\r\n\r\n\t\thelpers.each(collection, function(item) {\r\n\t\t\tif (filterCallback(item)) {\r\n\t\t\t\tfiltered.push(item);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn filtered;\r\n\t};\r\n\thelpers.findIndex = Array.prototype.findIndex?\r\n\t\tfunction(array, callback, scope) {\r\n\t\t\treturn array.findIndex(callback, scope);\r\n\t\t} :\r\n\t\tfunction(array, callback, scope) {\r\n\t\t\tscope = scope === undefined? array : scope;\r\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\r\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\r\n\t\t\t\t\treturn i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn -1;\r\n\t\t};\r\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n\t\t// Default to start of the array\r\n\t\tif (startIndex === undefined || startIndex === null) {\r\n\t\t\tstartIndex = -1;\r\n\t\t}\r\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\r\n\t\t\tvar currentItem = arrayToSearch[i];\r\n\t\t\tif (filterCallback(currentItem)) {\r\n\t\t\t\treturn currentItem;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n\t\t// Default to end of the array\r\n\t\tif (startIndex === undefined || startIndex === null) {\r\n\t\t\tstartIndex = arrayToSearch.length;\r\n\t\t}\r\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\r\n\t\t\tvar currentItem = arrayToSearch[i];\r\n\t\t\tif (filterCallback(currentItem)) {\r\n\t\t\t\treturn currentItem;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\thelpers.inherits = function(extensions) {\r\n\t\t// Basic javascript inheritance based on the model created in Backbone.js\r\n\t\tvar me = this;\r\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\r\n\t\t\treturn me.apply(this, arguments);\r\n\t\t};\r\n\r\n\t\tvar Surrogate = function() {\r\n\t\t\tthis.constructor = ChartElement;\r\n\t\t};\r\n\t\tSurrogate.prototype = me.prototype;\r\n\t\tChartElement.prototype = new Surrogate();\r\n\r\n\t\tChartElement.extend = helpers.inherits;\r\n\r\n\t\tif (extensions) {\r\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\r\n\t\t}\r\n\r\n\t\tChartElement.__super__ = me.prototype;\r\n\r\n\t\treturn ChartElement;\r\n\t};\r\n\thelpers.noop = function() {};\r\n\thelpers.uid = (function() {\r\n\t\tvar id = 0;\r\n\t\treturn function() {\r\n\t\t\treturn id++;\r\n\t\t};\r\n\t}());\r\n\t// -- Math methods\r\n\thelpers.isNumber = function(n) {\r\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\r\n\t};\r\n\thelpers.almostEquals = function(x, y, epsilon) {\r\n\t\treturn Math.abs(x - y) < epsilon;\r\n\t};\r\n\thelpers.almostWhole = function(x, epsilon) {\r\n\t\tvar rounded = Math.round(x);\r\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\r\n\t};\r\n\thelpers.max = function(array) {\r\n\t\treturn array.reduce(function(max, value) {\r\n\t\t\tif (!isNaN(value)) {\r\n\t\t\t\treturn Math.max(max, value);\r\n\t\t\t}\r\n\t\t\treturn max;\r\n\t\t}, Number.NEGATIVE_INFINITY);\r\n\t};\r\n\thelpers.min = function(array) {\r\n\t\treturn array.reduce(function(min, value) {\r\n\t\t\tif (!isNaN(value)) {\r\n\t\t\t\treturn Math.min(min, value);\r\n\t\t\t}\r\n\t\t\treturn min;\r\n\t\t}, Number.POSITIVE_INFINITY);\r\n\t};\r\n\thelpers.sign = Math.sign?\r\n\t\tfunction(x) {\r\n\t\t\treturn Math.sign(x);\r\n\t\t} :\r\n\t\tfunction(x) {\r\n\t\t\tx = +x; // convert to a number\r\n\t\t\tif (x === 0 || isNaN(x)) {\r\n\t\t\t\treturn x;\r\n\t\t\t}\r\n\t\t\treturn x > 0 ? 1 : -1;\r\n\t\t};\r\n\thelpers.log10 = Math.log10?\r\n\t\tfunction(x) {\r\n\t\t\treturn Math.log10(x);\r\n\t\t} :\r\n\t\tfunction(x) {\r\n\t\t\treturn Math.log(x) / Math.LN10;\r\n\t\t};\r\n\thelpers.toRadians = function(degrees) {\r\n\t\treturn degrees * (Math.PI / 180);\r\n\t};\r\n\thelpers.toDegrees = function(radians) {\r\n\t\treturn radians * (180 / Math.PI);\r\n\t};\r\n\t// Gets the angle from vertical upright to the point about a centre.\r\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\r\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x,\r\n\t\t\tdistanceFromYCenter = anglePoint.y - centrePoint.y,\r\n\t\t\tradialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\r\n\r\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\r\n\r\n\t\tif (angle < (-0.5 * Math.PI)) {\r\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tangle: angle,\r\n\t\t\tdistance: radialDistanceFromCenter\r\n\t\t};\r\n\t};\r\n\thelpers.distanceBetweenPoints = function(pt1, pt2) {\r\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\r\n\t};\r\n\thelpers.aliasPixel = function(pixelWidth) {\r\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\r\n\t};\r\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\r\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\r\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\r\n\r\n\t\t// This function must also respect \"skipped\" points\r\n\r\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint,\r\n\t\t\tcurrent = middlePoint,\r\n\t\t\tnext = afterPoint.skip ? middlePoint : afterPoint;\r\n\r\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\r\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\r\n\r\n\t\tvar s01 = d01 / (d01 + d12);\r\n\t\tvar s12 = d12 / (d01 + d12);\r\n\r\n\t\t// If all points are the same, s01 & s02 will be inf\r\n\t\ts01 = isNaN(s01) ? 0 : s01;\r\n\t\ts12 = isNaN(s12) ? 0 : s12;\r\n\r\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\r\n\t\tvar fb = t * s12;\r\n\r\n\t\treturn {\r\n\t\t\tprevious: {\r\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\r\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\r\n\t\t\t},\r\n\t\t\tnext: {\r\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\r\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\thelpers.EPSILON = Number.EPSILON || 1e-14;\r\n\thelpers.splineCurveMonotone = function(points) {\r\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\r\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\r\n\t\t// between the dataset discrete points due to the interpolation.\r\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\r\n\r\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\r\n\t\t\treturn {\r\n\t\t\t\tmodel: point._model,\r\n\t\t\t\tdeltaK: 0,\r\n\t\t\t\tmK: 0\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\r\n\t\tvar pointsLen = pointsWithTangents.length;\r\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\r\n\t\tfor (i = 0; i < pointsLen; ++i) {\r\n\t\t\tpointCurrent = pointsWithTangents[i];\r\n\t\t\tif (pointCurrent.model.skip) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\r\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\r\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\r\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\r\n\r\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\r\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\r\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\r\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\r\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\r\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\r\n\t\t\t\tpointCurrent.mK = 0;\r\n\t\t\t} else {\r\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Adjust tangents to ensure monotonic properties\r\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\r\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\r\n\t\t\tpointCurrent = pointsWithTangents[i];\r\n\t\t\tpointAfter = pointsWithTangents[i + 1];\r\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\r\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\r\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\r\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\r\n\t\t\tif (squaredMagnitude <= 9) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\r\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\r\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\r\n\t\t}\r\n\r\n\t\t// Compute control points\r\n\t\tvar deltaX;\r\n\t\tfor (i = 0; i < pointsLen; ++i) {\r\n\t\t\tpointCurrent = pointsWithTangents[i];\r\n\t\t\tif (pointCurrent.model.skip) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\r\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\r\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\r\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\r\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\r\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\r\n\t\t\t}\r\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\r\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\r\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\r\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\thelpers.nextItem = function(collection, index, loop) {\r\n\t\tif (loop) {\r\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\r\n\t\t}\r\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\r\n\t};\r\n\thelpers.previousItem = function(collection, index, loop) {\r\n\t\tif (loop) {\r\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\r\n\t\t}\r\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\r\n\t};\r\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\r\n\thelpers.niceNum = function(range, round) {\r\n\t\tvar exponent = Math.floor(helpers.log10(range));\r\n\t\tvar fraction = range / Math.pow(10, exponent);\r\n\t\tvar niceFraction;\r\n\r\n\t\tif (round) {\r\n\t\t\tif (fraction < 1.5) {\r\n\t\t\t\tniceFraction = 1;\r\n\t\t\t} else if (fraction < 3) {\r\n\t\t\t\tniceFraction = 2;\r\n\t\t\t} else if (fraction < 7) {\r\n\t\t\t\tniceFraction = 5;\r\n\t\t\t} else {\r\n\t\t\t\tniceFraction = 10;\r\n\t\t\t}\r\n\t\t} else if (fraction <= 1.0) {\r\n\t\t\tniceFraction = 1;\r\n\t\t} else if (fraction <= 2) {\r\n\t\t\tniceFraction = 2;\r\n\t\t} else if (fraction <= 5) {\r\n\t\t\tniceFraction = 5;\r\n\t\t} else {\r\n\t\t\tniceFraction = 10;\r\n\t\t}\r\n\r\n\t\treturn niceFraction * Math.pow(10, exponent);\r\n\t};\r\n\t// Easing functions adapted from Robert Penner's easing equations\r\n\t// http://www.robertpenner.com/easing/\r\n\tvar easingEffects = helpers.easingEffects = {\r\n\t\tlinear: function(t) {\r\n\t\t\treturn t;\r\n\t\t},\r\n\t\teaseInQuad: function(t) {\r\n\t\t\treturn t * t;\r\n\t\t},\r\n\t\teaseOutQuad: function(t) {\r\n\t\t\treturn -1 * t * (t - 2);\r\n\t\t},\r\n\t\teaseInOutQuad: function(t) {\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * t * t;\r\n\t\t\t}\r\n\t\t\treturn -1 / 2 * ((--t) * (t - 2) - 1);\r\n\t\t},\r\n\t\teaseInCubic: function(t) {\r\n\t\t\treturn t * t * t;\r\n\t\t},\r\n\t\teaseOutCubic: function(t) {\r\n\t\t\treturn 1 * ((t = t / 1 - 1) * t * t + 1);\r\n\t\t},\r\n\t\teaseInOutCubic: function(t) {\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * t * t * t;\r\n\t\t\t}\r\n\t\t\treturn 1 / 2 * ((t -= 2) * t * t + 2);\r\n\t\t},\r\n\t\teaseInQuart: function(t) {\r\n\t\t\treturn t * t * t * t;\r\n\t\t},\r\n\t\teaseOutQuart: function(t) {\r\n\t\t\treturn -1 * ((t = t / 1 - 1) * t * t * t - 1);\r\n\t\t},\r\n\t\teaseInOutQuart: function(t) {\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * t * t * t * t;\r\n\t\t\t}\r\n\t\t\treturn -1 / 2 * ((t -= 2) * t * t * t - 2);\r\n\t\t},\r\n\t\teaseInQuint: function(t) {\r\n\t\t\treturn 1 * (t /= 1) * t * t * t * t;\r\n\t\t},\r\n\t\teaseOutQuint: function(t) {\r\n\t\t\treturn 1 * ((t = t / 1 - 1) * t * t * t * t + 1);\r\n\t\t},\r\n\t\teaseInOutQuint: function(t) {\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * t * t * t * t * t;\r\n\t\t\t}\r\n\t\t\treturn 1 / 2 * ((t -= 2) * t * t * t * t + 2);\r\n\t\t},\r\n\t\teaseInSine: function(t) {\r\n\t\t\treturn -1 * Math.cos(t / 1 * (Math.PI / 2)) + 1;\r\n\t\t},\r\n\t\teaseOutSine: function(t) {\r\n\t\t\treturn 1 * Math.sin(t / 1 * (Math.PI / 2));\r\n\t\t},\r\n\t\teaseInOutSine: function(t) {\r\n\t\t\treturn -1 / 2 * (Math.cos(Math.PI * t / 1) - 1);\r\n\t\t},\r\n\t\teaseInExpo: function(t) {\r\n\t\t\treturn (t === 0) ? 1 : 1 * Math.pow(2, 10 * (t / 1 - 1));\r\n\t\t},\r\n\t\teaseOutExpo: function(t) {\r\n\t\t\treturn (t === 1) ? 1 : 1 * (-Math.pow(2, -10 * t / 1) + 1);\r\n\t\t},\r\n\t\teaseInOutExpo: function(t) {\r\n\t\t\tif (t === 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tif (t === 1) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * Math.pow(2, 10 * (t - 1));\r\n\t\t\t}\r\n\t\t\treturn 1 / 2 * (-Math.pow(2, -10 * --t) + 2);\r\n\t\t},\r\n\t\teaseInCirc: function(t) {\r\n\t\t\tif (t >= 1) {\r\n\t\t\t\treturn t;\r\n\t\t\t}\r\n\t\t\treturn -1 * (Math.sqrt(1 - (t /= 1) * t) - 1);\r\n\t\t},\r\n\t\teaseOutCirc: function(t) {\r\n\t\t\treturn 1 * Math.sqrt(1 - (t = t / 1 - 1) * t);\r\n\t\t},\r\n\t\teaseInOutCirc: function(t) {\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn -1 / 2 * (Math.sqrt(1 - t * t) - 1);\r\n\t\t\t}\r\n\t\t\treturn 1 / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1);\r\n\t\t},\r\n\t\teaseInElastic: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\tvar p = 0;\r\n\t\t\tvar a = 1;\r\n\t\t\tif (t === 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tif ((t /= 1) === 1) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\tif (!p) {\r\n\t\t\t\tp = 1 * 0.3;\r\n\t\t\t}\r\n\t\t\tif (a < Math.abs(1)) {\r\n\t\t\t\ta = 1;\r\n\t\t\t\ts = p / 4;\r\n\t\t\t} else {\r\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\r\n\t\t\t}\r\n\t\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\r\n\t\t},\r\n\t\teaseOutElastic: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\tvar p = 0;\r\n\t\t\tvar a = 1;\r\n\t\t\tif (t === 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tif ((t /= 1) === 1) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\tif (!p) {\r\n\t\t\t\tp = 1 * 0.3;\r\n\t\t\t}\r\n\t\t\tif (a < Math.abs(1)) {\r\n\t\t\t\ta = 1;\r\n\t\t\t\ts = p / 4;\r\n\t\t\t} else {\r\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\r\n\t\t\t}\r\n\t\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) + 1;\r\n\t\t},\r\n\t\teaseInOutElastic: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\tvar p = 0;\r\n\t\t\tvar a = 1;\r\n\t\t\tif (t === 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tif ((t /= 1 / 2) === 2) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\tif (!p) {\r\n\t\t\t\tp = 1 * (0.3 * 1.5);\r\n\t\t\t}\r\n\t\t\tif (a < Math.abs(1)) {\r\n\t\t\t\ta = 1;\r\n\t\t\t\ts = p / 4;\r\n\t\t\t} else {\r\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\r\n\t\t\t}\r\n\t\t\tif (t < 1) {\r\n\t\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\r\n\t\t\t}\r\n\t\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) * 0.5 + 1;\r\n\t\t},\r\n\t\teaseInBack: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\treturn 1 * (t /= 1) * t * ((s + 1) * t - s);\r\n\t\t},\r\n\t\teaseOutBack: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\treturn 1 * ((t = t / 1 - 1) * t * ((s + 1) * t + s) + 1);\r\n\t\t},\r\n\t\teaseInOutBack: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * (t * t * (((s *= (1.525)) + 1) * t - s));\r\n\t\t\t}\r\n\t\t\treturn 1 / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\r\n\t\t},\r\n\t\teaseInBounce: function(t) {\r\n\t\t\treturn 1 - easingEffects.easeOutBounce(1 - t);\r\n\t\t},\r\n\t\teaseOutBounce: function(t) {\r\n\t\t\tif ((t /= 1) < (1 / 2.75)) {\r\n\t\t\t\treturn 1 * (7.5625 * t * t);\r\n\t\t\t} else if (t < (2 / 2.75)) {\r\n\t\t\t\treturn 1 * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75);\r\n\t\t\t} else if (t < (2.5 / 2.75)) {\r\n\t\t\t\treturn 1 * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375);\r\n\t\t\t}\r\n\t\t\treturn 1 * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375);\r\n\t\t},\r\n\t\teaseInOutBounce: function(t) {\r\n\t\t\tif (t < 1 / 2) {\r\n\t\t\t\treturn easingEffects.easeInBounce(t * 2) * 0.5;\r\n\t\t\t}\r\n\t\t\treturn easingEffects.easeOutBounce(t * 2 - 1) * 0.5 + 1 * 0.5;\r\n\t\t}\r\n\t};\r\n\t// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\r\n\thelpers.requestAnimFrame = (function() {\r\n\t\treturn window.requestAnimationFrame ||\r\n\t\t\twindow.webkitRequestAnimationFrame ||\r\n\t\t\twindow.mozRequestAnimationFrame ||\r\n\t\t\twindow.oRequestAnimationFrame ||\r\n\t\t\twindow.msRequestAnimationFrame ||\r\n\t\t\tfunction(callback) {\r\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\r\n\t\t\t};\r\n\t}());\r\n\t// -- DOM methods\r\n\thelpers.getRelativePosition = function(evt, chart) {\r\n\t\tvar mouseX, mouseY;\r\n\t\tvar e = evt.originalEvent || evt,\r\n\t\t\tcanvas = evt.currentTarget || evt.srcElement,\r\n\t\t\tboundingRect = canvas.getBoundingClientRect();\r\n\r\n\t\tvar touches = e.touches;\r\n\t\tif (touches && touches.length > 0) {\r\n\t\t\tmouseX = touches[0].clientX;\r\n\t\t\tmouseY = touches[0].clientY;\r\n\r\n\t\t} else {\r\n\t\t\tmouseX = e.clientX;\r\n\t\t\tmouseY = e.clientY;\r\n\t\t}\r\n\r\n\t\t// Scale mouse coordinates into canvas coordinates\r\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\r\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\r\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\r\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\r\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\r\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\r\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\r\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\r\n\r\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\r\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\r\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\r\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\r\n\r\n\t\treturn {\r\n\t\t\tx: mouseX,\r\n\t\t\ty: mouseY\r\n\t\t};\r\n\r\n\t};\r\n\thelpers.addEvent = function(node, eventType, method) {\r\n\t\tif (node.addEventListener) {\r\n\t\t\tnode.addEventListener(eventType, method);\r\n\t\t} else if (node.attachEvent) {\r\n\t\t\tnode.attachEvent('on' + eventType, method);\r\n\t\t} else {\r\n\t\t\tnode['on' + eventType] = method;\r\n\t\t}\r\n\t};\r\n\thelpers.removeEvent = function(node, eventType, handler) {\r\n\t\tif (node.removeEventListener) {\r\n\t\t\tnode.removeEventListener(eventType, handler, false);\r\n\t\t} else if (node.detachEvent) {\r\n\t\t\tnode.detachEvent('on' + eventType, handler);\r\n\t\t} else {\r\n\t\t\tnode['on' + eventType] = helpers.noop;\r\n\t\t}\r\n\t};\r\n\r\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\r\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\r\n\t\tvar valueInPixels;\r\n\t\tif (typeof(styleValue) === 'string') {\r\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\r\n\r\n\t\t\tif (styleValue.indexOf('%') !== -1) {\r\n\t\t\t\t// percentage * size in dimension\r\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvalueInPixels = styleValue;\r\n\t\t}\r\n\r\n\t\treturn valueInPixels;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if the given value contains an effective constraint.\r\n\t * @private\r\n\t */\r\n\tfunction isConstrainedValue(value) {\r\n\t\treturn value !== undefined && value !== null && value !== 'none';\r\n\t}\r\n\r\n\t// Private helper to get a constraint dimension\r\n\t// @param domNode : the node to check the constraint on\r\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\r\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\r\n\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\r\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\r\n\t\tvar view = document.defaultView;\r\n\t\tvar parentNode = domNode.parentNode;\r\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\r\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\r\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\r\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\r\n\t\tvar infinity = Number.POSITIVE_INFINITY;\r\n\r\n\t\tif (hasCNode || hasCContainer) {\r\n\t\t\treturn Math.min(\r\n\t\t\t\thasCNode? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\r\n\t\t\t\thasCContainer? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\r\n\t\t}\r\n\r\n\t\treturn 'none';\r\n\t}\r\n\t// returns Number or undefined if no constraint\r\n\thelpers.getConstraintWidth = function(domNode) {\r\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\r\n\t};\r\n\t// returns Number or undefined if no constraint\r\n\thelpers.getConstraintHeight = function(domNode) {\r\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\r\n\t};\r\n\thelpers.getMaximumWidth = function(domNode) {\r\n\t\tvar container = domNode.parentNode;\r\n\t\tvar paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\r\n\t\tvar paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\r\n\t\tvar w = container.clientWidth - paddingLeft - paddingRight;\r\n\t\tvar cw = helpers.getConstraintWidth(domNode);\r\n\t\treturn isNaN(cw)? w : Math.min(w, cw);\r\n\t};\r\n\thelpers.getMaximumHeight = function(domNode) {\r\n\t\tvar container = domNode.parentNode;\r\n\t\tvar paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\r\n\t\tvar paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\r\n\t\tvar h = container.clientHeight - paddingTop - paddingBottom;\r\n\t\tvar ch = helpers.getConstraintHeight(domNode);\r\n\t\treturn isNaN(ch)? h : Math.min(h, ch);\r\n\t};\r\n\thelpers.getStyle = function(el, property) {\r\n\t\treturn el.currentStyle ?\r\n\t\t\tel.currentStyle[property] :\r\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\r\n\t};\r\n\thelpers.retinaScale = function(chart) {\r\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = window.devicePixelRatio || 1;\r\n\t\tif (pixelRatio === 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar canvas = chart.canvas;\r\n\t\tvar height = chart.height;\r\n\t\tvar width = chart.width;\r\n\r\n\t\tcanvas.height = height * pixelRatio;\r\n\t\tcanvas.width = width * pixelRatio;\r\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\r\n\r\n\t\t// If no style has been set on the canvas, the render size is used as display size,\r\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\r\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\r\n\t\tcanvas.style.height = height + 'px';\r\n\t\tcanvas.style.width = width + 'px';\r\n\t};\r\n\t// -- Canvas methods\r\n\thelpers.clear = function(chart) {\r\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\r\n\t};\r\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\r\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\r\n\t};\r\n\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\r\n\t\tcache = cache || {};\r\n\t\tvar data = cache.data = cache.data || {};\r\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\r\n\r\n\t\tif (cache.font !== font) {\r\n\t\t\tdata = cache.data = {};\r\n\t\t\tgc = cache.garbageCollect = [];\r\n\t\t\tcache.font = font;\r\n\t\t}\r\n\r\n\t\tctx.font = font;\r\n\t\tvar longest = 0;\r\n\t\thelpers.each(arrayOfThings, function(thing) {\r\n\t\t\t// Undefined strings and arrays should not be measured\r\n\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\r\n\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\r\n\t\t\t} else if (helpers.isArray(thing)) {\r\n\t\t\t\t// if it is an array lets measure each element\r\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\r\n\t\t\t\thelpers.each(thing, function(nestedThing) {\r\n\t\t\t\t\t// Undefined strings and arrays should not be measured\r\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\r\n\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tvar gcLen = gc.length / 2;\r\n\t\tif (gcLen > arrayOfThings.length) {\r\n\t\t\tfor (var i = 0; i < gcLen; i++) {\r\n\t\t\t\tdelete data[gc[i]];\r\n\t\t\t}\r\n\t\t\tgc.splice(0, gcLen);\r\n\t\t}\r\n\t\treturn longest;\r\n\t};\r\n\thelpers.measureText = function(ctx, data, gc, longest, string) {\r\n\t\tvar textWidth = data[string];\r\n\t\tif (!textWidth) {\r\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\r\n\t\t\tgc.push(string);\r\n\t\t}\r\n\t\tif (textWidth > longest) {\r\n\t\t\tlongest = textWidth;\r\n\t\t}\r\n\t\treturn longest;\r\n\t};\r\n\thelpers.numberOfLabelLines = function(arrayOfThings) {\r\n\t\tvar numberOfLines = 1;\r\n\t\thelpers.each(arrayOfThings, function(thing) {\r\n\t\t\tif (helpers.isArray(thing)) {\r\n\t\t\t\tif (thing.length > numberOfLines) {\r\n\t\t\t\t\tnumberOfLines = thing.length;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn numberOfLines;\r\n\t};\r\n\thelpers.drawRoundedRectangle = function(ctx, x, y, width, height, radius) {\r\n\t\tctx.beginPath();\r\n\t\tctx.moveTo(x + radius, y);\r\n\t\tctx.lineTo(x + width - radius, y);\r\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n\t\tctx.lineTo(x + width, y + height - radius);\r\n\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n\t\tctx.lineTo(x + radius, y + height);\r\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n\t\tctx.lineTo(x, y + radius);\r\n\t\tctx.quadraticCurveTo(x, y, x + radius, y);\r\n\t\tctx.closePath();\r\n\t};\r\n\thelpers.color = function(c) {\r\n\t\tif (!color) {\r\n\t\t\tconsole.error('Color.js not found!');\r\n\t\t\treturn c;\r\n\t\t}\r\n\r\n\t\t/* global CanvasGradient */\r\n\t\tif (c instanceof CanvasGradient) {\r\n\t\t\treturn color(Chart.defaults.global.defaultColor);\r\n\t\t}\r\n\r\n\t\treturn color(c);\r\n\t};\r\n\thelpers.isArray = Array.isArray?\r\n\t\tfunction(obj) {\r\n\t\t\treturn Array.isArray(obj);\r\n\t\t} :\r\n\t\tfunction(obj) {\r\n\t\t\treturn Object.prototype.toString.call(obj) === '[object Array]';\r\n\t\t};\r\n\t// ! @see http://stackoverflow.com/a/14853974\r\n\thelpers.arrayEquals = function(a0, a1) {\r\n\t\tvar i, ilen, v0, v1;\r\n\r\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfor (i = 0, ilen=a0.length; i < ilen; ++i) {\r\n\t\t\tv0 = a0[i];\r\n\t\t\tv1 = a1[i];\r\n\r\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\r\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t} else if (v0 !== v1) {\r\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t};\r\n\thelpers.callCallback = function(fn, args, _tArg) {\r\n\t\tif (fn && typeof fn.call === 'function') {\r\n\t\t\tfn.apply(_tArg, args);\r\n\t\t}\r\n\t};\r\n\thelpers.getHoverColor = function(colorValue) {\r\n\t\t/* global CanvasPattern */\r\n\t\treturn (colorValue instanceof CanvasPattern) ?\r\n\t\t\tcolorValue :\r\n\t\t\thelpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\r\n\t};\r\n};\r\n\r\n},{\"3\":3}],27:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\tvar helpers = Chart.helpers;\r\n\r\n\t/**\r\n\t * Helper function to get relative position for an event\r\n\t * @param {Event|IEvent} event - The event to get the position for\r\n\t * @param {Chart} chart - The chart\r\n\t * @returns {Point} the event position\r\n\t */\r\n\tfunction getRelativePosition(e, chart) {\r\n\t\tif (e.native) {\r\n\t\t\treturn {\r\n\t\t\t\tx: e.x,\r\n\t\t\t\ty: e.y\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn helpers.getRelativePosition(e, chart);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to traverse all of the visible elements in the chart\r\n\t * @param chart {chart} the chart\r\n\t * @param handler {Function} the callback to execute for each visible item\r\n\t */\r\n\tfunction parseVisibleItems(chart, handler) {\r\n\t\tvar datasets = chart.data.datasets;\r\n\t\tvar meta, i, j, ilen, jlen;\r\n\r\n\t\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\r\n\t\t\tif (!chart.isDatasetVisible(i)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tmeta = chart.getDatasetMeta(i);\r\n\t\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\r\n\t\t\t\tvar element = meta.data[j];\r\n\t\t\t\tif (!element._view.skip) {\r\n\t\t\t\t\thandler(element);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to get the items that intersect the event position\r\n\t * @param items {ChartElement[]} elements to filter\r\n\t * @param position {Point} the point to be nearest to\r\n\t * @return {ChartElement[]} the nearest items\r\n\t */\r\n\tfunction getIntersectItems(chart, position) {\r\n\t\tvar elements = [];\r\n\r\n\t\tparseVisibleItems(chart, function(element) {\r\n\t\t\tif (element.inRange(position.x, position.y)) {\r\n\t\t\t\telements.push(element);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn elements;\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to get the items nearest to the event position considering all visible items in teh chart\r\n\t * @param chart {Chart} the chart to look at elements from\r\n\t * @param position {Point} the point to be nearest to\r\n\t * @param intersect {Boolean} if true, only consider items that intersect the position\r\n\t * @param distanceMetric {Function} Optional function to provide the distance between\r\n\t * @return {ChartElement[]} the nearest items\r\n\t */\r\n\tfunction getNearestItems(chart, position, intersect, distanceMetric) {\r\n\t\tvar minDistance = Number.POSITIVE_INFINITY;\r\n\t\tvar nearestItems = [];\r\n\r\n\t\tif (!distanceMetric) {\r\n\t\t\tdistanceMetric = helpers.distanceBetweenPoints;\r\n\t\t}\r\n\r\n\t\tparseVisibleItems(chart, function(element) {\r\n\t\t\tif (intersect && !element.inRange(position.x, position.y)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar center = element.getCenterPoint();\r\n\t\t\tvar distance = distanceMetric(position, center);\r\n\r\n\t\t\tif (distance < minDistance) {\r\n\t\t\t\tnearestItems = [element];\r\n\t\t\t\tminDistance = distance;\r\n\t\t\t} else if (distance === minDistance) {\r\n\t\t\t\t// Can have multiple items at the same distance in which case we sort by size\r\n\t\t\t\tnearestItems.push(element);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn nearestItems;\r\n\t}\r\n\r\n\tfunction indexMode(chart, e, options) {\r\n\t\tvar position = getRelativePosition(e, chart.chart);\r\n\t\tvar distanceMetric = function(pt1, pt2) {\r\n\t\t\treturn Math.abs(pt1.x - pt2.x);\r\n\t\t};\r\n\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\r\n\t\tvar elements = [];\r\n\r\n\t\tif (!items.length) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\r\n\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex),\r\n\t\t\t\t\telement = meta.data[items[0]._index];\r\n\r\n\t\t\t\t// don't count items that are skipped (null data)\r\n\t\t\t\tif (element && !element._view.skip) {\r\n\t\t\t\t\telements.push(element);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn elements;\r\n\t}\r\n\r\n\t/**\r\n\t * @interface IInteractionOptions\r\n\t */\r\n\t/**\r\n\t * If true, only consider items that intersect the point\r\n\t * @name IInterfaceOptions#boolean\r\n\t * @type Boolean\r\n\t */\r\n\r\n\t/**\r\n\t * Contains interaction related functions\r\n\t * @namespace Chart.Interaction\r\n\t */\r\n\tChart.Interaction = {\r\n\t\t// Helper function for different modes\r\n\t\tmodes: {\r\n\t\t\tsingle: function(chart, e) {\r\n\t\t\t\tvar position = getRelativePosition(e, chart.chart);\r\n\t\t\t\tvar elements = [];\r\n\r\n\t\t\t\tparseVisibleItems(chart, function(element) {\r\n\t\t\t\t\tif (element.inRange(position.x, position.y)) {\r\n\t\t\t\t\t\telements.push(element);\r\n\t\t\t\t\t\treturn elements;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn elements.slice(0, 1);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * @function Chart.Interaction.modes.label\r\n\t\t\t * @deprecated since version 2.4.0\r\n\t\t\t */\r\n\t\t\tlabel: indexMode,\r\n\r\n\t\t\t/**\r\n\t\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\r\n\t\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\r\n\t\t\t * @function Chart.Interaction.modes.index\r\n\t\t\t * @since v2.4.0\r\n\t\t\t * @param chart {chart} the chart we are returning items from\r\n\t\t\t * @param e {Event} the event we are find things at\r\n\t\t\t * @param options {IInteractionOptions} options to use during interaction\r\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n\t\t\t */\r\n\t\t\tindex: indexMode,\r\n\r\n\t\t\t/**\r\n\t\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\r\n\t\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\r\n\t\t\t * @function Chart.Interaction.modes.dataset\r\n\t\t\t * @param chart {chart} the chart we are returning items from\r\n\t\t\t * @param e {Event} the event we are find things at\r\n\t\t\t * @param options {IInteractionOptions} options to use during interaction\r\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n\t\t\t */\r\n\t\t\tdataset: function(chart, e, options) {\r\n\t\t\t\tvar position = getRelativePosition(e, chart.chart);\r\n\t\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false);\r\n\r\n\t\t\t\tif (items.length > 0) {\r\n\t\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn items;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * @function Chart.Interaction.modes.x-axis\r\n\t\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\r\n\t\t\t */\r\n\t\t\t'x-axis': function(chart, e) {\r\n\t\t\t\treturn indexMode(chart, e, true);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Point mode returns all elements that hit test based on the event position\r\n\t\t\t * of the event\r\n\t\t\t * @function Chart.Interaction.modes.intersect\r\n\t\t\t * @param chart {chart} the chart we are returning items from\r\n\t\t\t * @param e {Event} the event we are find things at\r\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n\t\t\t */\r\n\t\t\tpoint: function(chart, e) {\r\n\t\t\t\tvar position = getRelativePosition(e, chart.chart);\r\n\t\t\t\treturn getIntersectItems(chart, position);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * nearest mode returns the element closest to the point\r\n\t\t\t * @function Chart.Interaction.modes.intersect\r\n\t\t\t * @param chart {chart} the chart we are returning items from\r\n\t\t\t * @param e {Event} the event we are find things at\r\n\t\t\t * @param options {IInteractionOptions} options to use\r\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n\t\t\t */\r\n\t\t\tnearest: function(chart, e, options) {\r\n\t\t\t\tvar position = getRelativePosition(e, chart.chart);\r\n\t\t\t\tvar nearestItems = getNearestItems(chart, position, options.intersect);\r\n\r\n\t\t\t\t// We have multiple items at the same distance from the event. Now sort by smallest\r\n\t\t\t\tif (nearestItems.length > 1) {\r\n\t\t\t\t\tnearestItems.sort(function(a, b) {\r\n\t\t\t\t\t\tvar sizeA = a.getArea();\r\n\t\t\t\t\t\tvar sizeB = b.getArea();\r\n\t\t\t\t\t\tvar ret = sizeA - sizeB;\r\n\r\n\t\t\t\t\t\tif (ret === 0) {\r\n\t\t\t\t\t\t\t// if equal sort by dataset index\r\n\t\t\t\t\t\t\tret = a._datasetIndex - b._datasetIndex;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn ret;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Return only 1 item\r\n\t\t\t\treturn nearestItems.slice(0, 1);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * x mode returns the elements that hit-test at the current x coordinate\r\n\t\t\t * @function Chart.Interaction.modes.x\r\n\t\t\t * @param chart {chart} the chart we are returning items from\r\n\t\t\t * @param e {Event} the event we are find things at\r\n\t\t\t * @param options {IInteractionOptions} options to use\r\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n\t\t\t */\r\n\t\t\tx: function(chart, e, options) {\r\n\t\t\t\tvar position = getRelativePosition(e, chart.chart);\r\n\t\t\t\tvar items = [];\r\n\t\t\t\tvar intersectsItem = false;\r\n\r\n\t\t\t\tparseVisibleItems(chart, function(element) {\r\n\t\t\t\t\tif (element.inXRange(position.x)) {\r\n\t\t\t\t\t\titems.push(element);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (element.inRange(position.x, position.y)) {\r\n\t\t\t\t\t\tintersectsItem = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// If we want to trigger on an intersect and we don't have any items\r\n\t\t\t\t// that intersect the position, return nothing\r\n\t\t\t\tif (options.intersect && !intersectsItem) {\r\n\t\t\t\t\titems = [];\r\n\t\t\t\t}\r\n\t\t\t\treturn items;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * y mode returns the elements that hit-test at the current y coordinate\r\n\t\t\t * @function Chart.Interaction.modes.y\r\n\t\t\t * @param chart {chart} the chart we are returning items from\r\n\t\t\t * @param e {Event} the event we are find things at\r\n\t\t\t * @param options {IInteractionOptions} options to use\r\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n\t\t\t */\r\n\t\t\ty: function(chart, e, options) {\r\n\t\t\t\tvar position = getRelativePosition(e, chart.chart);\r\n\t\t\t\tvar items = [];\r\n\t\t\t\tvar intersectsItem = false;\r\n\r\n\t\t\t\tparseVisibleItems(chart, function(element) {\r\n\t\t\t\t\tif (element.inYRange(position.y)) {\r\n\t\t\t\t\t\titems.push(element);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (element.inRange(position.x, position.y)) {\r\n\t\t\t\t\t\tintersectsItem = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// If we want to trigger on an intersect and we don't have any items\r\n\t\t\t\t// that intersect the position, return nothing\r\n\t\t\t\tif (options.intersect && !intersectsItem) {\r\n\t\t\t\t\titems = [];\r\n\t\t\t\t}\r\n\t\t\t\treturn items;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n};\r\n\r\n},{}],28:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function() {\r\n\r\n\t// Occupy the global variable of Chart, and create a simple base class\r\n\tvar Chart = function(item, config) {\r\n\t\tthis.controller = new Chart.Controller(item, config, this);\r\n\t\treturn this.controller;\r\n\t};\r\n\r\n\t// Globally expose the defaults to allow for user updating/changing\r\n\tChart.defaults = {\r\n\t\tglobal: {\r\n\t\t\tresponsive: true,\r\n\t\t\tresponsiveAnimationDuration: 0,\r\n\t\t\tmaintainAspectRatio: true,\r\n\t\t\tevents: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\r\n\t\t\thover: {\r\n\t\t\t\tonHover: null,\r\n\t\t\t\tmode: 'nearest',\r\n\t\t\t\tintersect: true,\r\n\t\t\t\tanimationDuration: 400\r\n\t\t\t},\r\n\t\t\tonClick: null,\r\n\t\t\tdefaultColor: 'rgba(0,0,0,0.1)',\r\n\t\t\tdefaultFontColor: '#666',\r\n\t\t\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\r\n\t\t\tdefaultFontSize: 12,\r\n\t\t\tdefaultFontStyle: 'normal',\r\n\t\t\tshowLines: true,\r\n\r\n\t\t\t// Element defaults defined in element extensions\r\n\t\t\telements: {},\r\n\r\n\t\t\t// Legend callback string\r\n\t\t\tlegendCallback: function(chart) {\r\n\t\t\t\tvar text = [];\r\n\t\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\r\n\t\t\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\r\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\r\n\t\t\t\t\tif (chart.data.datasets[i].label) {\r\n\t\t\t\t\t\ttext.push(chart.data.datasets[i].label);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttext.push('</li>');\r\n\t\t\t\t}\r\n\t\t\t\ttext.push('</ul>');\r\n\r\n\t\t\t\treturn text.join('');\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tChart.Chart = Chart;\r\n\r\n\treturn Chart;\r\n};\r\n\r\n},{}],29:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\t// The layout service is very self explanatory.  It's responsible for the layout within a chart.\r\n\t// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\r\n\t// It is this service's responsibility of carrying out that layout.\r\n\tChart.layoutService = {\r\n\t\tdefaults: {},\r\n\r\n\t\t// Register a box to a chartInstance. A box is simply a reference to an object that requires layout. eg. Scales, Legend, Plugins.\r\n\t\taddBox: function(chartInstance, box) {\r\n\t\t\tif (!chartInstance.boxes) {\r\n\t\t\t\tchartInstance.boxes = [];\r\n\t\t\t}\r\n\t\t\tchartInstance.boxes.push(box);\r\n\t\t},\r\n\r\n\t\tremoveBox: function(chartInstance, box) {\r\n\t\t\tif (!chartInstance.boxes) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tchartInstance.boxes.splice(chartInstance.boxes.indexOf(box), 1);\r\n\t\t},\r\n\r\n\t\t// The most important function\r\n\t\tupdate: function(chartInstance, width, height) {\r\n\r\n\t\t\tif (!chartInstance) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar layoutOptions = chartInstance.options.layout;\r\n\t\t\tvar padding = layoutOptions ? layoutOptions.padding : null;\r\n\r\n\t\t\tvar leftPadding = 0;\r\n\t\t\tvar rightPadding = 0;\r\n\t\t\tvar topPadding = 0;\r\n\t\t\tvar bottomPadding = 0;\r\n\r\n\t\t\tif (!isNaN(padding)) {\r\n\t\t\t\t// options.layout.padding is a number. assign to all\r\n\t\t\t\tleftPadding = padding;\r\n\t\t\t\trightPadding = padding;\r\n\t\t\t\ttopPadding = padding;\r\n\t\t\t\tbottomPadding = padding;\r\n\t\t\t} else {\r\n\t\t\t\tleftPadding = padding.left || 0;\r\n\t\t\t\trightPadding = padding.right || 0;\r\n\t\t\t\ttopPadding = padding.top || 0;\r\n\t\t\t\tbottomPadding = padding.bottom || 0;\r\n\t\t\t}\r\n\r\n\t\t\tvar leftBoxes = helpers.where(chartInstance.boxes, function(box) {\r\n\t\t\t\treturn box.options.position === 'left';\r\n\t\t\t});\r\n\t\t\tvar rightBoxes = helpers.where(chartInstance.boxes, function(box) {\r\n\t\t\t\treturn box.options.position === 'right';\r\n\t\t\t});\r\n\t\t\tvar topBoxes = helpers.where(chartInstance.boxes, function(box) {\r\n\t\t\t\treturn box.options.position === 'top';\r\n\t\t\t});\r\n\t\t\tvar bottomBoxes = helpers.where(chartInstance.boxes, function(box) {\r\n\t\t\t\treturn box.options.position === 'bottom';\r\n\t\t\t});\r\n\r\n\t\t\t// Boxes that overlay the chartarea such as the radialLinear scale\r\n\t\t\tvar chartAreaBoxes = helpers.where(chartInstance.boxes, function(box) {\r\n\t\t\t\treturn box.options.position === 'chartArea';\r\n\t\t\t});\r\n\r\n\t\t\t// Ensure that full width boxes are at the very top / bottom\r\n\t\t\ttopBoxes.sort(function(a, b) {\r\n\t\t\t\treturn (b.options.fullWidth ? 1 : 0) - (a.options.fullWidth ? 1 : 0);\r\n\t\t\t});\r\n\t\t\tbottomBoxes.sort(function(a, b) {\r\n\t\t\t\treturn (a.options.fullWidth ? 1 : 0) - (b.options.fullWidth ? 1 : 0);\r\n\t\t\t});\r\n\r\n\t\t\t// Essentially we now have any number of boxes on each of the 4 sides.\r\n\t\t\t// Our canvas looks like the following.\r\n\t\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\r\n\t\t\t// B1 is the bottom axis\r\n\t\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\r\n\t\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\r\n\t\t\t// an error will be thrown.\r\n\t\t\t//\r\n\t\t\t// |----------------------------------------------------|\r\n\t\t\t// |                  T1 (Full Width)                   |\r\n\t\t\t// |----------------------------------------------------|\r\n\t\t\t// |    |    |                 T2                  |    |\r\n\t\t\t// |    |----|-------------------------------------|----|\r\n\t\t\t// |    |    | C1 |                           | C2 |    |\r\n\t\t\t// |    |    |----|                           |----|    |\r\n\t\t\t// |    |    |                                     |    |\r\n\t\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\r\n\t\t\t// |    |    |                                     |    |\r\n\t\t\t// |    |    |----|                           |----|    |\r\n\t\t\t// |    |    | C3 |                           | C4 |    |\r\n\t\t\t// |    |----|-------------------------------------|----|\r\n\t\t\t// |    |    |                 B1                  |    |\r\n\t\t\t// |----------------------------------------------------|\r\n\t\t\t// |                  B2 (Full Width)                   |\r\n\t\t\t// |----------------------------------------------------|\r\n\t\t\t//\r\n\t\t\t// What we do to find the best sizing, we do the following\r\n\t\t\t// 1. Determine the minimum size of the chart area.\r\n\t\t\t// 2. Split the remaining width equally between each vertical axis\r\n\t\t\t// 3. Split the remaining height equally between each horizontal axis\r\n\t\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\r\n\t\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\r\n\t\t\t// 6. Refit each axis\r\n\t\t\t// 7. Position each axis in the final location\r\n\t\t\t// 8. Tell the chart the final location of the chart area\r\n\t\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\r\n\r\n\t\t\t// Step 1\r\n\t\t\tvar chartWidth = width - leftPadding - rightPadding;\r\n\t\t\tvar chartHeight = height - topPadding - bottomPadding;\r\n\t\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\r\n\t\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\r\n\r\n\t\t\t// Step 2\r\n\t\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\r\n\r\n\t\t\t// Step 3\r\n\t\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\r\n\r\n\t\t\t// Step 4\r\n\t\t\tvar maxChartAreaWidth = chartWidth;\r\n\t\t\tvar maxChartAreaHeight = chartHeight;\r\n\t\t\tvar minBoxSizes = [];\r\n\r\n\t\t\tfunction getMinimumBoxSize(box) {\r\n\t\t\t\tvar minSize;\r\n\t\t\t\tvar isHorizontal = box.isHorizontal();\r\n\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\tminSize = box.update(box.options.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\r\n\t\t\t\t\tmaxChartAreaHeight -= minSize.height;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tminSize = box.update(verticalBoxWidth, chartAreaHeight);\r\n\t\t\t\t\tmaxChartAreaWidth -= minSize.width;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tminBoxSizes.push({\r\n\t\t\t\t\thorizontal: isHorizontal,\r\n\t\t\t\t\tminSize: minSize,\r\n\t\t\t\t\tbox: box,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\r\n\r\n\t\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\r\n\t\t\tvar maxHorizontalLeftPadding = 0;\r\n\t\t\tvar maxHorizontalRightPadding = 0;\r\n\t\t\tvar maxVerticalTopPadding = 0;\r\n\t\t\tvar maxVerticalBottomPadding = 0;\r\n\r\n\t\t\thelpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\r\n\t\t\t\tif (horizontalBox.getPadding) {\r\n\t\t\t\t\tvar boxPadding = horizontalBox.getPadding();\r\n\t\t\t\t\tmaxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\r\n\t\t\t\t\tmaxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\r\n\t\t\t\tif (verticalBox.getPadding) {\r\n\t\t\t\t\tvar boxPadding = verticalBox.getPadding();\r\n\t\t\t\t\tmaxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\r\n\t\t\t\t\tmaxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\r\n\t\t\t// be if the axes are drawn at their minimum sizes.\r\n\t\t\t// Steps 5 & 6\r\n\t\t\tvar totalLeftBoxesWidth = leftPadding;\r\n\t\t\tvar totalRightBoxesWidth = rightPadding;\r\n\t\t\tvar totalTopBoxesHeight = topPadding;\r\n\t\t\tvar totalBottomBoxesHeight = bottomPadding;\r\n\r\n\t\t\t// Function to fit a box\r\n\t\t\tfunction fitBox(box) {\r\n\t\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\r\n\t\t\t\t\treturn minBox.box === box;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (minBoxSize) {\r\n\t\t\t\t\tif (box.isHorizontal()) {\r\n\t\t\t\t\t\tvar scaleMargin = {\r\n\t\t\t\t\t\t\tleft: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\r\n\t\t\t\t\t\t\tright: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\r\n\t\t\t\t\t\t\ttop: 0,\r\n\t\t\t\t\t\t\tbottom: 0\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\r\n\t\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\r\n\t\t\t\t\t\tbox.update(box.options.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Update, and calculate the left and right margins for the horizontal boxes\r\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\r\n\r\n\t\t\thelpers.each(leftBoxes, function(box) {\r\n\t\t\t\ttotalLeftBoxesWidth += box.width;\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(rightBoxes, function(box) {\r\n\t\t\t\ttotalRightBoxesWidth += box.width;\r\n\t\t\t});\r\n\r\n\t\t\t// Set the Left and Right margins for the horizontal boxes\r\n\t\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\r\n\r\n\t\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\r\n\t\t\thelpers.each(topBoxes, function(box) {\r\n\t\t\t\ttotalTopBoxesHeight += box.height;\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(bottomBoxes, function(box) {\r\n\t\t\t\ttotalBottomBoxesHeight += box.height;\r\n\t\t\t});\r\n\r\n\t\t\tfunction finalFitVerticalBox(box) {\r\n\t\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\r\n\t\t\t\t\treturn minSize.box === box;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar scaleMargin = {\r\n\t\t\t\t\tleft: 0,\r\n\t\t\t\t\tright: 0,\r\n\t\t\t\t\ttop: totalTopBoxesHeight,\r\n\t\t\t\t\tbottom: totalBottomBoxesHeight\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif (minBoxSize) {\r\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Let the left layout know the final margin\r\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\r\n\r\n\t\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\r\n\t\t\ttotalLeftBoxesWidth = leftPadding;\r\n\t\t\ttotalRightBoxesWidth = rightPadding;\r\n\t\t\ttotalTopBoxesHeight = topPadding;\r\n\t\t\ttotalBottomBoxesHeight = bottomPadding;\r\n\r\n\t\t\thelpers.each(leftBoxes, function(box) {\r\n\t\t\t\ttotalLeftBoxesWidth += box.width;\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(rightBoxes, function(box) {\r\n\t\t\t\ttotalRightBoxesWidth += box.width;\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(topBoxes, function(box) {\r\n\t\t\t\ttotalTopBoxesHeight += box.height;\r\n\t\t\t});\r\n\t\t\thelpers.each(bottomBoxes, function(box) {\r\n\t\t\t\ttotalBottomBoxesHeight += box.height;\r\n\t\t\t});\r\n\r\n\t\t\t// We may be adding some padding to account for rotated x axis labels\r\n\t\t\tvar leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\r\n\t\t\ttotalLeftBoxesWidth += leftPaddingAddition;\r\n\t\t\ttotalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\r\n\r\n\t\t\tvar topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\r\n\t\t\ttotalTopBoxesHeight += topPaddingAddition;\r\n\t\t\ttotalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\r\n\r\n\t\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\r\n\t\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\r\n\t\t\t// without calling `fit` again\r\n\t\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\r\n\t\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\r\n\r\n\t\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\r\n\t\t\t\thelpers.each(leftBoxes, function(box) {\r\n\t\t\t\t\tbox.height = newMaxChartAreaHeight;\r\n\t\t\t\t});\r\n\r\n\t\t\t\thelpers.each(rightBoxes, function(box) {\r\n\t\t\t\t\tbox.height = newMaxChartAreaHeight;\r\n\t\t\t\t});\r\n\r\n\t\t\t\thelpers.each(topBoxes, function(box) {\r\n\t\t\t\t\tif (!box.options.fullWidth) {\r\n\t\t\t\t\t\tbox.width = newMaxChartAreaWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\thelpers.each(bottomBoxes, function(box) {\r\n\t\t\t\t\tif (!box.options.fullWidth) {\r\n\t\t\t\t\t\tbox.width = newMaxChartAreaWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\r\n\t\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\r\n\t\t\t}\r\n\r\n\t\t\t// Step 7 - Position the boxes\r\n\t\t\tvar left = leftPadding + leftPaddingAddition;\r\n\t\t\tvar top = topPadding + topPaddingAddition;\r\n\r\n\t\t\tfunction placeBox(box) {\r\n\t\t\t\tif (box.isHorizontal()) {\r\n\t\t\t\t\tbox.left = box.options.fullWidth ? leftPadding : totalLeftBoxesWidth;\r\n\t\t\t\t\tbox.right = box.options.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\r\n\t\t\t\t\tbox.top = top;\r\n\t\t\t\t\tbox.bottom = top + box.height;\r\n\r\n\t\t\t\t\t// Move to next point\r\n\t\t\t\t\ttop = box.bottom;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbox.left = left;\r\n\t\t\t\t\tbox.right = left + box.width;\r\n\t\t\t\t\tbox.top = totalTopBoxesHeight;\r\n\t\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\r\n\r\n\t\t\t\t\t// Move to next point\r\n\t\t\t\t\tleft = box.right;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\r\n\r\n\t\t\t// Account for chart width and height\r\n\t\t\tleft += maxChartAreaWidth;\r\n\t\t\ttop += maxChartAreaHeight;\r\n\r\n\t\t\thelpers.each(rightBoxes, placeBox);\r\n\t\t\thelpers.each(bottomBoxes, placeBox);\r\n\r\n\t\t\t// Step 8\r\n\t\t\tchartInstance.chartArea = {\r\n\t\t\t\tleft: totalLeftBoxesWidth,\r\n\t\t\t\ttop: totalTopBoxesHeight,\r\n\t\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\r\n\t\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\r\n\t\t\t};\r\n\r\n\t\t\t// Step 9\r\n\t\t\thelpers.each(chartAreaBoxes, function(box) {\r\n\t\t\t\tbox.left = chartInstance.chartArea.left;\r\n\t\t\t\tbox.top = chartInstance.chartArea.top;\r\n\t\t\t\tbox.right = chartInstance.chartArea.right;\r\n\t\t\t\tbox.bottom = chartInstance.chartArea.bottom;\r\n\r\n\t\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n};\r\n\r\n},{}],30:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\tvar noop = helpers.noop;\r\n\r\n\tChart.defaults.global.legend = {\r\n\r\n\t\tdisplay: true,\r\n\t\tposition: 'top',\r\n\t\tfullWidth: true, // marks that this box should take the full width of the canvas (pushing down other boxes)\r\n\t\treverse: false,\r\n\r\n\t\t// a callback that will handle\r\n\t\tonClick: function(e, legendItem) {\r\n\t\t\tvar index = legendItem.datasetIndex;\r\n\t\t\tvar ci = this.chart;\r\n\t\t\tvar meta = ci.getDatasetMeta(index);\r\n\r\n\t\t\t// See controller.isDatasetVisible comment\r\n\t\t\tmeta.hidden = meta.hidden === null? !ci.data.datasets[index].hidden : null;\r\n\r\n\t\t\t// We hid a dataset ... rerender the chart\r\n\t\t\tci.update();\r\n\t\t},\r\n\r\n\t\tonHover: null,\r\n\r\n\t\tlabels: {\r\n\t\t\tboxWidth: 40,\r\n\t\t\tpadding: 10,\r\n\t\t\t// Generates labels shown in the legend\r\n\t\t\t// Valid properties to return:\r\n\t\t\t// text : text to display\r\n\t\t\t// fillStyle : fill of coloured box\r\n\t\t\t// strokeStyle: stroke of coloured box\r\n\t\t\t// hidden : if this legend item refers to a hidden item\r\n\t\t\t// lineCap : cap style for line\r\n\t\t\t// lineDash\r\n\t\t\t// lineDashOffset :\r\n\t\t\t// lineJoin :\r\n\t\t\t// lineWidth :\r\n\t\t\tgenerateLabels: function(chart) {\r\n\t\t\t\tvar data = chart.data;\r\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\ttext: dataset.label,\r\n\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\r\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\r\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\r\n\t\t\t\t\t\tlineDash: dataset.borderDash,\r\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\r\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\r\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\r\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\r\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\r\n\r\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\r\n\t\t\t\t\t\tdatasetIndex: i\r\n\t\t\t\t\t};\r\n\t\t\t\t}, this) : [];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Helper function to get the box width based on the usePointStyle option\r\n\t * @param labelopts {Object} the label options on the legend\r\n\t * @param fontSize {Number} the label font size\r\n\t * @return {Number} width of the color box area\r\n\t */\r\n\tfunction getBoxWidth(labelOpts, fontSize) {\r\n\t\treturn labelOpts.usePointStyle ?\r\n\t\t\tfontSize * Math.SQRT2 :\r\n\t\t\tlabelOpts.boxWidth;\r\n\t}\r\n\r\n\tChart.Legend = Chart.Element.extend({\r\n\r\n\t\tinitialize: function(config) {\r\n\t\t\thelpers.extend(this, config);\r\n\r\n\t\t\t// Contains hit boxes for each dataset (in dataset order)\r\n\t\t\tthis.legendHitBoxes = [];\r\n\r\n\t\t\t// Are we in doughnut mode which has a different data type\r\n\t\t\tthis.doughnutMode = false;\r\n\t\t},\r\n\r\n\t\t// These methods are ordered by lifecycle. Utilities then follow.\r\n\t\t// Any function defined here is inherited by all legend types.\r\n\t\t// Any function can be extended by the legend type\r\n\r\n\t\tbeforeUpdate: noop,\r\n\t\tupdate: function(maxWidth, maxHeight, margins) {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n\t\t\tme.beforeUpdate();\r\n\r\n\t\t\t// Absorb the master measurements\r\n\t\t\tme.maxWidth = maxWidth;\r\n\t\t\tme.maxHeight = maxHeight;\r\n\t\t\tme.margins = margins;\r\n\r\n\t\t\t// Dimensions\r\n\t\t\tme.beforeSetDimensions();\r\n\t\t\tme.setDimensions();\r\n\t\t\tme.afterSetDimensions();\r\n\t\t\t// Labels\r\n\t\t\tme.beforeBuildLabels();\r\n\t\t\tme.buildLabels();\r\n\t\t\tme.afterBuildLabels();\r\n\r\n\t\t\t// Fit\r\n\t\t\tme.beforeFit();\r\n\t\t\tme.fit();\r\n\t\t\tme.afterFit();\r\n\t\t\t//\r\n\t\t\tme.afterUpdate();\r\n\r\n\t\t\treturn me.minSize;\r\n\t\t},\r\n\t\tafterUpdate: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeSetDimensions: noop,\r\n\t\tsetDimensions: function() {\r\n\t\t\tvar me = this;\r\n\t\t\t// Set the unconstrained dimension before label rotation\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tme.width = me.maxWidth;\r\n\t\t\t\tme.left = 0;\r\n\t\t\t\tme.right = me.width;\r\n\t\t\t} else {\r\n\t\t\t\tme.height = me.maxHeight;\r\n\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tme.top = 0;\r\n\t\t\t\tme.bottom = me.height;\r\n\t\t\t}\r\n\r\n\t\t\t// Reset padding\r\n\t\t\tme.paddingLeft = 0;\r\n\t\t\tme.paddingTop = 0;\r\n\t\t\tme.paddingRight = 0;\r\n\t\t\tme.paddingBottom = 0;\r\n\r\n\t\t\t// Reset minSize\r\n\t\t\tme.minSize = {\r\n\t\t\t\twidth: 0,\r\n\t\t\t\theight: 0\r\n\t\t\t};\r\n\t\t},\r\n\t\tafterSetDimensions: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeBuildLabels: noop,\r\n\t\tbuildLabels: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar labelOpts = me.options.labels;\r\n\t\t\tvar legendItems = labelOpts.generateLabels.call(me, me.chart);\r\n\r\n\t\t\tif (labelOpts.filter) {\r\n\t\t\t\tlegendItems = legendItems.filter(function(item) {\r\n\t\t\t\t\treturn labelOpts.filter(item, me.chart.data);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (me.options.reverse) {\r\n\t\t\t\tlegendItems.reverse();\r\n\t\t\t}\r\n\r\n\t\t\tme.legendItems = legendItems;\r\n\t\t},\r\n\t\tafterBuildLabels: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeFit: noop,\r\n\t\tfit: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar labelOpts = opts.labels;\r\n\t\t\tvar display = opts.display;\r\n\r\n\t\t\tvar ctx = me.ctx;\r\n\r\n\t\t\tvar globalDefault = Chart.defaults.global,\r\n\t\t\t\titemOrDefault = helpers.getValueOrDefault,\r\n\t\t\t\tfontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),\r\n\t\t\t\tfontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),\r\n\t\t\t\tfontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),\r\n\t\t\t\tlabelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n\r\n\t\t\t// Reset hit boxes\r\n\t\t\tvar hitboxes = me.legendHitBoxes = [];\r\n\r\n\t\t\tvar minSize = me.minSize;\r\n\t\t\tvar isHorizontal = me.isHorizontal();\r\n\r\n\t\t\tif (isHorizontal) {\r\n\t\t\t\tminSize.width = me.maxWidth; // fill all the width\r\n\t\t\t\tminSize.height = display ? 10 : 0;\r\n\t\t\t} else {\r\n\t\t\t\tminSize.width = display ? 10 : 0;\r\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\r\n\t\t\t}\r\n\r\n\t\t\t// Increase sizes here\r\n\t\t\tif (display) {\r\n\t\t\t\tctx.font = labelFont;\r\n\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t// Labels\r\n\r\n\t\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\r\n\t\t\t\t\tvar lineWidths = me.lineWidths = [0];\r\n\t\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\r\n\r\n\t\t\t\t\tctx.textAlign = 'left';\r\n\t\t\t\t\tctx.textBaseline = 'top';\r\n\r\n\t\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\r\n\t\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\r\n\t\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\r\n\t\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\r\n\t\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\r\n\t\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\r\n\t\t\t\t\t\thitboxes[i] = {\r\n\t\t\t\t\t\t\tleft: 0,\r\n\t\t\t\t\t\t\ttop: 0,\r\n\t\t\t\t\t\t\twidth: width,\r\n\t\t\t\t\t\t\theight: fontSize\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tminSize.height += totalHeight;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar vPadding = labelOpts.padding;\r\n\t\t\t\t\tvar columnWidths = me.columnWidths = [];\r\n\t\t\t\t\tvar totalWidth = labelOpts.padding;\r\n\t\t\t\t\tvar currentColWidth = 0;\r\n\t\t\t\t\tvar currentColHeight = 0;\r\n\t\t\t\t\tvar itemHeight = fontSize + vPadding;\r\n\r\n\t\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\r\n\t\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\r\n\t\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\r\n\t\t\t\t\t\t// If too tall, go to new column\r\n\t\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\r\n\t\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\r\n\t\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\r\n\r\n\t\t\t\t\t\t\tcurrentColWidth = 0;\r\n\t\t\t\t\t\t\tcurrentColHeight = 0;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Get max width\r\n\t\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\r\n\t\t\t\t\t\tcurrentColHeight += itemHeight;\r\n\r\n\t\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\r\n\t\t\t\t\t\thitboxes[i] = {\r\n\t\t\t\t\t\t\tleft: 0,\r\n\t\t\t\t\t\t\ttop: 0,\r\n\t\t\t\t\t\t\twidth: itemWidth,\r\n\t\t\t\t\t\t\theight: fontSize\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\ttotalWidth += currentColWidth;\r\n\t\t\t\t\tcolumnWidths.push(currentColWidth);\r\n\t\t\t\t\tminSize.width += totalWidth;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tme.width = minSize.width;\r\n\t\t\tme.height = minSize.height;\r\n\t\t},\r\n\t\tafterFit: noop,\r\n\r\n\t\t// Shared Methods\r\n\t\tisHorizontal: function() {\r\n\t\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\r\n\t\t},\r\n\r\n\t\t// Actually draw the legend on the canvas\r\n\t\tdraw: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar labelOpts = opts.labels;\r\n\t\t\tvar globalDefault = Chart.defaults.global,\r\n\t\t\t\tlineDefault = globalDefault.elements.line,\r\n\t\t\t\tlegendWidth = me.width,\r\n\t\t\t\tlineWidths = me.lineWidths;\r\n\r\n\t\t\tif (opts.display) {\r\n\t\t\t\tvar ctx = me.ctx,\r\n\t\t\t\t\tcursor,\r\n\t\t\t\t\titemOrDefault = helpers.getValueOrDefault,\r\n\t\t\t\t\tfontColor = itemOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor),\r\n\t\t\t\t\tfontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),\r\n\t\t\t\t\tfontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),\r\n\t\t\t\t\tfontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),\r\n\t\t\t\t\tlabelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n\r\n\t\t\t\t// Canvas setup\r\n\t\t\t\tctx.textAlign = 'left';\r\n\t\t\t\tctx.textBaseline = 'top';\r\n\t\t\t\tctx.lineWidth = 0.5;\r\n\t\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\r\n\t\t\t\tctx.fillStyle = fontColor; // render in correct colour\r\n\t\t\t\tctx.font = labelFont;\r\n\r\n\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize),\r\n\t\t\t\t\thitboxes = me.legendHitBoxes;\r\n\r\n\t\t\t\t// current position\r\n\t\t\t\tvar drawLegendBox = function(x, y, legendItem) {\r\n\t\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Set the ctx for the box\r\n\t\t\t\t\tctx.save();\r\n\r\n\t\t\t\t\tctx.fillStyle = itemOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\r\n\t\t\t\t\tctx.lineCap = itemOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\r\n\t\t\t\t\tctx.lineDashOffset = itemOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\r\n\t\t\t\t\tctx.lineJoin = itemOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\r\n\t\t\t\t\tctx.lineWidth = itemOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\r\n\t\t\t\t\tctx.strokeStyle = itemOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\r\n\t\t\t\t\tvar isLineWidthZero = (itemOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\r\n\r\n\t\t\t\t\tif (ctx.setLineDash) {\r\n\t\t\t\t\t\t// IE 9 and 10 do not support line dash\r\n\t\t\t\t\t\tctx.setLineDash(itemOrDefault(legendItem.lineDash, lineDefault.borderDash));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\r\n\t\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\r\n\t\t\t\t\t\t// x and y to be center of figure (instead of top left)\r\n\t\t\t\t\t\tvar radius = fontSize * Math.SQRT2 / 2;\r\n\t\t\t\t\t\tvar offSet = radius / Math.SQRT2;\r\n\t\t\t\t\t\tvar centerX = x + offSet;\r\n\t\t\t\t\t\tvar centerY = y + offSet;\r\n\r\n\t\t\t\t\t\t// Draw pointStyle as legend symbol\r\n\t\t\t\t\t\tChart.canvasHelpers.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Draw box as legend symbol\r\n\t\t\t\t\t\tif (!isLineWidthZero) {\r\n\t\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tctx.restore();\r\n\t\t\t\t};\r\n\t\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\r\n\t\t\t\t\tctx.fillText(legendItem.text, boxWidth + (fontSize / 2) + x, y);\r\n\r\n\t\t\t\t\tif (legendItem.hidden) {\r\n\t\t\t\t\t\t// Strikethrough the text if hidden\r\n\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\tctx.lineWidth = 2;\r\n\t\t\t\t\t\tctx.moveTo(boxWidth + (fontSize / 2) + x, y + (fontSize / 2));\r\n\t\t\t\t\t\tctx.lineTo(boxWidth + (fontSize / 2) + x + textWidth, y + (fontSize / 2));\r\n\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Horizontal\r\n\t\t\t\tvar isHorizontal = me.isHorizontal();\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\tcursor = {\r\n\t\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\r\n\t\t\t\t\t\ty: me.top + labelOpts.padding,\r\n\t\t\t\t\t\tline: 0\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcursor = {\r\n\t\t\t\t\t\tx: me.left + labelOpts.padding,\r\n\t\t\t\t\t\ty: me.top + labelOpts.padding,\r\n\t\t\t\t\t\tline: 0\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar itemHeight = fontSize + labelOpts.padding;\r\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\r\n\t\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width,\r\n\t\t\t\t\t\twidth = boxWidth + (fontSize / 2) + textWidth,\r\n\t\t\t\t\t\tx = cursor.x,\r\n\t\t\t\t\t\ty = cursor.y;\r\n\r\n\t\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t\tif (x + width >= legendWidth) {\r\n\t\t\t\t\t\t\ty = cursor.y += itemHeight;\r\n\t\t\t\t\t\t\tcursor.line++;\r\n\t\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (y + itemHeight > me.bottom) {\r\n\t\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\r\n\t\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\r\n\t\t\t\t\t\tcursor.line++;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdrawLegendBox(x, y, legendItem);\r\n\r\n\t\t\t\t\thitboxes[i].left = x;\r\n\t\t\t\t\thitboxes[i].top = y;\r\n\r\n\t\t\t\t\t// Fill the actual label\r\n\t\t\t\t\tfillText(x, y, legendItem, textWidth);\r\n\r\n\t\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t\tcursor.x += width + (labelOpts.padding);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcursor.y += itemHeight;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Handle an event\r\n\t\t * @private\r\n\t\t * @param {IEvent} event - The event to handle\r\n\t\t * @return {Boolean} true if a change occured\r\n\t\t */\r\n\t\thandleEvent: function(e) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\r\n\t\t\tvar changed = false;\r\n\r\n\t\t\tif (type === 'mousemove') {\r\n\t\t\t\tif (!opts.onHover) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t} else if (type === 'click') {\r\n\t\t\t\tif (!opts.onClick) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Chart event already has relative position in it\r\n\t\t\tvar x = e.x,\r\n\t\t\t\ty = e.y;\r\n\r\n\t\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\r\n\t\t\t\t// See if we are touching one of the dataset boxes\r\n\t\t\t\tvar lh = me.legendHitBoxes;\r\n\t\t\t\tfor (var i = 0; i < lh.length; ++i) {\r\n\t\t\t\t\tvar hitBox = lh[i];\r\n\r\n\t\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\r\n\t\t\t\t\t\t// Touching an element\r\n\t\t\t\t\t\tif (type === 'click') {\r\n\t\t\t\t\t\t\t// use e.native for backwards compatibility\r\n\t\t\t\t\t\t\topts.onClick.call(me, e.native, me.legendItems[i]);\r\n\t\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t} else if (type === 'mousemove') {\r\n\t\t\t\t\t\t\t// use e.native for backwards compatibility\r\n\t\t\t\t\t\t\topts.onHover.call(me, e.native, me.legendItems[i]);\r\n\t\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn changed;\r\n\t\t}\r\n\t});\r\n\r\n\tfunction createNewLegendAndAttach(chartInstance, legendOpts) {\r\n\t\tvar legend = new Chart.Legend({\r\n\t\t\tctx: chartInstance.chart.ctx,\r\n\t\t\toptions: legendOpts,\r\n\t\t\tchart: chartInstance\r\n\t\t});\r\n\t\tchartInstance.legend = legend;\r\n\t\tChart.layoutService.addBox(chartInstance, legend);\r\n\t}\r\n\r\n\t// Register the legend plugin\r\n\tChart.plugins.register({\r\n\t\tbeforeInit: function(chartInstance) {\r\n\t\t\tvar legendOpts = chartInstance.options.legend;\r\n\r\n\t\t\tif (legendOpts) {\r\n\t\t\t\tcreateNewLegendAndAttach(chartInstance, legendOpts);\r\n\t\t\t}\r\n\t\t},\r\n\t\tbeforeUpdate: function(chartInstance) {\r\n\t\t\tvar legendOpts = chartInstance.options.legend;\r\n\r\n\t\t\tif (legendOpts) {\r\n\t\t\t\tlegendOpts = helpers.configMerge(Chart.defaults.global.legend, legendOpts);\r\n\r\n\t\t\t\tif (chartInstance.legend) {\r\n\t\t\t\t\tchartInstance.legend.options = legendOpts;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcreateNewLegendAndAttach(chartInstance, legendOpts);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tChart.layoutService.removeBox(chartInstance, chartInstance.legend);\r\n\t\t\t\tdelete chartInstance.legend;\r\n\t\t\t}\r\n\t\t},\r\n\t\tafterEvent: function(chartInstance, e) {\r\n\t\t\tvar legend = chartInstance.legend;\r\n\t\t\tif (legend) {\r\n\t\t\t\tlegend.handleEvent(e);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\n\r\n},{}],31:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.global.plugins = {};\r\n\r\n\t/**\r\n\t * The plugin service singleton\r\n\t * @namespace Chart.plugins\r\n\t * @since 2.1.0\r\n\t */\r\n\tChart.plugins = {\r\n\t\t/**\r\n\t\t * Globally registered plugins.\r\n\t\t * @private\r\n\t\t */\r\n\t\t_plugins: [],\r\n\r\n\t\t/**\r\n\t\t * This identifier is used to invalidate the descriptors cache attached to each chart\r\n\t\t * when a global plugin is registered or unregistered. In this case, the cache ID is\r\n\t\t * incremented and descriptors are regenerated during following API calls.\r\n\t\t * @private\r\n\t\t */\r\n\t\t_cacheId: 0,\r\n\r\n\t\t/**\r\n\t\t * Registers the given plugin(s) if not already registered.\r\n\t\t * @param {Array|Object} plugins plugin instance(s).\r\n\t\t */\r\n\t\tregister: function(plugins) {\r\n\t\t\tvar p = this._plugins;\r\n\t\t\t([]).concat(plugins).forEach(function(plugin) {\r\n\t\t\t\tif (p.indexOf(plugin) === -1) {\r\n\t\t\t\t\tp.push(plugin);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis._cacheId++;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Unregisters the given plugin(s) only if registered.\r\n\t\t * @param {Array|Object} plugins plugin instance(s).\r\n\t\t */\r\n\t\tunregister: function(plugins) {\r\n\t\t\tvar p = this._plugins;\r\n\t\t\t([]).concat(plugins).forEach(function(plugin) {\r\n\t\t\t\tvar idx = p.indexOf(plugin);\r\n\t\t\t\tif (idx !== -1) {\r\n\t\t\t\t\tp.splice(idx, 1);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis._cacheId++;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Remove all registered plugins.\r\n\t\t * @since 2.1.5\r\n\t\t */\r\n\t\tclear: function() {\r\n\t\t\tthis._plugins = [];\r\n\t\t\tthis._cacheId++;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Returns the number of registered plugins?\r\n\t\t * @returns {Number}\r\n\t\t * @since 2.1.5\r\n\t\t */\r\n\t\tcount: function() {\r\n\t\t\treturn this._plugins.length;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Returns all registered plugin instances.\r\n\t\t * @returns {Array} array of plugin objects.\r\n\t\t * @since 2.1.5\r\n\t\t */\r\n\t\tgetAll: function() {\r\n\t\t\treturn this._plugins;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\r\n\t\t * This method immediately returns as soon as a plugin explicitly returns false. The\r\n\t\t * returned value can be used, for instance, to interrupt the current action.\r\n\t\t * @param {Object} chart - The chart instance for which plugins should be called.\r\n\t\t * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\r\n\t\t * @param {Array} [args] - Extra arguments to apply to the hook call.\r\n\t\t * @returns {Boolean} false if any of the plugins return false, else returns true.\r\n\t\t */\r\n\t\tnotify: function(chart, hook, args) {\r\n\t\t\tvar descriptors = this.descriptors(chart);\r\n\t\t\tvar ilen = descriptors.length;\r\n\t\t\tvar i, descriptor, plugin, params, method;\r\n\r\n\t\t\tfor (i=0; i<ilen; ++i) {\r\n\t\t\t\tdescriptor = descriptors[i];\r\n\t\t\t\tplugin = descriptor.plugin;\r\n\t\t\t\tmethod = plugin[hook];\r\n\t\t\t\tif (typeof method === 'function') {\r\n\t\t\t\t\tparams = [chart].concat(args || []);\r\n\t\t\t\t\tparams.push(descriptor.options);\r\n\t\t\t\t\tif (method.apply(plugin, params) === false) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Returns descriptors of enabled plugins for the given chart.\r\n\t\t * @returns {Array} [{ plugin, options }]\r\n\t\t * @private\r\n\t\t */\r\n\t\tdescriptors: function(chart) {\r\n\t\t\tvar cache = chart._plugins || (chart._plugins = {});\r\n\t\t\tif (cache.id === this._cacheId) {\r\n\t\t\t\treturn cache.descriptors;\r\n\t\t\t}\r\n\r\n\t\t\tvar plugins = [];\r\n\t\t\tvar descriptors = [];\r\n\t\t\tvar config = (chart && chart.config) || {};\r\n\t\t\tvar defaults = Chart.defaults.global.plugins;\r\n\t\t\tvar options = (config.options && config.options.plugins) || {};\r\n\r\n\t\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\r\n\t\t\t\tvar idx = plugins.indexOf(plugin);\r\n\t\t\t\tif (idx !== -1) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar id = plugin.id;\r\n\t\t\t\tvar opts = options[id];\r\n\t\t\t\tif (opts === false) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (opts === true) {\r\n\t\t\t\t\topts = helpers.clone(defaults[id]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tplugins.push(plugin);\r\n\t\t\t\tdescriptors.push({\r\n\t\t\t\t\tplugin: plugin,\r\n\t\t\t\t\toptions: opts || {}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tcache.descriptors = descriptors;\r\n\t\t\tcache.id = this._cacheId;\r\n\t\t\treturn descriptors;\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Plugin extension hooks.\r\n\t * @interface IPlugin\r\n\t * @since 2.1.0\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#beforeInit\r\n\t * @desc Called before initializing `chart`.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {Object} options - The plugin options.\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#afterInit\r\n\t * @desc Called after `chart` has been initialized and before the first update.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {Object} options - The plugin options.\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#beforeUpdate\r\n\t * @desc Called before updating `chart`. If any plugin returns `false`, the update\r\n\t * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {Object} options - The plugin options.\r\n\t * @returns {Boolean} `false` to cancel the chart update.\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#afterUpdate\r\n\t * @desc Called after `chart` has been updated and before rendering. Note that this\r\n\t * hook will not be called if the chart update has been previously cancelled.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {Object} options - The plugin options.\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#beforeDatasetsUpdate\r\n \t * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\r\n\t * the datasets update is cancelled until another `update` is triggered.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {Object} options - The plugin options.\r\n\t * @returns {Boolean} false to cancel the datasets update.\r\n\t * @since version 2.1.5\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#afterDatasetsUpdate\r\n\t * @desc Called after the `chart` datasets have been updated. Note that this hook\r\n\t * will not be called if the datasets update has been previously cancelled.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {Object} options - The plugin options.\r\n\t * @since version 2.1.5\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#beforeLayout\r\n\t * @desc Called before laying out `chart`. If any plugin returns `false`,\r\n\t * the layout update is cancelled until another `update` is triggered.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {Object} options - The plugin options.\r\n\t * @returns {Boolean} `false` to cancel the chart layout.\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#afterLayout\r\n\t * @desc Called after the `chart` has been layed out. Note that this hook will not\r\n\t * be called if the layout update has been previously cancelled.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {Object} options - The plugin options.\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#beforeRender\r\n\t * @desc Called before rendering `chart`. If any plugin returns `false`,\r\n\t * the rendering is cancelled until another `render` is triggered.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {Object} options - The plugin options.\r\n\t * @returns {Boolean} `false` to cancel the chart rendering.\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#afterRender\r\n\t * @desc Called after the `chart` has been fully rendered (and animation completed). Note\r\n\t * that this hook will not be called if the rendering has been previously cancelled.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {Object} options - The plugin options.\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#beforeDraw\r\n\t * @desc Called before drawing `chart` at every animation frame specified by the given\r\n\t * easing value. If any plugin returns `false`, the frame drawing is cancelled until\r\n\t * another `render` is triggered.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n\t * @param {Object} options - The plugin options.\r\n\t * @returns {Boolean} `false` to cancel the chart drawing.\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#afterDraw\r\n\t * @desc Called after the `chart` has been drawn for the specific easing value. Note\r\n\t * that this hook will not be called if the drawing has been previously cancelled.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n\t * @param {Object} options - The plugin options.\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#beforeDatasetsDraw\r\n \t * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\r\n\t * the datasets drawing is cancelled until another `render` is triggered.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n\t * @param {Object} options - The plugin options.\r\n\t * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#afterDatasetsDraw\r\n\t * @desc Called after the `chart` datasets have been drawn. Note that this hook\r\n\t * will not be called if the datasets drawing has been previously cancelled.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n\t * @param {Object} options - The plugin options.\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#beforeEvent\r\n \t * @desc Called before processing the specified `event`. If any plugin returns `false`,\r\n\t * the event will be discarded.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {IEvent} event - The event object.\r\n\t * @param {Object} options - The plugin options.\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#afterEvent\r\n\t * @desc Called after the `event` has been consumed. Note that this hook\r\n\t * will not be called if the `event` has been previously discarded.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {IEvent} event - The event object.\r\n\t * @param {Object} options - The plugin options.\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#resize\r\n\t * @desc Called after the chart as been resized.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\r\n\t * @param {Object} options - The plugin options.\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#destroy\r\n\t * @desc Called after the chart as been destroyed.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {Object} options - The plugin options.\r\n\t */\r\n\r\n\t/**\r\n\t * Provided for backward compatibility, use Chart.plugins instead\r\n\t * @namespace Chart.pluginService\r\n\t * @deprecated since version 2.1.5\r\n\t * @todo remove at version 3\r\n\t * @private\r\n\t */\r\n\tChart.pluginService = Chart.plugins;\r\n\r\n\t/**\r\n\t * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\r\n\t * effect, instead simply create/register plugins via plain JavaScript objects.\r\n\t * @interface Chart.PluginBase\r\n\t * @deprecated since version 2.5.0\r\n\t * @todo remove at version 3\r\n\t * @private\r\n\t */\r\n\tChart.PluginBase = helpers.inherits({});\r\n};\r\n\r\n},{}],32:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.scale = {\r\n\t\tdisplay: true,\r\n\t\tposition: 'left',\r\n\r\n\t\t// grid line settings\r\n\t\tgridLines: {\r\n\t\t\tdisplay: true,\r\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\r\n\t\t\tlineWidth: 1,\r\n\t\t\tdrawBorder: true,\r\n\t\t\tdrawOnChartArea: true,\r\n\t\t\tdrawTicks: true,\r\n\t\t\ttickMarkLength: 10,\r\n\t\t\tzeroLineWidth: 1,\r\n\t\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\r\n\t\t\toffsetGridLines: false,\r\n\t\t\tborderDash: [],\r\n\t\t\tborderDashOffset: 0.0\r\n\t\t},\r\n\r\n\t\t// scale label\r\n\t\tscaleLabel: {\r\n\t\t\t// actual label\r\n\t\t\tlabelString: '',\r\n\r\n\t\t\t// display property\r\n\t\t\tdisplay: false\r\n\t\t},\r\n\r\n\t\t// label settings\r\n\t\tticks: {\r\n\t\t\tbeginAtZero: false,\r\n\t\t\tminRotation: 0,\r\n\t\t\tmaxRotation: 50,\r\n\t\t\tmirror: false,\r\n\t\t\tpadding: 0,\r\n\t\t\treverse: false,\r\n\t\t\tdisplay: true,\r\n\t\t\tautoSkip: true,\r\n\t\t\tautoSkipPadding: 0,\r\n\t\t\tlabelOffset: 0,\r\n\t\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\r\n\t\t\tcallback: Chart.Ticks.formatters.values\r\n\t\t}\r\n\t};\r\n\r\n\tfunction computeTextSize(context, tick, font) {\r\n\t\treturn helpers.isArray(tick) ?\r\n\t\t\thelpers.longestText(context, font, tick) :\r\n\t\t\tcontext.measureText(tick).width;\r\n\t}\r\n\r\n\tfunction parseFontOptions(options) {\r\n\t\tvar getValueOrDefault = helpers.getValueOrDefault;\r\n\t\tvar globalDefaults = Chart.defaults.global;\r\n\t\tvar size = getValueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\r\n\t\tvar style = getValueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\tvar family = getValueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\r\n\r\n\t\treturn {\r\n\t\t\tsize: size,\r\n\t\t\tstyle: style,\r\n\t\t\tfamily: family,\r\n\t\t\tfont: helpers.fontString(size, style, family)\r\n\t\t};\r\n\t}\r\n\r\n\tChart.Scale = Chart.Element.extend({\r\n\t\t/**\r\n\t\t * Get the padding needed for the scale\r\n\t\t * @method getPadding\r\n\t\t * @private\r\n\t\t * @returns {Padding} the necessary padding\r\n\t\t */\r\n\t\tgetPadding: function() {\r\n\t\t\tvar me = this;\r\n\t\t\treturn {\r\n\t\t\t\tleft: me.paddingLeft || 0,\r\n\t\t\t\ttop: me.paddingTop || 0,\r\n\t\t\t\tright: me.paddingRight || 0,\r\n\t\t\t\tbottom: me.paddingBottom || 0\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\r\n\t\t// Any function defined here is inherited by all scale types.\r\n\t\t// Any function can be extended by the scale type\r\n\r\n\t\tbeforeUpdate: function() {\r\n\t\t\thelpers.callCallback(this.options.beforeUpdate, [this]);\r\n\t\t},\r\n\t\tupdate: function(maxWidth, maxHeight, margins) {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n\t\t\tme.beforeUpdate();\r\n\r\n\t\t\t// Absorb the master measurements\r\n\t\t\tme.maxWidth = maxWidth;\r\n\t\t\tme.maxHeight = maxHeight;\r\n\t\t\tme.margins = helpers.extend({\r\n\t\t\t\tleft: 0,\r\n\t\t\t\tright: 0,\r\n\t\t\t\ttop: 0,\r\n\t\t\t\tbottom: 0\r\n\t\t\t}, margins);\r\n\t\t\tme.longestTextCache = me.longestTextCache || {};\r\n\r\n\t\t\t// Dimensions\r\n\t\t\tme.beforeSetDimensions();\r\n\t\t\tme.setDimensions();\r\n\t\t\tme.afterSetDimensions();\r\n\r\n\t\t\t// Data min/max\r\n\t\t\tme.beforeDataLimits();\r\n\t\t\tme.determineDataLimits();\r\n\t\t\tme.afterDataLimits();\r\n\r\n\t\t\t// Ticks\r\n\t\t\tme.beforeBuildTicks();\r\n\t\t\tme.buildTicks();\r\n\t\t\tme.afterBuildTicks();\r\n\r\n\t\t\tme.beforeTickToLabelConversion();\r\n\t\t\tme.convertTicksToLabels();\r\n\t\t\tme.afterTickToLabelConversion();\r\n\r\n\t\t\t// Tick Rotation\r\n\t\t\tme.beforeCalculateTickRotation();\r\n\t\t\tme.calculateTickRotation();\r\n\t\t\tme.afterCalculateTickRotation();\r\n\t\t\t// Fit\r\n\t\t\tme.beforeFit();\r\n\t\t\tme.fit();\r\n\t\t\tme.afterFit();\r\n\t\t\t//\r\n\t\t\tme.afterUpdate();\r\n\r\n\t\t\treturn me.minSize;\r\n\r\n\t\t},\r\n\t\tafterUpdate: function() {\r\n\t\t\thelpers.callCallback(this.options.afterUpdate, [this]);\r\n\t\t},\r\n\r\n\t\t//\r\n\r\n\t\tbeforeSetDimensions: function() {\r\n\t\t\thelpers.callCallback(this.options.beforeSetDimensions, [this]);\r\n\t\t},\r\n\t\tsetDimensions: function() {\r\n\t\t\tvar me = this;\r\n\t\t\t// Set the unconstrained dimension before label rotation\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tme.width = me.maxWidth;\r\n\t\t\t\tme.left = 0;\r\n\t\t\t\tme.right = me.width;\r\n\t\t\t} else {\r\n\t\t\t\tme.height = me.maxHeight;\r\n\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tme.top = 0;\r\n\t\t\t\tme.bottom = me.height;\r\n\t\t\t}\r\n\r\n\t\t\t// Reset padding\r\n\t\t\tme.paddingLeft = 0;\r\n\t\t\tme.paddingTop = 0;\r\n\t\t\tme.paddingRight = 0;\r\n\t\t\tme.paddingBottom = 0;\r\n\t\t},\r\n\t\tafterSetDimensions: function() {\r\n\t\t\thelpers.callCallback(this.options.afterSetDimensions, [this]);\r\n\t\t},\r\n\r\n\t\t// Data limits\r\n\t\tbeforeDataLimits: function() {\r\n\t\t\thelpers.callCallback(this.options.beforeDataLimits, [this]);\r\n\t\t},\r\n\t\tdetermineDataLimits: helpers.noop,\r\n\t\tafterDataLimits: function() {\r\n\t\t\thelpers.callCallback(this.options.afterDataLimits, [this]);\r\n\t\t},\r\n\r\n\t\t//\r\n\t\tbeforeBuildTicks: function() {\r\n\t\t\thelpers.callCallback(this.options.beforeBuildTicks, [this]);\r\n\t\t},\r\n\t\tbuildTicks: helpers.noop,\r\n\t\tafterBuildTicks: function() {\r\n\t\t\thelpers.callCallback(this.options.afterBuildTicks, [this]);\r\n\t\t},\r\n\r\n\t\tbeforeTickToLabelConversion: function() {\r\n\t\t\thelpers.callCallback(this.options.beforeTickToLabelConversion, [this]);\r\n\t\t},\r\n\t\tconvertTicksToLabels: function() {\r\n\t\t\tvar me = this;\r\n\t\t\t// Convert ticks to strings\r\n\t\t\tvar tickOpts = me.options.ticks;\r\n\t\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback);\r\n\t\t},\r\n\t\tafterTickToLabelConversion: function() {\r\n\t\t\thelpers.callCallback(this.options.afterTickToLabelConversion, [this]);\r\n\t\t},\r\n\r\n\t\t//\r\n\r\n\t\tbeforeCalculateTickRotation: function() {\r\n\t\t\thelpers.callCallback(this.options.beforeCalculateTickRotation, [this]);\r\n\t\t},\r\n\t\tcalculateTickRotation: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar context = me.ctx;\r\n\t\t\tvar tickOpts = me.options.ticks;\r\n\r\n\t\t\t// Get the width of each grid by calculating the difference\r\n\t\t\t// between x offsets between 0 and 1.\r\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\r\n\t\t\tcontext.font = tickFont.font;\r\n\r\n\t\t\tvar labelRotation = tickOpts.minRotation || 0;\r\n\r\n\t\t\tif (me.options.display && me.isHorizontal()) {\r\n\t\t\t\tvar originalLabelWidth = helpers.longestText(context, tickFont.font, me.ticks, me.longestTextCache);\r\n\t\t\t\tvar labelWidth = originalLabelWidth;\r\n\t\t\t\tvar cosRotation;\r\n\t\t\t\tvar sinRotation;\r\n\r\n\t\t\t\t// Allow 3 pixels x2 padding either side for label readability\r\n\t\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\r\n\r\n\t\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\r\n\t\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\r\n\t\t\t\t\tvar angleRadians = helpers.toRadians(labelRotation);\r\n\t\t\t\t\tcosRotation = Math.cos(angleRadians);\r\n\t\t\t\t\tsinRotation = Math.sin(angleRadians);\r\n\r\n\t\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\r\n\t\t\t\t\t\t// go back one step\r\n\t\t\t\t\t\tlabelRotation--;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlabelRotation++;\r\n\t\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tme.labelRotation = labelRotation;\r\n\t\t},\r\n\t\tafterCalculateTickRotation: function() {\r\n\t\t\thelpers.callCallback(this.options.afterCalculateTickRotation, [this]);\r\n\t\t},\r\n\r\n\t\t//\r\n\r\n\t\tbeforeFit: function() {\r\n\t\t\thelpers.callCallback(this.options.beforeFit, [this]);\r\n\t\t},\r\n\t\tfit: function() {\r\n\t\t\tvar me = this;\r\n\t\t\t// Reset\r\n\t\t\tvar minSize = me.minSize = {\r\n\t\t\t\twidth: 0,\r\n\t\t\t\theight: 0\r\n\t\t\t};\r\n\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\tvar scaleLabelOpts = opts.scaleLabel;\r\n\t\t\tvar gridLineOpts = opts.gridLines;\r\n\t\t\tvar display = opts.display;\r\n\t\t\tvar isHorizontal = me.isHorizontal();\r\n\r\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\r\n\t\t\tvar scaleLabelFontSize = parseFontOptions(scaleLabelOpts).size * 1.5;\r\n\t\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\r\n\r\n\t\t\t// Width\r\n\t\t\tif (isHorizontal) {\r\n\t\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\r\n\t\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\r\n\t\t\t} else {\r\n\t\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\r\n\t\t\t}\r\n\r\n\t\t\t// height\r\n\t\t\tif (isHorizontal) {\r\n\t\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\r\n\t\t\t} else {\r\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\r\n\t\t\t}\r\n\r\n\t\t\t// Are we showing a title for the scale?\r\n\t\t\tif (scaleLabelOpts.display && display) {\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\tminSize.height += scaleLabelFontSize;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tminSize.width += scaleLabelFontSize;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Don't bother fitting the ticks if we are not showing them\r\n\t\t\tif (tickOpts.display && display) {\r\n\t\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickFont.font, me.ticks, me.longestTextCache);\r\n\t\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(me.ticks);\r\n\t\t\t\tvar lineSpace = tickFont.size * 0.5;\r\n\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t// A horizontal axis is more constrained by the height.\r\n\t\t\t\t\tme.longestLabelWidth = largestTextWidth;\r\n\r\n\t\t\t\t\tvar angleRadians = helpers.toRadians(me.labelRotation);\r\n\t\t\t\t\tvar cosRotation = Math.cos(angleRadians);\r\n\t\t\t\t\tvar sinRotation = Math.sin(angleRadians);\r\n\r\n\t\t\t\t\t// TODO - improve this calculation\r\n\t\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\r\n\t\t\t\t\t\t+ (tickFont.size * tallestLabelHeightInLines)\r\n\t\t\t\t\t\t+ (lineSpace * tallestLabelHeightInLines);\r\n\r\n\t\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight);\r\n\t\t\t\t\tme.ctx.font = tickFont.font;\r\n\r\n\t\t\t\t\tvar firstTick = me.ticks[0];\r\n\t\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, firstTick, tickFont.font);\r\n\r\n\t\t\t\t\tvar lastTick = me.ticks[me.ticks.length - 1];\r\n\t\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, lastTick, tickFont.font);\r\n\r\n\t\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned which means that the right padding is dominated\r\n\t\t\t\t\t// by the font height\r\n\t\t\t\t\tif (me.labelRotation !== 0) {\r\n\t\t\t\t\t\tme.paddingLeft = opts.position === 'bottom'? (cosRotation * firstLabelWidth) + 3: (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\r\n\t\t\t\t\t\tme.paddingRight = opts.position === 'bottom'? (cosRotation * lineSpace) + 3: (cosRotation * lastLabelWidth) + 3;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\r\n\t\t\t\t\t\tme.paddingRight = lastLabelWidth / 2 + 3;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// A vertical axis is more constrained by the width. Labels are the dominant factor here, so get that length first\r\n\t\t\t\t\t// Account for padding\r\n\r\n\t\t\t\t\tif (tickOpts.mirror) {\r\n\t\t\t\t\t\tlargestTextWidth = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlargestTextWidth += me.options.ticks.padding;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tminSize.width += largestTextWidth;\r\n\t\t\t\t\tme.paddingTop = tickFont.size / 2;\r\n\t\t\t\t\tme.paddingBottom = tickFont.size / 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tme.handleMargins();\r\n\r\n\t\t\tme.width = minSize.width;\r\n\t\t\tme.height = minSize.height;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Handle margins and padding interactions\r\n\t\t * @private\r\n\t\t */\r\n\t\thandleMargins: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tif (me.margins) {\r\n\t\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\r\n\t\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\r\n\t\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\r\n\t\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tafterFit: function() {\r\n\t\t\thelpers.callCallback(this.options.afterFit, [this]);\r\n\t\t},\r\n\r\n\t\t// Shared Methods\r\n\t\tisHorizontal: function() {\r\n\t\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\r\n\t\t},\r\n\t\tisFullWidth: function() {\r\n\t\t\treturn (this.options.fullWidth);\r\n\t\t},\r\n\r\n\t\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\r\n\t\tgetRightValue: function(rawValue) {\r\n\t\t\t// Null and undefined values first\r\n\t\t\tif (rawValue === null || typeof(rawValue) === 'undefined') {\r\n\t\t\t\treturn NaN;\r\n\t\t\t}\r\n\t\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\r\n\t\t\tif (typeof(rawValue) === 'number' && !isFinite(rawValue)) {\r\n\t\t\t\treturn NaN;\r\n\t\t\t}\r\n\t\t\t// If it is in fact an object, dive in one more level\r\n\t\t\tif (typeof(rawValue) === 'object') {\r\n\t\t\t\tif ((rawValue instanceof Date) || (rawValue.isValid)) {\r\n\t\t\t\t\treturn rawValue;\r\n\t\t\t\t}\r\n\t\t\t\treturn this.getRightValue(this.isHorizontal() ? rawValue.x : rawValue.y);\r\n\t\t\t}\r\n\r\n\t\t\t// Value is good, return it\r\n\t\t\treturn rawValue;\r\n\t\t},\r\n\r\n\t\t// Used to get the value to display in the tooltip for the data at the given index\r\n\t\t// function getLabelForIndex(index, datasetIndex)\r\n\t\tgetLabelForIndex: helpers.noop,\r\n\r\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\r\n\t\tgetPixelForValue: helpers.noop,\r\n\r\n\t\t// Used to get the data value from a given pixel. This is the inverse of getPixelForValue\r\n\t\tgetValueForPixel: helpers.noop,\r\n\r\n\t\t// Used for tick location, should\r\n\t\tgetPixelForTick: function(index, includeOffset) {\r\n\t\t\tvar me = this;\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n\t\t\t\tvar tickWidth = innerWidth / Math.max((me.ticks.length - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\r\n\t\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\r\n\r\n\t\t\t\tif (includeOffset) {\r\n\t\t\t\t\tpixel += tickWidth / 2;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar finalVal = me.left + Math.round(pixel);\r\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\r\n\t\t\t\treturn finalVal;\r\n\t\t\t}\r\n\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\r\n\t\t\treturn me.top + (index * (innerHeight / (me.ticks.length - 1)));\r\n\t\t},\r\n\r\n\t\t// Utility for getting the pixel location of a percentage of scale\r\n\t\tgetPixelForDecimal: function(decimal /* , includeOffset*/) {\r\n\t\t\tvar me = this;\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n\t\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\r\n\r\n\t\t\t\tvar finalVal = me.left + Math.round(valueOffset);\r\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\r\n\t\t\t\treturn finalVal;\r\n\t\t\t}\r\n\t\t\treturn me.top + (decimal * me.height);\r\n\t\t},\r\n\r\n\t\tgetBasePixel: function() {\r\n\t\t\treturn this.getPixelForValue(this.getBaseValue());\r\n\t\t},\r\n\r\n\t\tgetBaseValue: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar min = me.min;\r\n\t\t\tvar max = me.max;\r\n\r\n\t\t\treturn me.beginAtZero ? 0:\r\n\t\t\t\tmin < 0 && max < 0? max :\r\n\t\t\t\tmin > 0 && max > 0? min :\r\n\t\t\t\t0;\r\n\t\t},\r\n\r\n\t\t// Actually draw the scale on the canvas\r\n\t\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\r\n\t\tdraw: function(chartArea) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar options = me.options;\r\n\t\t\tif (!options.display) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar context = me.ctx;\r\n\t\t\tvar globalDefaults = Chart.defaults.global;\r\n\t\t\tvar optionTicks = options.ticks;\r\n\t\t\tvar gridLines = options.gridLines;\r\n\t\t\tvar scaleLabel = options.scaleLabel;\r\n\r\n\t\t\tvar isRotated = me.labelRotation !== 0;\r\n\t\t\tvar skipRatio;\r\n\t\t\tvar useAutoskipper = optionTicks.autoSkip;\r\n\t\t\tvar isHorizontal = me.isHorizontal();\r\n\r\n\t\t\t// figure out the maximum number of gridlines to show\r\n\t\t\tvar maxTicks;\r\n\t\t\tif (optionTicks.maxTicksLimit) {\r\n\t\t\t\tmaxTicks = optionTicks.maxTicksLimit;\r\n\t\t\t}\r\n\r\n\t\t\tvar tickFontColor = helpers.getValueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\r\n\t\t\tvar tickFont = parseFontOptions(optionTicks);\r\n\r\n\t\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\r\n\t\t\tvar borderDash = helpers.getValueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\r\n\t\t\tvar borderDashOffset = helpers.getValueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\r\n\r\n\t\t\tvar scaleLabelFontColor = helpers.getValueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\r\n\t\t\tvar scaleLabelFont = parseFontOptions(scaleLabel);\r\n\r\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\r\n\t\t\tvar cosRotation = Math.cos(labelRotationRadians);\r\n\t\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\r\n\r\n\t\t\t// Make sure we draw text in the correct color and font\r\n\t\t\tcontext.fillStyle = tickFontColor;\r\n\r\n\t\t\tvar itemsToDraw = [];\r\n\r\n\t\t\tif (isHorizontal) {\r\n\t\t\t\tskipRatio = false;\r\n\r\n\t\t\t\t// Only calculate the skip ratio with the half width of longestRotateLabel if we got an actual rotation\r\n\t\t\t\t// See #2584\r\n\t\t\t\tif (isRotated) {\r\n\t\t\t\t\tlongestRotatedLabel /= 2;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * me.ticks.length > (me.width - (me.paddingLeft + me.paddingRight))) {\r\n\t\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * me.ticks.length) / (me.width - (me.paddingLeft + me.paddingRight)));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if they defined a max number of optionTicks,\r\n\t\t\t\t// increase skipRatio until that number is met\r\n\t\t\t\tif (maxTicks && me.ticks.length > maxTicks) {\r\n\t\t\t\t\twhile (!skipRatio || me.ticks.length / (skipRatio || 1) > maxTicks) {\r\n\t\t\t\t\t\tif (!skipRatio) {\r\n\t\t\t\t\t\t\tskipRatio = 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tskipRatio += 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!useAutoskipper) {\r\n\t\t\t\t\tskipRatio = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvar xTickStart = options.position === 'right' ? me.left : me.right - tl;\r\n\t\t\tvar xTickEnd = options.position === 'right' ? me.left + tl : me.right;\r\n\t\t\tvar yTickStart = options.position === 'bottom' ? me.top : me.bottom - tl;\r\n\t\t\tvar yTickEnd = options.position === 'bottom' ? me.top + tl : me.bottom;\r\n\r\n\t\t\thelpers.each(me.ticks, function(label, index) {\r\n\t\t\t\t// If the callback returned a null or undefined value, do not draw this line\r\n\t\t\t\tif (label === undefined || label === null) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar isLastTick = me.ticks.length === index + 1;\r\n\r\n\t\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\r\n\t\t\t\tvar shouldSkip = (skipRatio > 1 && index % skipRatio > 0) || (index % skipRatio === 0 && index + skipRatio >= me.ticks.length);\r\n\t\t\t\tif (shouldSkip && !isLastTick || (label === undefined || label === null)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar lineWidth, lineColor;\r\n\t\t\t\tif (index === (typeof me.zeroLineIndex !== 'undefined' ? me.zeroLineIndex : 0)) {\r\n\t\t\t\t\t// Draw the first index specially\r\n\t\t\t\t\tlineWidth = gridLines.zeroLineWidth;\r\n\t\t\t\t\tlineColor = gridLines.zeroLineColor;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlineWidth = helpers.getValueAtIndexOrDefault(gridLines.lineWidth, index);\r\n\t\t\t\t\tlineColor = helpers.getValueAtIndexOrDefault(gridLines.color, index);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Common properties\r\n\t\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\r\n\t\t\t\tvar textAlign = 'middle';\r\n\t\t\t\tvar textBaseline = 'middle';\r\n\r\n\t\t\t\tif (isHorizontal) {\r\n\r\n\t\t\t\t\tif (options.position === 'bottom') {\r\n\t\t\t\t\t\t// bottom\r\n\t\t\t\t\t\ttextBaseline = !isRotated? 'top':'middle';\r\n\t\t\t\t\t\ttextAlign = !isRotated? 'center': 'right';\r\n\t\t\t\t\t\tlabelY = me.top + tl;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// top\r\n\t\t\t\t\t\ttextBaseline = !isRotated? 'bottom':'middle';\r\n\t\t\t\t\t\ttextAlign = !isRotated? 'center': 'left';\r\n\t\t\t\t\t\tlabelY = me.bottom - tl;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar xLineValue = me.getPixelForTick(index) + helpers.aliasPixel(lineWidth); // xvalues for grid lines\r\n\t\t\t\t\tlabelX = me.getPixelForTick(index, gridLines.offsetGridLines) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\r\n\r\n\t\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\r\n\t\t\t\t\tty1 = yTickStart;\r\n\t\t\t\t\tty2 = yTickEnd;\r\n\t\t\t\t\ty1 = chartArea.top;\r\n\t\t\t\t\ty2 = chartArea.bottom;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar isLeft = options.position === 'left';\r\n\t\t\t\t\tvar tickPadding = optionTicks.padding;\r\n\t\t\t\t\tvar labelXOffset;\r\n\r\n\t\t\t\t\tif (optionTicks.mirror) {\r\n\t\t\t\t\t\ttextAlign = isLeft ? 'left' : 'right';\r\n\t\t\t\t\t\tlabelXOffset = tickPadding;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttextAlign = isLeft ? 'right' : 'left';\r\n\t\t\t\t\t\tlabelXOffset = tl + tickPadding;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlabelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\r\n\r\n\t\t\t\t\tvar yLineValue = me.getPixelForTick(index); // xvalues for grid lines\r\n\t\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\r\n\t\t\t\t\tlabelY = me.getPixelForTick(index, gridLines.offsetGridLines);\r\n\r\n\t\t\t\t\ttx1 = xTickStart;\r\n\t\t\t\t\ttx2 = xTickEnd;\r\n\t\t\t\t\tx1 = chartArea.left;\r\n\t\t\t\t\tx2 = chartArea.right;\r\n\t\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\titemsToDraw.push({\r\n\t\t\t\t\ttx1: tx1,\r\n\t\t\t\t\tty1: ty1,\r\n\t\t\t\t\ttx2: tx2,\r\n\t\t\t\t\tty2: ty2,\r\n\t\t\t\t\tx1: x1,\r\n\t\t\t\t\ty1: y1,\r\n\t\t\t\t\tx2: x2,\r\n\t\t\t\t\ty2: y2,\r\n\t\t\t\t\tlabelX: labelX,\r\n\t\t\t\t\tlabelY: labelY,\r\n\t\t\t\t\tglWidth: lineWidth,\r\n\t\t\t\t\tglColor: lineColor,\r\n\t\t\t\t\tglBorderDash: borderDash,\r\n\t\t\t\t\tglBorderDashOffset: borderDashOffset,\r\n\t\t\t\t\trotation: -1 * labelRotationRadians,\r\n\t\t\t\t\tlabel: label,\r\n\t\t\t\t\ttextBaseline: textBaseline,\r\n\t\t\t\t\ttextAlign: textAlign\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\r\n\t\t\thelpers.each(itemsToDraw, function(itemToDraw) {\r\n\t\t\t\tif (gridLines.display) {\r\n\t\t\t\t\tcontext.save();\r\n\t\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\r\n\t\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\r\n\t\t\t\t\tif (context.setLineDash) {\r\n\t\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\r\n\t\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcontext.beginPath();\r\n\r\n\t\t\t\t\tif (gridLines.drawTicks) {\r\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\r\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (gridLines.drawOnChartArea) {\r\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\r\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcontext.stroke();\r\n\t\t\t\t\tcontext.restore();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (optionTicks.display) {\r\n\t\t\t\t\tcontext.save();\r\n\t\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\r\n\t\t\t\t\tcontext.rotate(itemToDraw.rotation);\r\n\t\t\t\t\tcontext.font = tickFont.font;\r\n\t\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\r\n\t\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\r\n\r\n\t\t\t\t\tvar label = itemToDraw.label;\r\n\t\t\t\t\tif (helpers.isArray(label)) {\r\n\t\t\t\t\t\tfor (var i = 0, y = 0; i < label.length; ++i) {\r\n\t\t\t\t\t\t\t// We just make sure the multiline element is a string here..\r\n\t\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\r\n\t\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\r\n\t\t\t\t\t\t\ty += (tickFont.size * 1.5);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcontext.fillText(label, 0, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontext.restore();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (scaleLabel.display) {\r\n\t\t\t\t// Draw the scale label\r\n\t\t\t\tvar scaleLabelX;\r\n\t\t\t\tvar scaleLabelY;\r\n\t\t\t\tvar rotation = 0;\r\n\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\r\n\t\t\t\t\tscaleLabelY = options.position === 'bottom' ? me.bottom - (scaleLabelFont.size / 2) : me.top + (scaleLabelFont.size / 2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar isLeft = options.position === 'left';\r\n\t\t\t\t\tscaleLabelX = isLeft ? me.left + (scaleLabelFont.size / 2) : me.right - (scaleLabelFont.size / 2);\r\n\t\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\r\n\t\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcontext.save();\r\n\t\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\r\n\t\t\t\tcontext.rotate(rotation);\r\n\t\t\t\tcontext.textAlign = 'center';\r\n\t\t\t\tcontext.textBaseline = 'middle';\r\n\t\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\r\n\t\t\t\tcontext.font = scaleLabelFont.font;\r\n\t\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\r\n\t\t\t\tcontext.restore();\r\n\t\t\t}\r\n\r\n\t\t\tif (gridLines.drawBorder) {\r\n\t\t\t\t// Draw the line at the edge of the axis\r\n\t\t\t\tcontext.lineWidth = helpers.getValueAtIndexOrDefault(gridLines.lineWidth, 0);\r\n\t\t\t\tcontext.strokeStyle = helpers.getValueAtIndexOrDefault(gridLines.color, 0);\r\n\t\t\t\tvar x1 = me.left,\r\n\t\t\t\t\tx2 = me.right,\r\n\t\t\t\t\ty1 = me.top,\r\n\t\t\t\t\ty2 = me.bottom;\r\n\r\n\t\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\r\n\t\t\t\t\ty1 += aliasPixel;\r\n\t\t\t\t\ty2 += aliasPixel;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\r\n\t\t\t\t\tx1 += aliasPixel;\r\n\t\t\t\t\tx2 += aliasPixel;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcontext.beginPath();\r\n\t\t\t\tcontext.moveTo(x1, y1);\r\n\t\t\t\tcontext.lineTo(x2, y2);\r\n\t\t\t\tcontext.stroke();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\n\r\n},{}],33:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.scaleService = {\r\n\t\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\r\n\t\t// use the new chart options to grab the correct scale\r\n\t\tconstructors: {},\r\n\t\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\r\n\t\t// old browsers\r\n\r\n\t\t// Scale config defaults\r\n\t\tdefaults: {},\r\n\t\tregisterScaleType: function(type, scaleConstructor, defaults) {\r\n\t\t\tthis.constructors[type] = scaleConstructor;\r\n\t\t\tthis.defaults[type] = helpers.clone(defaults);\r\n\t\t},\r\n\t\tgetScaleConstructor: function(type) {\r\n\t\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\r\n\t\t},\r\n\t\tgetScaleDefaults: function(type) {\r\n\t\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\r\n\t\t\treturn this.defaults.hasOwnProperty(type) ? helpers.scaleMerge(Chart.defaults.scale, this.defaults[type]) : {};\r\n\t\t},\r\n\t\tupdateScaleDefaults: function(type, additions) {\r\n\t\t\tvar defaults = this.defaults;\r\n\t\t\tif (defaults.hasOwnProperty(type)) {\r\n\t\t\t\tdefaults[type] = helpers.extend(defaults[type], additions);\r\n\t\t\t}\r\n\t\t},\r\n\t\taddScalesToLayout: function(chartInstance) {\r\n\t\t\t// Adds each scale to the chart.boxes array to be sized accordingly\r\n\t\t\thelpers.each(chartInstance.scales, function(scale) {\r\n\t\t\t\tChart.layoutService.addBox(chartInstance, scale);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n};\r\n\r\n},{}],34:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\t/**\r\n\t * Namespace to hold static tick generation functions\r\n\t * @namespace Chart.Ticks\r\n\t */\r\n\tChart.Ticks = {\r\n\t\t/**\r\n\t\t * Namespace to hold generators for different types of ticks\r\n\t\t * @namespace Chart.Ticks.generators\r\n\t\t */\r\n\t\tgenerators: {\r\n\t\t\t/**\r\n\t\t\t * Interface for the options provided to the numeric tick generator\r\n\t\t\t * @interface INumericTickGenerationOptions\r\n\t\t\t */\r\n\t\t\t/**\r\n\t\t\t * The maximum number of ticks to display\r\n\t\t\t * @name INumericTickGenerationOptions#maxTicks\r\n\t\t\t * @type Number\r\n\t\t\t */\r\n\t\t\t/**\r\n\t\t\t * The distance between each tick.\r\n\t\t\t * @name INumericTickGenerationOptions#stepSize\r\n\t\t\t * @type Number\r\n\t\t\t * @optional\r\n\t\t\t */\r\n\t\t\t/**\r\n\t\t\t * Forced minimum for the ticks. If not specified, the minimum of the data range is used to calculate the tick minimum\r\n\t\t\t * @name INumericTickGenerationOptions#min\r\n\t\t\t * @type Number\r\n\t\t\t * @optional\r\n\t\t\t */\r\n\t\t\t/**\r\n\t\t\t * The maximum value of the ticks. If not specified, the maximum of the data range is used to calculate the tick maximum\r\n\t\t\t * @name INumericTickGenerationOptions#max\r\n\t\t\t * @type Number\r\n\t\t\t * @optional\r\n\t\t\t */\r\n\r\n\t\t\t/**\r\n\t\t\t * Generate a set of linear ticks\r\n\t\t\t * @method Chart.Ticks.generators.linear\r\n\t\t\t * @param generationOptions {INumericTickGenerationOptions} the options used to generate the ticks\r\n\t\t\t * @param dataRange {IRange} the range of the data\r\n\t\t\t * @returns {Array<Number>} array of tick values\r\n\t\t\t */\r\n\t\t\tlinear: function(generationOptions, dataRange) {\r\n\t\t\t\tvar ticks = [];\r\n\t\t\t\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\r\n\t\t\t\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\r\n\t\t\t\t// for details.\r\n\r\n\t\t\t\tvar spacing;\r\n\t\t\t\tif (generationOptions.stepSize && generationOptions.stepSize > 0) {\r\n\t\t\t\t\tspacing = generationOptions.stepSize;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\r\n\t\t\t\t\tspacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\r\n\t\t\t\t}\r\n\t\t\t\tvar niceMin = Math.floor(dataRange.min / spacing) * spacing;\r\n\t\t\t\tvar niceMax = Math.ceil(dataRange.max / spacing) * spacing;\r\n\r\n\t\t\t\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\r\n\t\t\t\tif (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\r\n\t\t\t\t\t// If very close to our whole number, use it.\r\n\t\t\t\t\tif (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\r\n\t\t\t\t\t\tniceMin = generationOptions.min;\r\n\t\t\t\t\t\tniceMax = generationOptions.max;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar numSpaces = (niceMax - niceMin) / spacing;\r\n\t\t\t\t// If very close to our rounded value, use it.\r\n\t\t\t\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\r\n\t\t\t\t\tnumSpaces = Math.round(numSpaces);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnumSpaces = Math.ceil(numSpaces);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Put the values into the ticks array\r\n\t\t\t\tticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\r\n\t\t\t\tfor (var j = 1; j < numSpaces; ++j) {\r\n\t\t\t\t\tticks.push(niceMin + (j * spacing));\r\n\t\t\t\t}\r\n\t\t\t\tticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\r\n\r\n\t\t\t\treturn ticks;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Generate a set of logarithmic ticks\r\n\t\t\t * @method Chart.Ticks.generators.logarithmic\r\n\t\t\t * @param generationOptions {INumericTickGenerationOptions} the options used to generate the ticks\r\n\t\t\t * @param dataRange {IRange} the range of the data\r\n\t\t\t * @returns {Array<Number>} array of tick values\r\n\t\t\t */\r\n\t\t\tlogarithmic: function(generationOptions, dataRange) {\r\n\t\t\t\tvar ticks = [];\r\n\t\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\r\n\r\n\t\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\r\n\t\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\r\n\t\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\r\n\t\t\t\t// the graph\r\n\t\t\t\tvar tickVal = getValueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\r\n\r\n\t\t\t\tvar endExp = Math.floor(helpers.log10(dataRange.max));\r\n\t\t\t\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\r\n\t\t\t\tvar exp;\r\n\t\t\t\tvar significand;\r\n\r\n\t\t\t\tif (tickVal === 0) {\r\n\t\t\t\t\texp = Math.floor(helpers.log10(dataRange.minNotZero));\r\n\t\t\t\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\r\n\r\n\t\t\t\t\tticks.push(tickVal);\r\n\t\t\t\t\ttickVal = significand * Math.pow(10, exp);\r\n\t\t\t\t} else {\r\n\t\t\t\t\texp = Math.floor(helpers.log10(tickVal));\r\n\t\t\t\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdo {\r\n\t\t\t\t\tticks.push(tickVal);\r\n\r\n\t\t\t\t\t++significand;\r\n\t\t\t\t\tif (significand === 10) {\r\n\t\t\t\t\t\tsignificand = 1;\r\n\t\t\t\t\t\t++exp;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttickVal = significand * Math.pow(10, exp);\r\n\t\t\t\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\r\n\r\n\t\t\t\tvar lastTick = getValueOrDefault(generationOptions.max, tickVal);\r\n\t\t\t\tticks.push(lastTick);\r\n\r\n\t\t\t\treturn ticks;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Namespace to hold formatters for different types of ticks\r\n\t\t * @namespace Chart.Ticks.formatters\r\n\t\t */\r\n\t\tformatters: {\r\n\t\t\t/**\r\n\t\t\t * Formatter for value labels\r\n\t\t\t * @method Chart.Ticks.formatters.values\r\n\t\t\t * @param value the value to display\r\n\t\t\t * @return {String|Array} the label to display\r\n\t\t\t */\r\n\t\t\tvalues: function(value) {\r\n\t\t\t\treturn helpers.isArray(value) ? value : '' + value;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Formatter for linear numeric ticks\r\n\t\t\t * @method Chart.Ticks.formatters.linear\r\n\t\t\t * @param tickValue {Number} the value to be formatted\r\n\t\t\t * @param index {Number} the position of the tickValue parameter in the ticks array\r\n\t\t\t * @param ticks {Array<Number>} the list of ticks being converted\r\n\t\t\t * @return {String} string representation of the tickValue parameter\r\n\t\t\t */\r\n\t\t\tlinear: function(tickValue, index, ticks) {\r\n\t\t\t\t// If we have lots of ticks, don't use the ones\r\n\t\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\r\n\r\n\t\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\r\n\t\t\t\tif (Math.abs(delta) > 1) {\r\n\t\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\r\n\t\t\t\t\t\t// not an integer\r\n\t\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\r\n\t\t\t\tvar tickString = '';\r\n\r\n\t\t\t\tif (tickValue !== 0) {\r\n\t\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\r\n\t\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\r\n\t\t\t\t\ttickString = tickValue.toFixed(numDecimal);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttickString = '0'; // never show decimal places for 0\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn tickString;\r\n\t\t\t},\r\n\r\n\t\t\tlogarithmic: function(tickValue, index, ticks) {\r\n\t\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\r\n\r\n\t\t\t\tif (tickValue === 0) {\r\n\t\t\t\t\treturn '0';\r\n\t\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\r\n\t\t\t\t\treturn tickValue.toExponential();\r\n\t\t\t\t}\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n};\r\n\r\n},{}],35:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.global.title = {\r\n\t\tdisplay: false,\r\n\t\tposition: 'top',\r\n\t\tfullWidth: true, // marks that this box should take the full width of the canvas (pushing down other boxes)\r\n\r\n\t\tfontStyle: 'bold',\r\n\t\tpadding: 10,\r\n\r\n\t\t// actual title\r\n\t\ttext: ''\r\n\t};\r\n\r\n\tvar noop = helpers.noop;\r\n\tChart.Title = Chart.Element.extend({\r\n\r\n\t\tinitialize: function(config) {\r\n\t\t\tvar me = this;\r\n\t\t\thelpers.extend(me, config);\r\n\r\n\t\t\t// Contains hit boxes for each dataset (in dataset order)\r\n\t\t\tme.legendHitBoxes = [];\r\n\t\t},\r\n\r\n\t\t// These methods are ordered by lifecycle. Utilities then follow.\r\n\r\n\t\tbeforeUpdate: noop,\r\n\t\tupdate: function(maxWidth, maxHeight, margins) {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n\t\t\tme.beforeUpdate();\r\n\r\n\t\t\t// Absorb the master measurements\r\n\t\t\tme.maxWidth = maxWidth;\r\n\t\t\tme.maxHeight = maxHeight;\r\n\t\t\tme.margins = margins;\r\n\r\n\t\t\t// Dimensions\r\n\t\t\tme.beforeSetDimensions();\r\n\t\t\tme.setDimensions();\r\n\t\t\tme.afterSetDimensions();\r\n\t\t\t// Labels\r\n\t\t\tme.beforeBuildLabels();\r\n\t\t\tme.buildLabels();\r\n\t\t\tme.afterBuildLabels();\r\n\r\n\t\t\t// Fit\r\n\t\t\tme.beforeFit();\r\n\t\t\tme.fit();\r\n\t\t\tme.afterFit();\r\n\t\t\t//\r\n\t\t\tme.afterUpdate();\r\n\r\n\t\t\treturn me.minSize;\r\n\r\n\t\t},\r\n\t\tafterUpdate: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeSetDimensions: noop,\r\n\t\tsetDimensions: function() {\r\n\t\t\tvar me = this;\r\n\t\t\t// Set the unconstrained dimension before label rotation\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tme.width = me.maxWidth;\r\n\t\t\t\tme.left = 0;\r\n\t\t\t\tme.right = me.width;\r\n\t\t\t} else {\r\n\t\t\t\tme.height = me.maxHeight;\r\n\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tme.top = 0;\r\n\t\t\t\tme.bottom = me.height;\r\n\t\t\t}\r\n\r\n\t\t\t// Reset padding\r\n\t\t\tme.paddingLeft = 0;\r\n\t\t\tme.paddingTop = 0;\r\n\t\t\tme.paddingRight = 0;\r\n\t\t\tme.paddingBottom = 0;\r\n\r\n\t\t\t// Reset minSize\r\n\t\t\tme.minSize = {\r\n\t\t\t\twidth: 0,\r\n\t\t\t\theight: 0\r\n\t\t\t};\r\n\t\t},\r\n\t\tafterSetDimensions: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeBuildLabels: noop,\r\n\t\tbuildLabels: noop,\r\n\t\tafterBuildLabels: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeFit: noop,\r\n\t\tfit: function() {\r\n\t\t\tvar me = this,\r\n\t\t\t\tvalueOrDefault = helpers.getValueOrDefault,\r\n\t\t\t\topts = me.options,\r\n\t\t\t\tglobalDefaults = Chart.defaults.global,\r\n\t\t\t\tdisplay = opts.display,\r\n\t\t\t\tfontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),\r\n\t\t\t\tminSize = me.minSize;\r\n\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\tminSize.width = me.maxWidth; // fill all the width\r\n\t\t\t\tminSize.height = display ? fontSize + (opts.padding * 2) : 0;\r\n\t\t\t} else {\r\n\t\t\t\tminSize.width = display ? fontSize + (opts.padding * 2) : 0;\r\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\r\n\t\t\t}\r\n\r\n\t\t\tme.width = minSize.width;\r\n\t\t\tme.height = minSize.height;\r\n\r\n\t\t},\r\n\t\tafterFit: noop,\r\n\r\n\t\t// Shared Methods\r\n\t\tisHorizontal: function() {\r\n\t\t\tvar pos = this.options.position;\r\n\t\t\treturn pos === 'top' || pos === 'bottom';\r\n\t\t},\r\n\r\n\t\t// Actually draw the title block on the canvas\r\n\t\tdraw: function() {\r\n\t\t\tvar me = this,\r\n\t\t\t\tctx = me.ctx,\r\n\t\t\t\tvalueOrDefault = helpers.getValueOrDefault,\r\n\t\t\t\topts = me.options,\r\n\t\t\t\tglobalDefaults = Chart.defaults.global;\r\n\r\n\t\t\tif (opts.display) {\r\n\t\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),\r\n\t\t\t\t\tfontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle),\r\n\t\t\t\t\tfontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily),\r\n\t\t\t\t\ttitleFont = helpers.fontString(fontSize, fontStyle, fontFamily),\r\n\t\t\t\t\trotation = 0,\r\n\t\t\t\t\ttitleX,\r\n\t\t\t\t\ttitleY,\r\n\t\t\t\t\ttop = me.top,\r\n\t\t\t\t\tleft = me.left,\r\n\t\t\t\t\tbottom = me.bottom,\r\n\t\t\t\t\tright = me.right,\r\n\t\t\t\t\tmaxWidth;\r\n\r\n\t\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\r\n\t\t\t\tctx.font = titleFont;\r\n\r\n\t\t\t\t// Horizontal\r\n\t\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\r\n\t\t\t\t\ttitleY = top + ((bottom - top) / 2); // midpoint of the height\r\n\t\t\t\t\tmaxWidth = right - left;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttitleX = opts.position === 'left' ? left + (fontSize / 2) : right - (fontSize / 2);\r\n\t\t\t\t\ttitleY = top + ((bottom - top) / 2);\r\n\t\t\t\t\tmaxWidth = bottom - top;\r\n\t\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tctx.save();\r\n\t\t\t\tctx.translate(titleX, titleY);\r\n\t\t\t\tctx.rotate(rotation);\r\n\t\t\t\tctx.textAlign = 'center';\r\n\t\t\t\tctx.textBaseline = 'middle';\r\n\t\t\t\tctx.fillText(opts.text, 0, 0, maxWidth);\r\n\t\t\t\tctx.restore();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tfunction createNewTitleBlockAndAttach(chartInstance, titleOpts) {\r\n\t\tvar title = new Chart.Title({\r\n\t\t\tctx: chartInstance.chart.ctx,\r\n\t\t\toptions: titleOpts,\r\n\t\t\tchart: chartInstance\r\n\t\t});\r\n\t\tchartInstance.titleBlock = title;\r\n\t\tChart.layoutService.addBox(chartInstance, title);\r\n\t}\r\n\r\n\t// Register the title plugin\r\n\tChart.plugins.register({\r\n\t\tbeforeInit: function(chartInstance) {\r\n\t\t\tvar titleOpts = chartInstance.options.title;\r\n\r\n\t\t\tif (titleOpts) {\r\n\t\t\t\tcreateNewTitleBlockAndAttach(chartInstance, titleOpts);\r\n\t\t\t}\r\n\t\t},\r\n\t\tbeforeUpdate: function(chartInstance) {\r\n\t\t\tvar titleOpts = chartInstance.options.title;\r\n\r\n\t\t\tif (titleOpts) {\r\n\t\t\t\ttitleOpts = helpers.configMerge(Chart.defaults.global.title, titleOpts);\r\n\r\n\t\t\t\tif (chartInstance.titleBlock) {\r\n\t\t\t\t\tchartInstance.titleBlock.options = titleOpts;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcreateNewTitleBlockAndAttach(chartInstance, titleOpts);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tChart.layoutService.removeBox(chartInstance, chartInstance.titleBlock);\r\n\t\t\t\tdelete chartInstance.titleBlock;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\n\r\n},{}],36:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\t/**\r\n \t * Helper method to merge the opacity into a color\r\n \t */\r\n\tfunction mergeOpacity(colorString, opacity) {\r\n\t\tvar color = helpers.color(colorString);\r\n\t\treturn color.alpha(opacity * color.alpha()).rgbaString();\r\n\t}\r\n\r\n\tChart.defaults.global.tooltips = {\r\n\t\tenabled: true,\r\n\t\tcustom: null,\r\n\t\tmode: 'nearest',\r\n\t\tposition: 'average',\r\n\t\tintersect: true,\r\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\r\n\t\ttitleFontStyle: 'bold',\r\n\t\ttitleSpacing: 2,\r\n\t\ttitleMarginBottom: 6,\r\n\t\ttitleFontColor: '#fff',\r\n\t\ttitleAlign: 'left',\r\n\t\tbodySpacing: 2,\r\n\t\tbodyFontColor: '#fff',\r\n\t\tbodyAlign: 'left',\r\n\t\tfooterFontStyle: 'bold',\r\n\t\tfooterSpacing: 2,\r\n\t\tfooterMarginTop: 6,\r\n\t\tfooterFontColor: '#fff',\r\n\t\tfooterAlign: 'left',\r\n\t\tyPadding: 6,\r\n\t\txPadding: 6,\r\n\t\tcaretSize: 5,\r\n\t\tcornerRadius: 6,\r\n\t\tmultiKeyBackground: '#fff',\r\n\t\tdisplayColors: true,\r\n\t\tcallbacks: {\r\n\t\t\t// Args are: (tooltipItems, data)\r\n\t\t\tbeforeTitle: helpers.noop,\r\n\t\t\ttitle: function(tooltipItems, data) {\r\n\t\t\t\t// Pick first xLabel for now\r\n\t\t\t\tvar title = '';\r\n\t\t\t\tvar labels = data.labels;\r\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\r\n\r\n\t\t\t\tif (tooltipItems.length > 0) {\r\n\t\t\t\t\tvar item = tooltipItems[0];\r\n\r\n\t\t\t\t\tif (item.xLabel) {\r\n\t\t\t\t\t\ttitle = item.xLabel;\r\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\r\n\t\t\t\t\t\ttitle = labels[item.index];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn title;\r\n\t\t\t},\r\n\t\t\tafterTitle: helpers.noop,\r\n\r\n\t\t\t// Args are: (tooltipItems, data)\r\n\t\t\tbeforeBody: helpers.noop,\r\n\r\n\t\t\t// Args are: (tooltipItem, data)\r\n\t\t\tbeforeLabel: helpers.noop,\r\n\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\t\t\t\treturn datasetLabel + ': ' + tooltipItem.yLabel;\r\n\t\t\t},\r\n\t\t\tlabelColor: function(tooltipItem, chartInstance) {\r\n\t\t\t\tvar meta = chartInstance.getDatasetMeta(tooltipItem.datasetIndex);\r\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\r\n\t\t\t\tvar view = activeElement._view;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tborderColor: view.borderColor,\r\n\t\t\t\t\tbackgroundColor: view.backgroundColor\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\tafterLabel: helpers.noop,\r\n\r\n\t\t\t// Args are: (tooltipItems, data)\r\n\t\t\tafterBody: helpers.noop,\r\n\r\n\t\t\t// Args are: (tooltipItems, data)\r\n\t\t\tbeforeFooter: helpers.noop,\r\n\t\t\tfooter: helpers.noop,\r\n\t\t\tafterFooter: helpers.noop\r\n\t\t}\r\n\t};\r\n\r\n\t// Helper to push or concat based on if the 2nd parameter is an array or not\r\n\tfunction pushOrConcat(base, toPush) {\r\n\t\tif (toPush) {\r\n\t\t\tif (helpers.isArray(toPush)) {\r\n\t\t\t\t// base = base.concat(toPush);\r\n\t\t\t\tArray.prototype.push.apply(base, toPush);\r\n\t\t\t} else {\r\n\t\t\t\tbase.push(toPush);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn base;\r\n\t}\r\n\r\n\t// Private helper to create a tooltip item model\r\n\t// @param element : the chart element (point, arc, bar) to create the tooltip item for\r\n\t// @return : new tooltip item\r\n\tfunction createTooltipItem(element) {\r\n\t\tvar xScale = element._xScale;\r\n\t\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\r\n\t\tvar index = element._index,\r\n\t\t\tdatasetIndex = element._datasetIndex;\r\n\r\n\t\treturn {\r\n\t\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\r\n\t\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\r\n\t\t\tindex: index,\r\n\t\t\tdatasetIndex: datasetIndex,\r\n\t\t\tx: element._model.x,\r\n\t\t\ty: element._model.y\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to get the reset model for the tooltip\r\n\t * @param tooltipOpts {Object} the tooltip options\r\n\t */\r\n\tfunction getBaseModel(tooltipOpts) {\r\n\t\tvar globalDefaults = Chart.defaults.global;\r\n\t\tvar getValueOrDefault = helpers.getValueOrDefault;\r\n\r\n\t\treturn {\r\n\t\t\t// Positioning\r\n\t\t\txPadding: tooltipOpts.xPadding,\r\n\t\t\tyPadding: tooltipOpts.yPadding,\r\n\t\t\txAlign: tooltipOpts.xAlign,\r\n\t\t\tyAlign: tooltipOpts.yAlign,\r\n\r\n\t\t\t// Body\r\n\t\t\tbodyFontColor: tooltipOpts.bodyFontColor,\r\n\t\t\t_bodyFontFamily: getValueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\r\n\t\t\t_bodyFontStyle: getValueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\r\n\t\t\t_bodyAlign: tooltipOpts.bodyAlign,\r\n\t\t\tbodyFontSize: getValueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\r\n\t\t\tbodySpacing: tooltipOpts.bodySpacing,\r\n\r\n\t\t\t// Title\r\n\t\t\ttitleFontColor: tooltipOpts.titleFontColor,\r\n\t\t\t_titleFontFamily: getValueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\r\n\t\t\t_titleFontStyle: getValueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\r\n\t\t\ttitleFontSize: getValueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\r\n\t\t\t_titleAlign: tooltipOpts.titleAlign,\r\n\t\t\ttitleSpacing: tooltipOpts.titleSpacing,\r\n\t\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\r\n\r\n\t\t\t// Footer\r\n\t\t\tfooterFontColor: tooltipOpts.footerFontColor,\r\n\t\t\t_footerFontFamily: getValueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\r\n\t\t\t_footerFontStyle: getValueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\r\n\t\t\tfooterFontSize: getValueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\r\n\t\t\t_footerAlign: tooltipOpts.footerAlign,\r\n\t\t\tfooterSpacing: tooltipOpts.footerSpacing,\r\n\t\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\r\n\r\n\t\t\t// Appearance\r\n\t\t\tcaretSize: tooltipOpts.caretSize,\r\n\t\t\tcornerRadius: tooltipOpts.cornerRadius,\r\n\t\t\tbackgroundColor: tooltipOpts.backgroundColor,\r\n\t\t\topacity: 0,\r\n\t\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\r\n\t\t\tdisplayColors: tooltipOpts.displayColors\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Get the size of the tooltip\r\n\t */\r\n\tfunction getTooltipSize(tooltip, model) {\r\n\t\tvar ctx = tooltip._chart.ctx;\r\n\r\n\t\tvar height = model.yPadding * 2; // Tooltip Padding\r\n\t\tvar width = 0;\r\n\r\n\t\t// Count of all lines in the body\r\n\t\tvar body = model.body;\r\n\t\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\r\n\t\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\r\n\t\t}, 0);\r\n\t\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\r\n\r\n\t\tvar titleLineCount = model.title.length;\r\n\t\tvar footerLineCount = model.footer.length;\r\n\t\tvar titleFontSize = model.titleFontSize,\r\n\t\t\tbodyFontSize = model.bodyFontSize,\r\n\t\t\tfooterFontSize = model.footerFontSize;\r\n\r\n\t\theight += titleLineCount * titleFontSize; // Title Lines\r\n\t\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\r\n\t\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\r\n\t\theight += combinedBodyLength * bodyFontSize; // Body Lines\r\n\t\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\r\n\t\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\r\n\t\theight += footerLineCount * (footerFontSize); // Footer Lines\r\n\t\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\r\n\r\n\t\t// Title width\r\n\t\tvar widthPadding = 0;\r\n\t\tvar maxLineWidth = function(line) {\r\n\t\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\r\n\t\t};\r\n\r\n\t\tctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\r\n\t\thelpers.each(model.title, maxLineWidth);\r\n\r\n\t\t// Body width\r\n\t\tctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\r\n\t\thelpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\r\n\r\n\t\t// Body lines may include some extra width due to the color box\r\n\t\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\r\n\t\thelpers.each(body, function(bodyItem) {\r\n\t\t\thelpers.each(bodyItem.before, maxLineWidth);\r\n\t\t\thelpers.each(bodyItem.lines, maxLineWidth);\r\n\t\t\thelpers.each(bodyItem.after, maxLineWidth);\r\n\t\t});\r\n\r\n\t\t// Reset back to 0\r\n\t\twidthPadding = 0;\r\n\r\n\t\t// Footer width\r\n\t\tctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\r\n\t\thelpers.each(model.footer, maxLineWidth);\r\n\r\n\t\t// Add padding\r\n\t\twidth += 2 * model.xPadding;\r\n\r\n\t\treturn {\r\n\t\t\twidth: width,\r\n\t\t\theight: height\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to get the alignment of a tooltip given the size\r\n\t */\r\n\tfunction determineAlignment(tooltip, size) {\r\n\t\tvar model = tooltip._model;\r\n\t\tvar chart = tooltip._chart;\r\n\t\tvar chartArea = tooltip._chartInstance.chartArea;\r\n\t\tvar xAlign = 'center';\r\n\t\tvar yAlign = 'center';\r\n\r\n\t\tif (model.y < size.height) {\r\n\t\t\tyAlign = 'top';\r\n\t\t} else if (model.y > (chart.height - size.height)) {\r\n\t\t\tyAlign = 'bottom';\r\n\t\t}\r\n\r\n\t\tvar lf, rf; // functions to determine left, right alignment\r\n\t\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\r\n\t\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\r\n\t\tvar midX = (chartArea.left + chartArea.right) / 2;\r\n\t\tvar midY = (chartArea.top + chartArea.bottom) / 2;\r\n\r\n\t\tif (yAlign === 'center') {\r\n\t\t\tlf = function(x) {\r\n\t\t\t\treturn x <= midX;\r\n\t\t\t};\r\n\t\t\trf = function(x) {\r\n\t\t\t\treturn x > midX;\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tlf = function(x) {\r\n\t\t\t\treturn x <= (size.width / 2);\r\n\t\t\t};\r\n\t\t\trf = function(x) {\r\n\t\t\t\treturn x >= (chart.width - (size.width / 2));\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tolf = function(x) {\r\n\t\t\treturn x + size.width > chart.width;\r\n\t\t};\r\n\t\torf = function(x) {\r\n\t\t\treturn x - size.width < 0;\r\n\t\t};\r\n\t\tyf = function(y) {\r\n\t\t\treturn y <= midY ? 'top' : 'bottom';\r\n\t\t};\r\n\r\n\t\tif (lf(model.x)) {\r\n\t\t\txAlign = 'left';\r\n\r\n\t\t\t// Is tooltip too wide and goes over the right side of the chart.?\r\n\t\t\tif (olf(model.x)) {\r\n\t\t\t\txAlign = 'center';\r\n\t\t\t\tyAlign = yf(model.y);\r\n\t\t\t}\r\n\t\t} else if (rf(model.x)) {\r\n\t\t\txAlign = 'right';\r\n\r\n\t\t\t// Is tooltip too wide and goes outside left edge of canvas?\r\n\t\t\tif (orf(model.x)) {\r\n\t\t\t\txAlign = 'center';\r\n\t\t\t\tyAlign = yf(model.y);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar opts = tooltip._options;\r\n\t\treturn {\r\n\t\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\r\n\t\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\r\n\t */\r\n\tfunction getBackgroundPoint(vm, size, alignment) {\r\n\t\t// Background Position\r\n\t\tvar x = vm.x;\r\n\t\tvar y = vm.y;\r\n\r\n\t\tvar caretSize = vm.caretSize,\r\n\t\t\tcaretPadding = vm.caretPadding,\r\n\t\t\tcornerRadius = vm.cornerRadius,\r\n\t\t\txAlign = alignment.xAlign,\r\n\t\t\tyAlign = alignment.yAlign,\r\n\t\t\tpaddingAndSize = caretSize + caretPadding,\r\n\t\t\tradiusAndPadding = cornerRadius + caretPadding;\r\n\r\n\t\tif (xAlign === 'right') {\r\n\t\t\tx -= size.width;\r\n\t\t} else if (xAlign === 'center') {\r\n\t\t\tx -= (size.width / 2);\r\n\t\t}\r\n\r\n\t\tif (yAlign === 'top') {\r\n\t\t\ty += paddingAndSize;\r\n\t\t} else if (yAlign === 'bottom') {\r\n\t\t\ty -= size.height + paddingAndSize;\r\n\t\t} else {\r\n\t\t\ty -= (size.height / 2);\r\n\t\t}\r\n\r\n\t\tif (yAlign === 'center') {\r\n\t\t\tif (xAlign === 'left') {\r\n\t\t\t\tx += paddingAndSize;\r\n\t\t\t} else if (xAlign === 'right') {\r\n\t\t\t\tx -= paddingAndSize;\r\n\t\t\t}\r\n\t\t} else if (xAlign === 'left') {\r\n\t\t\tx -= radiusAndPadding;\r\n\t\t} else if (xAlign === 'right') {\r\n\t\t\tx += radiusAndPadding;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tx: x,\r\n\t\t\ty: y\r\n\t\t};\r\n\t}\r\n\r\n\tChart.Tooltip = Chart.Element.extend({\r\n\t\tinitialize: function() {\r\n\t\t\tthis._model = getBaseModel(this._options);\r\n\t\t},\r\n\r\n\t\t// Get the title\r\n\t\t// Args are: (tooltipItem, data)\r\n\t\tgetTitle: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me._options;\r\n\t\t\tvar callbacks = opts.callbacks;\r\n\r\n\t\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments),\r\n\t\t\t\ttitle = callbacks.title.apply(me, arguments),\r\n\t\t\t\tafterTitle = callbacks.afterTitle.apply(me, arguments);\r\n\r\n\t\t\tvar lines = [];\r\n\t\t\tlines = pushOrConcat(lines, beforeTitle);\r\n\t\t\tlines = pushOrConcat(lines, title);\r\n\t\t\tlines = pushOrConcat(lines, afterTitle);\r\n\r\n\t\t\treturn lines;\r\n\t\t},\r\n\r\n\t\t// Args are: (tooltipItem, data)\r\n\t\tgetBeforeBody: function() {\r\n\t\t\tvar lines = this._options.callbacks.beforeBody.apply(this, arguments);\r\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n\t\t},\r\n\r\n\t\t// Args are: (tooltipItem, data)\r\n\t\tgetBody: function(tooltipItems, data) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar callbacks = me._options.callbacks;\r\n\t\t\tvar bodyItems = [];\r\n\r\n\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\r\n\t\t\t\tvar bodyItem = {\r\n\t\t\t\t\tbefore: [],\r\n\t\t\t\t\tlines: [],\r\n\t\t\t\t\tafter: []\r\n\t\t\t\t};\r\n\t\t\t\tpushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\r\n\t\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\r\n\t\t\t\tpushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\r\n\r\n\t\t\t\tbodyItems.push(bodyItem);\r\n\t\t\t});\r\n\r\n\t\t\treturn bodyItems;\r\n\t\t},\r\n\r\n\t\t// Args are: (tooltipItem, data)\r\n\t\tgetAfterBody: function() {\r\n\t\t\tvar lines = this._options.callbacks.afterBody.apply(this, arguments);\r\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n\t\t},\r\n\r\n\t\t// Get the footer and beforeFooter and afterFooter lines\r\n\t\t// Args are: (tooltipItem, data)\r\n\t\tgetFooter: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar callbacks = me._options.callbacks;\r\n\r\n\t\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\r\n\t\t\tvar footer = callbacks.footer.apply(me, arguments);\r\n\t\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\r\n\r\n\t\t\tvar lines = [];\r\n\t\t\tlines = pushOrConcat(lines, beforeFooter);\r\n\t\t\tlines = pushOrConcat(lines, footer);\r\n\t\t\tlines = pushOrConcat(lines, afterFooter);\r\n\r\n\t\t\treturn lines;\r\n\t\t},\r\n\r\n\t\tupdate: function(changed) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me._options;\r\n\r\n\t\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\r\n\t\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\r\n\t\t\t// which breaks any animations.\r\n\t\t\tvar existingModel = me._model;\r\n\t\t\tvar model = me._model = getBaseModel(opts);\r\n\t\t\tvar active = me._active;\r\n\r\n\t\t\tvar data = me._data;\r\n\t\t\tvar chartInstance = me._chartInstance;\r\n\r\n\t\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\r\n\t\t\tvar alignment = {\r\n\t\t\t\txAlign: existingModel.xAlign,\r\n\t\t\t\tyAlign: existingModel.yAlign\r\n\t\t\t};\r\n\t\t\tvar backgroundPoint = {\r\n\t\t\t\tx: existingModel.x,\r\n\t\t\t\ty: existingModel.y\r\n\t\t\t};\r\n\t\t\tvar tooltipSize = {\r\n\t\t\t\twidth: existingModel.width,\r\n\t\t\t\theight: existingModel.height\r\n\t\t\t};\r\n\t\t\tvar tooltipPosition = {\r\n\t\t\t\tx: existingModel.caretX,\r\n\t\t\t\ty: existingModel.caretY\r\n\t\t\t};\r\n\r\n\t\t\tvar i, len;\r\n\r\n\t\t\tif (active.length) {\r\n\t\t\t\tmodel.opacity = 1;\r\n\r\n\t\t\t\tvar labelColors = [];\r\n\t\t\t\ttooltipPosition = Chart.Tooltip.positioners[opts.position](active, me._eventPosition);\r\n\r\n\t\t\t\tvar tooltipItems = [];\r\n\t\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\r\n\t\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If the user provided a filter function, use it to modify the tooltip items\r\n\t\t\t\tif (opts.filter) {\r\n\t\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\r\n\t\t\t\t\t\treturn opts.filter(a, data);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\r\n\t\t\t\tif (opts.itemSort) {\r\n\t\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\r\n\t\t\t\t\t\treturn opts.itemSort(a, b, data);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Determine colors for boxes\r\n\t\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\r\n\t\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, chartInstance));\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Build the Text Lines\r\n\t\t\t\tmodel.title = me.getTitle(tooltipItems, data);\r\n\t\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\r\n\t\t\t\tmodel.body = me.getBody(tooltipItems, data);\r\n\t\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\r\n\t\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\r\n\r\n\t\t\t\t// Initial positioning and colors\r\n\t\t\t\tmodel.x = Math.round(tooltipPosition.x);\r\n\t\t\t\tmodel.y = Math.round(tooltipPosition.y);\r\n\t\t\t\tmodel.caretPadding = helpers.getValueOrDefault(tooltipPosition.padding, 2);\r\n\t\t\t\tmodel.labelColors = labelColors;\r\n\r\n\t\t\t\t// data points\r\n\t\t\t\tmodel.dataPoints = tooltipItems;\r\n\r\n\t\t\t\t// We need to determine alignment of the tooltip\r\n\t\t\t\ttooltipSize = getTooltipSize(this, model);\r\n\t\t\t\talignment = determineAlignment(this, tooltipSize);\r\n\t\t\t\t// Final Size and Position\r\n\t\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment);\r\n\t\t\t} else {\r\n\t\t\t\tmodel.opacity = 0;\r\n\t\t\t}\r\n\r\n\t\t\tmodel.xAlign = alignment.xAlign;\r\n\t\t\tmodel.yAlign = alignment.yAlign;\r\n\t\t\tmodel.x = backgroundPoint.x;\r\n\t\t\tmodel.y = backgroundPoint.y;\r\n\t\t\tmodel.width = tooltipSize.width;\r\n\t\t\tmodel.height = tooltipSize.height;\r\n\r\n\t\t\t// Point where the caret on the tooltip points to\r\n\t\t\tmodel.caretX = tooltipPosition.x;\r\n\t\t\tmodel.caretY = tooltipPosition.y;\r\n\r\n\t\t\tme._model = model;\r\n\r\n\t\t\tif (changed && opts.custom) {\r\n\t\t\t\topts.custom.call(me, model);\r\n\t\t\t}\r\n\r\n\t\t\treturn me;\r\n\t\t},\r\n\t\tdrawCaret: function(tooltipPoint, size, opacity) {\r\n\t\t\tvar vm = this._view;\r\n\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\tvar x1, x2, x3;\r\n\t\t\tvar y1, y2, y3;\r\n\t\t\tvar caretSize = vm.caretSize;\r\n\t\t\tvar cornerRadius = vm.cornerRadius;\r\n\t\t\tvar xAlign = vm.xAlign,\r\n\t\t\t\tyAlign = vm.yAlign;\r\n\t\t\tvar ptX = tooltipPoint.x,\r\n\t\t\t\tptY = tooltipPoint.y;\r\n\t\t\tvar width = size.width,\r\n\t\t\t\theight = size.height;\r\n\r\n\t\t\tif (yAlign === 'center') {\r\n\t\t\t\t// Left or right side\r\n\t\t\t\tif (xAlign === 'left') {\r\n\t\t\t\t\tx1 = ptX;\r\n\t\t\t\t\tx2 = x1 - caretSize;\r\n\t\t\t\t\tx3 = x1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tx1 = ptX + width;\r\n\t\t\t\t\tx2 = x1 + caretSize;\r\n\t\t\t\t\tx3 = x1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ty2 = ptY + (height / 2);\r\n\t\t\t\ty1 = y2 - caretSize;\r\n\t\t\t\ty3 = y2 + caretSize;\r\n\t\t\t} else {\r\n\t\t\t\tif (xAlign === 'left') {\r\n\t\t\t\t\tx1 = ptX + cornerRadius;\r\n\t\t\t\t\tx2 = x1 + caretSize;\r\n\t\t\t\t\tx3 = x2 + caretSize;\r\n\t\t\t\t} else if (xAlign === 'right') {\r\n\t\t\t\t\tx1 = ptX + width - cornerRadius;\r\n\t\t\t\t\tx2 = x1 - caretSize;\r\n\t\t\t\t\tx3 = x2 - caretSize;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tx2 = ptX + (width / 2);\r\n\t\t\t\t\tx1 = x2 - caretSize;\r\n\t\t\t\t\tx3 = x2 + caretSize;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (yAlign === 'top') {\r\n\t\t\t\t\ty1 = ptY;\r\n\t\t\t\t\ty2 = y1 - caretSize;\r\n\t\t\t\t\ty3 = y1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ty1 = ptY + height;\r\n\t\t\t\t\ty2 = y1 + caretSize;\r\n\t\t\t\t\ty3 = y1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(x1, y1);\r\n\t\t\tctx.lineTo(x2, y2);\r\n\t\t\tctx.lineTo(x3, y3);\r\n\t\t\tctx.closePath();\r\n\t\t\tctx.fill();\r\n\t\t},\r\n\t\tdrawTitle: function(pt, vm, ctx, opacity) {\r\n\t\t\tvar title = vm.title;\r\n\r\n\t\t\tif (title.length) {\r\n\t\t\t\tctx.textAlign = vm._titleAlign;\r\n\t\t\t\tctx.textBaseline = 'top';\r\n\r\n\t\t\t\tvar titleFontSize = vm.titleFontSize,\r\n\t\t\t\t\ttitleSpacing = vm.titleSpacing;\r\n\r\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\r\n\t\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\r\n\r\n\t\t\t\tvar i, len;\r\n\t\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\r\n\t\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\r\n\t\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\r\n\r\n\t\t\t\t\tif (i + 1 === title.length) {\r\n\t\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tdrawBody: function(pt, vm, ctx, opacity) {\r\n\t\t\tvar bodyFontSize = vm.bodyFontSize;\r\n\t\t\tvar bodySpacing = vm.bodySpacing;\r\n\t\t\tvar body = vm.body;\r\n\r\n\t\t\tctx.textAlign = vm._bodyAlign;\r\n\t\t\tctx.textBaseline = 'top';\r\n\r\n\t\t\tvar textColor = mergeOpacity(vm.bodyFontColor, opacity);\r\n\t\t\tctx.fillStyle = textColor;\r\n\t\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\r\n\r\n\t\t\t// Before Body\r\n\t\t\tvar xLinePadding = 0;\r\n\t\t\tvar fillLineOfText = function(line) {\r\n\t\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\r\n\t\t\t\tpt.y += bodyFontSize + bodySpacing;\r\n\t\t\t};\r\n\r\n\t\t\t// Before body lines\r\n\t\t\thelpers.each(vm.beforeBody, fillLineOfText);\r\n\r\n\t\t\tvar drawColorBoxes = vm.displayColors;\r\n\t\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\r\n\r\n\t\t\t// Draw body lines now\r\n\t\t\thelpers.each(body, function(bodyItem, i) {\r\n\t\t\t\thelpers.each(bodyItem.before, fillLineOfText);\r\n\r\n\t\t\t\thelpers.each(bodyItem.lines, function(line) {\r\n\t\t\t\t\t// Draw Legend-like boxes if needed\r\n\t\t\t\t\tif (drawColorBoxes) {\r\n\t\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\r\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\r\n\t\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\r\n\r\n\t\t\t\t\t\t// Border\r\n\t\t\t\t\t\tctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\r\n\t\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\r\n\r\n\t\t\t\t\t\t// Inner square\r\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\r\n\t\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\r\n\r\n\t\t\t\t\t\tctx.fillStyle = textColor;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfillLineOfText(line);\r\n\t\t\t\t});\r\n\r\n\t\t\t\thelpers.each(bodyItem.after, fillLineOfText);\r\n\t\t\t});\r\n\r\n\t\t\t// Reset back to 0 for after body\r\n\t\t\txLinePadding = 0;\r\n\r\n\t\t\t// After body lines\r\n\t\t\thelpers.each(vm.afterBody, fillLineOfText);\r\n\t\t\tpt.y -= bodySpacing; // Remove last body spacing\r\n\t\t},\r\n\t\tdrawFooter: function(pt, vm, ctx, opacity) {\r\n\t\t\tvar footer = vm.footer;\r\n\r\n\t\t\tif (footer.length) {\r\n\t\t\t\tpt.y += vm.footerMarginTop;\r\n\r\n\t\t\t\tctx.textAlign = vm._footerAlign;\r\n\t\t\t\tctx.textBaseline = 'top';\r\n\r\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\r\n\t\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\r\n\r\n\t\t\t\thelpers.each(footer, function(line) {\r\n\t\t\t\t\tctx.fillText(line, pt.x, pt.y);\r\n\t\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tdrawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\r\n\t\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\r\n\t\t\thelpers.drawRoundedRectangle(ctx, pt.x, pt.y, tooltipSize.width, tooltipSize.height, vm.cornerRadius);\r\n\t\t\tctx.fill();\r\n\t\t},\r\n\t\tdraw: function() {\r\n\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\tvar vm = this._view;\r\n\r\n\t\t\tif (vm.opacity === 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar tooltipSize = {\r\n\t\t\t\twidth: vm.width,\r\n\t\t\t\theight: vm.height\r\n\t\t\t};\r\n\t\t\tvar pt = {\r\n\t\t\t\tx: vm.x,\r\n\t\t\t\ty: vm.y\r\n\t\t\t};\r\n\r\n\t\t\t// IE11/Edge does not like very small opacities, so snap to 0\r\n\t\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\r\n\r\n\t\t\tif (this._options.enabled) {\r\n\t\t\t\t// Draw Background\r\n\t\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize, opacity);\r\n\r\n\t\t\t\t// Draw Caret\r\n\t\t\t\tthis.drawCaret(pt, tooltipSize, opacity);\r\n\r\n\t\t\t\t// Draw Title, Body, and Footer\r\n\t\t\t\tpt.x += vm.xPadding;\r\n\t\t\t\tpt.y += vm.yPadding;\r\n\r\n\t\t\t\t// Titles\r\n\t\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\r\n\r\n\t\t\t\t// Body\r\n\t\t\t\tthis.drawBody(pt, vm, ctx, opacity);\r\n\r\n\t\t\t\t// Footer\r\n\t\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Handle an event\r\n\t\t * @private\r\n\t\t * @param {IEvent} event - The event to handle\r\n\t\t * @returns {Boolean} true if the tooltip changed\r\n\t\t */\r\n\t\thandleEvent: function(e) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar options = me._options;\r\n\t\t\tvar changed = false;\r\n\r\n\t\t\tme._lastActive = me._lastActive || [];\r\n\r\n\t\t\t// Find Active Elements for tooltips\r\n\t\t\tif (e.type === 'mouseout') {\r\n\t\t\t\tme._active = [];\r\n\t\t\t} else {\r\n\t\t\t\tme._active = me._chartInstance.getElementsAtEventForMode(e, options.mode, options);\r\n\t\t\t}\r\n\r\n\t\t\t// Remember Last Actives\r\n\t\t\tchanged = !helpers.arrayEquals(me._active, me._lastActive);\r\n\t\t\tme._lastActive = me._active;\r\n\r\n\t\t\tif (options.enabled || options.custom) {\r\n\t\t\t\tme._eventPosition = {\r\n\t\t\t\t\tx: e.x,\r\n\t\t\t\t\ty: e.y\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar model = me._model;\r\n\t\t\t\tme.update(true);\r\n\t\t\t\tme.pivot();\r\n\r\n\t\t\t\t// See if our tooltip position changed\r\n\t\t\t\tchanged |= (model.x !== me._model.x) || (model.y !== me._model.y);\r\n\t\t\t}\r\n\r\n\t\t\treturn changed;\r\n\t\t}\r\n\t});\r\n\r\n\t/**\r\n\t * @namespace Chart.Tooltip.positioners\r\n\t */\r\n\tChart.Tooltip.positioners = {\r\n\t\t/**\r\n\t\t * Average mode places the tooltip at the average position of the elements shown\r\n\t\t * @function Chart.Tooltip.positioners.average\r\n\t\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\r\n\t\t * @returns {Point} tooltip position\r\n\t\t */\r\n\t\taverage: function(elements) {\r\n\t\t\tif (!elements.length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvar i, len;\r\n\t\t\tvar x = 0;\r\n\t\t\tvar y = 0;\r\n\t\t\tvar count = 0;\r\n\r\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\r\n\t\t\t\tvar el = elements[i];\r\n\t\t\t\tif (el && el.hasValue()) {\r\n\t\t\t\t\tvar pos = el.tooltipPosition();\r\n\t\t\t\t\tx += pos.x;\r\n\t\t\t\t\ty += pos.y;\r\n\t\t\t\t\t++count;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tx: Math.round(x / count),\r\n\t\t\t\ty: Math.round(y / count)\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Gets the tooltip position nearest of the item nearest to the event position\r\n\t\t * @function Chart.Tooltip.positioners.nearest\r\n\t\t * @param elements {Chart.Element[]} the tooltip elements\r\n\t\t * @param eventPosition {Point} the position of the event in canvas coordinates\r\n\t\t * @returns {Point} the tooltip position\r\n\t\t */\r\n\t\tnearest: function(elements, eventPosition) {\r\n\t\t\tvar x = eventPosition.x;\r\n\t\t\tvar y = eventPosition.y;\r\n\r\n\t\t\tvar nearestElement;\r\n\t\t\tvar minDistance = Number.POSITIVE_INFINITY;\r\n\t\t\tvar i, len;\r\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\r\n\t\t\t\tvar el = elements[i];\r\n\t\t\t\tif (el && el.hasValue()) {\r\n\t\t\t\t\tvar center = el.getCenterPoint();\r\n\t\t\t\t\tvar d = helpers.distanceBetweenPoints(eventPosition, center);\r\n\r\n\t\t\t\t\tif (d < minDistance) {\r\n\t\t\t\t\t\tminDistance = d;\r\n\t\t\t\t\t\tnearestElement = el;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (nearestElement) {\r\n\t\t\t\tvar tp = nearestElement.tooltipPosition();\r\n\t\t\t\tx = tp.x;\r\n\t\t\t\ty = tp.y;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tx: x,\r\n\t\t\t\ty: y\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n};\r\n\r\n},{}],37:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers,\r\n\t\tglobalOpts = Chart.defaults.global;\r\n\r\n\tglobalOpts.elements.arc = {\r\n\t\tbackgroundColor: globalOpts.defaultColor,\r\n\t\tborderColor: '#fff',\r\n\t\tborderWidth: 2\r\n\t};\r\n\r\n\tChart.elements.Arc = Chart.Element.extend({\r\n\t\tinLabelRange: function(mouseX) {\r\n\t\t\tvar vm = this._view;\r\n\r\n\t\t\tif (vm) {\r\n\t\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tinRange: function(chartX, chartY) {\r\n\t\t\tvar vm = this._view;\r\n\r\n\t\t\tif (vm) {\r\n\t\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(vm, {\r\n\t\t\t\t\t\tx: chartX,\r\n\t\t\t\t\t\ty: chartY\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tangle = pointRelativePosition.angle,\r\n\t\t\t\t\tdistance = pointRelativePosition.distance;\r\n\r\n\t\t\t\t// Sanitise angle range\r\n\t\t\t\tvar startAngle = vm.startAngle;\r\n\t\t\t\tvar endAngle = vm.endAngle;\r\n\t\t\t\twhile (endAngle < startAngle) {\r\n\t\t\t\t\tendAngle += 2.0 * Math.PI;\r\n\t\t\t\t}\r\n\t\t\t\twhile (angle > endAngle) {\r\n\t\t\t\t\tangle -= 2.0 * Math.PI;\r\n\t\t\t\t}\r\n\t\t\t\twhile (angle < startAngle) {\r\n\t\t\t\t\tangle += 2.0 * Math.PI;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if within the range of the open/close angle\r\n\t\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle),\r\n\t\t\t\t\twithinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\r\n\r\n\t\t\t\treturn (betweenAngles && withinRadius);\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tgetCenterPoint: function() {\r\n\t\t\tvar vm = this._view;\r\n\t\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\r\n\t\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\r\n\t\t\treturn {\r\n\t\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\r\n\t\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\r\n\t\t\t};\r\n\t\t},\r\n\t\tgetArea: function() {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\r\n\t\t},\r\n\t\ttooltipPosition: function() {\r\n\t\t\tvar vm = this._view;\r\n\r\n\t\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2),\r\n\t\t\t\trangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\r\n\t\t\treturn {\r\n\t\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\r\n\t\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\r\n\t\t\t};\r\n\t\t},\r\n\t\tdraw: function() {\r\n\r\n\t\t\tvar ctx = this._chart.ctx,\r\n\t\t\t\tvm = this._view,\r\n\t\t\t\tsA = vm.startAngle,\r\n\t\t\t\teA = vm.endAngle;\r\n\r\n\t\t\tctx.beginPath();\r\n\r\n\t\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\r\n\t\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\r\n\r\n\t\t\tctx.closePath();\r\n\t\t\tctx.strokeStyle = vm.borderColor;\r\n\t\t\tctx.lineWidth = vm.borderWidth;\r\n\r\n\t\t\tctx.fillStyle = vm.backgroundColor;\r\n\r\n\t\t\tctx.fill();\r\n\t\t\tctx.lineJoin = 'bevel';\r\n\r\n\t\t\tif (vm.borderWidth) {\r\n\t\t\t\tctx.stroke();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\n\r\n},{}],38:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\tvar globalDefaults = Chart.defaults.global;\r\n\r\n\tChart.defaults.global.elements.line = {\r\n\t\ttension: 0.4,\r\n\t\tbackgroundColor: globalDefaults.defaultColor,\r\n\t\tborderWidth: 3,\r\n\t\tborderColor: globalDefaults.defaultColor,\r\n\t\tborderCapStyle: 'butt',\r\n\t\tborderDash: [],\r\n\t\tborderDashOffset: 0.0,\r\n\t\tborderJoinStyle: 'miter',\r\n\t\tcapBezierPoints: true,\r\n\t\tfill: true, // do we fill in the area between the line and its base axis\r\n\t};\r\n\r\n\tChart.elements.Line = Chart.Element.extend({\r\n\t\tdraw: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar vm = me._view;\r\n\t\t\tvar spanGaps = vm.spanGaps;\r\n\t\t\tvar fillPoint = vm.scaleZero;\r\n\t\t\tvar loop = me._loop;\r\n\r\n\t\t\t// Handle different fill modes for cartesian lines\r\n\t\t\tif (!loop) {\r\n\t\t\t\tif (vm.fill === 'top') {\r\n\t\t\t\t\tfillPoint = vm.scaleTop;\r\n\t\t\t\t} else if (vm.fill === 'bottom') {\r\n\t\t\t\t\tfillPoint = vm.scaleBottom;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar ctx = me._chart.ctx;\r\n\t\t\tctx.save();\r\n\r\n\t\t\t// Helper function to draw a line to a point\r\n\t\t\tfunction lineToPoint(previousPoint, point) {\r\n\t\t\t\tvar pointVM = point._view;\r\n\t\t\t\tif (point._view.steppedLine === true) {\r\n\t\t\t\t\tctx.lineTo(pointVM.x, previousPoint._view.y);\r\n\t\t\t\t\tctx.lineTo(pointVM.x, pointVM.y);\r\n\t\t\t\t} else if (point._view.tension === 0) {\r\n\t\t\t\t\tctx.lineTo(pointVM.x, pointVM.y);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tctx.bezierCurveTo(\r\n\t\t\t\t\t\tpreviousPoint._view.controlPointNextX,\r\n\t\t\t\t\t\tpreviousPoint._view.controlPointNextY,\r\n\t\t\t\t\t\tpointVM.controlPointPreviousX,\r\n\t\t\t\t\t\tpointVM.controlPointPreviousY,\r\n\t\t\t\t\t\tpointVM.x,\r\n\t\t\t\t\t\tpointVM.y\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar points = me._children.slice(); // clone array\r\n\t\t\tvar lastDrawnIndex = -1;\r\n\r\n\t\t\t// If we are looping, adding the first point again\r\n\t\t\tif (loop && points.length) {\r\n\t\t\t\tpoints.push(points[0]);\r\n\t\t\t}\r\n\r\n\t\t\tvar index, current, previous, currentVM;\r\n\r\n\t\t\t// Fill Line\r\n\t\t\tif (points.length && vm.fill) {\r\n\t\t\t\tctx.beginPath();\r\n\r\n\t\t\t\tfor (index = 0; index < points.length; ++index) {\r\n\t\t\t\t\tcurrent = points[index];\r\n\t\t\t\t\tprevious = helpers.previousItem(points, index);\r\n\t\t\t\t\tcurrentVM = current._view;\r\n\r\n\t\t\t\t\t// First point moves to it's starting position no matter what\r\n\t\t\t\t\tif (index === 0) {\r\n\t\t\t\t\t\tif (loop) {\r\n\t\t\t\t\t\t\tctx.moveTo(fillPoint.x, fillPoint.y);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tctx.moveTo(currentVM.x, fillPoint);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!currentVM.skip) {\r\n\t\t\t\t\t\t\tlastDrawnIndex = index;\r\n\t\t\t\t\t\t\tctx.lineTo(currentVM.x, currentVM.y);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\r\n\r\n\t\t\t\t\t\tif (currentVM.skip) {\r\n\t\t\t\t\t\t\t// Only do this if this is the first point that is skipped\r\n\t\t\t\t\t\t\tif (!spanGaps && lastDrawnIndex === (index - 1)) {\r\n\t\t\t\t\t\t\t\tif (loop) {\r\n\t\t\t\t\t\t\t\t\tctx.lineTo(fillPoint.x, fillPoint.y);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tctx.lineTo(previous._view.x, fillPoint);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (lastDrawnIndex !== (index - 1)) {\r\n\t\t\t\t\t\t\t\t// There was a gap and this is the first point after the gap. If we've never drawn a point, this is a special case.\r\n\t\t\t\t\t\t\t\t// If the first data point is NaN, then there is no real gap to skip\r\n\t\t\t\t\t\t\t\tif (spanGaps && lastDrawnIndex !== -1) {\r\n\t\t\t\t\t\t\t\t\t// We are spanning the gap, so simple draw a line to this point\r\n\t\t\t\t\t\t\t\t\tlineToPoint(previous, current);\r\n\t\t\t\t\t\t\t\t} else if (loop) {\r\n\t\t\t\t\t\t\t\t\tctx.lineTo(currentVM.x, currentVM.y);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tctx.lineTo(currentVM.x, fillPoint);\r\n\t\t\t\t\t\t\t\t\tctx.lineTo(currentVM.x, currentVM.y);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// Line to next point\r\n\t\t\t\t\t\t\t\tlineToPoint(previous, current);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlastDrawnIndex = index;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!loop && lastDrawnIndex !== -1) {\r\n\t\t\t\t\tctx.lineTo(points[lastDrawnIndex]._view.x, fillPoint);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tctx.fillStyle = vm.backgroundColor || globalDefaults.defaultColor;\r\n\t\t\t\tctx.closePath();\r\n\t\t\t\tctx.fill();\r\n\t\t\t}\r\n\r\n\t\t\t// Stroke Line Options\r\n\t\t\tvar globalOptionLineElements = globalDefaults.elements.line;\r\n\t\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\r\n\r\n\t\t\t// IE 9 and 10 do not support line dash\r\n\t\t\tif (ctx.setLineDash) {\r\n\t\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\r\n\t\t\t}\r\n\r\n\t\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\r\n\t\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\r\n\t\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\r\n\t\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\r\n\r\n\t\t\t// Stroke Line\r\n\t\t\tctx.beginPath();\r\n\t\t\tlastDrawnIndex = -1;\r\n\r\n\t\t\tfor (index = 0; index < points.length; ++index) {\r\n\t\t\t\tcurrent = points[index];\r\n\t\t\t\tprevious = helpers.previousItem(points, index);\r\n\t\t\t\tcurrentVM = current._view;\r\n\r\n\t\t\t\t// First point moves to it's starting position no matter what\r\n\t\t\t\tif (index === 0) {\r\n\t\t\t\t\tif (!currentVM.skip) {\r\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\r\n\t\t\t\t\t\tlastDrawnIndex = index;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\r\n\r\n\t\t\t\t\tif (!currentVM.skip) {\r\n\t\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\r\n\t\t\t\t\t\t\t// There was a gap and this is the first point after the gap\r\n\t\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Line to next point\r\n\t\t\t\t\t\t\tlineToPoint(previous, current);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlastDrawnIndex = index;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tctx.stroke();\r\n\t\t\tctx.restore();\r\n\t\t}\r\n\t});\r\n};\r\n\r\n},{}],39:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers,\r\n\t\tglobalOpts = Chart.defaults.global,\r\n\t\tdefaultColor = globalOpts.defaultColor;\r\n\r\n\tglobalOpts.elements.point = {\r\n\t\tradius: 3,\r\n\t\tpointStyle: 'circle',\r\n\t\tbackgroundColor: defaultColor,\r\n\t\tborderWidth: 1,\r\n\t\tborderColor: defaultColor,\r\n\t\t// Hover\r\n\t\thitRadius: 1,\r\n\t\thoverRadius: 4,\r\n\t\thoverBorderWidth: 1\r\n\t};\r\n\r\n\tfunction xRange(mouseX) {\r\n\t\tvar vm = this._view;\r\n\t\treturn vm ? (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hitRadius, 2)) : false;\r\n\t}\r\n\r\n\tfunction yRange(mouseY) {\r\n\t\tvar vm = this._view;\r\n\t\treturn vm ? (Math.pow(mouseY - vm.y, 2) < Math.pow(vm.radius + vm.hitRadius, 2)) : false;\r\n\t}\r\n\r\n\tChart.elements.Point = Chart.Element.extend({\r\n\t\tinRange: function(mouseX, mouseY) {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\r\n\t\t},\r\n\r\n\t\tinLabelRange: xRange,\r\n\t\tinXRange: xRange,\r\n\t\tinYRange: yRange,\r\n\r\n\t\tgetCenterPoint: function() {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn {\r\n\t\t\t\tx: vm.x,\r\n\t\t\t\ty: vm.y\r\n\t\t\t};\r\n\t\t},\r\n\t\tgetArea: function() {\r\n\t\t\treturn Math.PI * Math.pow(this._view.radius, 2);\r\n\t\t},\r\n\t\ttooltipPosition: function() {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn {\r\n\t\t\t\tx: vm.x,\r\n\t\t\t\ty: vm.y,\r\n\t\t\t\tpadding: vm.radius + vm.borderWidth\r\n\t\t\t};\r\n\t\t},\r\n\t\tdraw: function(chartArea) {\r\n\t\t\tvar vm = this._view;\r\n\t\t\tvar model = this._model;\r\n\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\tvar pointStyle = vm.pointStyle;\r\n\t\t\tvar radius = vm.radius;\r\n\t\t\tvar x = vm.x;\r\n\t\t\tvar y = vm.y;\r\n\t\t\tvar color = Chart.helpers.color;\r\n\t\t\tvar errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\r\n\t\t\tvar ratio = 0;\r\n\r\n\t\t\tif (vm.skip) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tctx.strokeStyle = vm.borderColor || defaultColor;\r\n\t\t\tctx.lineWidth = helpers.getValueOrDefault(vm.borderWidth, globalOpts.elements.point.borderWidth);\r\n\t\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\r\n\r\n\t\t\t// Cliping for Points.\r\n\t\t\t// going out from inner charArea?\r\n\t\t\tif ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right*errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom*errMargin < model.y))) {\r\n\t\t\t\t// Point fade out\r\n\t\t\t\tif (model.x < chartArea.left) {\r\n\t\t\t\t\tratio = (x - model.x) / (chartArea.left - model.x);\r\n\t\t\t\t} else if (chartArea.right*errMargin < model.x) {\r\n\t\t\t\t\tratio = (model.x - x) / (model.x - chartArea.right);\r\n\t\t\t\t} else if (model.y < chartArea.top) {\r\n\t\t\t\t\tratio = (y - model.y) / (chartArea.top - model.y);\r\n\t\t\t\t} else if (chartArea.bottom*errMargin < model.y) {\r\n\t\t\t\t\tratio = (model.y - y) / (model.y - chartArea.bottom);\r\n\t\t\t\t}\r\n\t\t\t\tratio = Math.round(ratio*100) / 100;\r\n\t\t\t\tctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\r\n\t\t\t\tctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\r\n\t\t\t}\r\n\r\n\t\t\tChart.canvasHelpers.drawPoint(ctx, pointStyle, radius, x, y);\r\n\t\t}\r\n\t});\r\n};\r\n\r\n},{}],40:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar globalOpts = Chart.defaults.global;\r\n\r\n\tglobalOpts.elements.rectangle = {\r\n\t\tbackgroundColor: globalOpts.defaultColor,\r\n\t\tborderWidth: 0,\r\n\t\tborderColor: globalOpts.defaultColor,\r\n\t\tborderSkipped: 'bottom'\r\n\t};\r\n\r\n\tfunction isVertical(bar) {\r\n\t\treturn bar._view.width !== undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to get the bounds of the bar regardless of the orientation\r\n\t * @private\r\n\t * @param bar {Chart.Element.Rectangle} the bar\r\n\t * @return {Bounds} bounds of the bar\r\n\t */\r\n\tfunction getBarBounds(bar) {\r\n\t\tvar vm = bar._view;\r\n\t\tvar x1, x2, y1, y2;\r\n\r\n\t\tif (isVertical(bar)) {\r\n\t\t\t// vertical\r\n\t\t\tvar halfWidth = vm.width / 2;\r\n\t\t\tx1 = vm.x - halfWidth;\r\n\t\t\tx2 = vm.x + halfWidth;\r\n\t\t\ty1 = Math.min(vm.y, vm.base);\r\n\t\t\ty2 = Math.max(vm.y, vm.base);\r\n\t\t} else {\r\n\t\t\t// horizontal bar\r\n\t\t\tvar halfHeight = vm.height / 2;\r\n\t\t\tx1 = Math.min(vm.x, vm.base);\r\n\t\t\tx2 = Math.max(vm.x, vm.base);\r\n\t\t\ty1 = vm.y - halfHeight;\r\n\t\t\ty2 = vm.y + halfHeight;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tleft: x1,\r\n\t\t\ttop: y1,\r\n\t\t\tright: x2,\r\n\t\t\tbottom: y2\r\n\t\t};\r\n\t}\r\n\r\n\tChart.elements.Rectangle = Chart.Element.extend({\r\n\t\tdraw: function() {\r\n\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\tvar vm = this._view;\r\n\t\t\tvar left, right, top, bottom, signX, signY, borderSkipped;\r\n\t\t\tvar borderWidth = vm.borderWidth;\r\n\r\n\t\t\tif (!vm.horizontal) {\r\n\t\t\t\t// bar\r\n\t\t\t\tleft = vm.x - vm.width / 2;\r\n\t\t\t\tright = vm.x + vm.width / 2;\r\n\t\t\t\ttop = vm.y;\r\n\t\t\t\tbottom = vm.base;\r\n\t\t\t\tsignX = 1;\r\n\t\t\t\tsignY = bottom > top? 1: -1;\r\n\t\t\t\tborderSkipped = vm.borderSkipped || 'bottom';\r\n\t\t\t} else {\r\n\t\t\t\t// horizontal bar\r\n\t\t\t\tleft = vm.base;\r\n\t\t\t\tright = vm.x;\r\n\t\t\t\ttop = vm.y - vm.height / 2;\r\n\t\t\t\tbottom = vm.y + vm.height / 2;\r\n\t\t\t\tsignX = right > left? 1: -1;\r\n\t\t\t\tsignY = 1;\r\n\t\t\t\tborderSkipped = vm.borderSkipped || 'left';\r\n\t\t\t}\r\n\r\n\t\t\t// Canvas doesn't allow us to stroke inside the width so we can\r\n\t\t\t// adjust the sizes to fit if we're setting a stroke on the line\r\n\t\t\tif (borderWidth) {\r\n\t\t\t\t// borderWidth shold be less than bar width and bar height.\r\n\t\t\t\tvar barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n\t\t\t\tborderWidth = borderWidth > barSize? barSize: borderWidth;\r\n\t\t\t\tvar halfStroke = borderWidth / 2;\r\n\t\t\t\t// Adjust borderWidth when bar top position is near vm.base(zero).\r\n\t\t\t\tvar borderLeft = left + (borderSkipped !== 'left'? halfStroke * signX: 0);\r\n\t\t\t\tvar borderRight = right + (borderSkipped !== 'right'? -halfStroke * signX: 0);\r\n\t\t\t\tvar borderTop = top + (borderSkipped !== 'top'? halfStroke * signY: 0);\r\n\t\t\t\tvar borderBottom = bottom + (borderSkipped !== 'bottom'? -halfStroke * signY: 0);\r\n\t\t\t\t// not become a vertical line?\r\n\t\t\t\tif (borderLeft !== borderRight) {\r\n\t\t\t\t\ttop = borderTop;\r\n\t\t\t\t\tbottom = borderBottom;\r\n\t\t\t\t}\r\n\t\t\t\t// not become a horizontal line?\r\n\t\t\t\tif (borderTop !== borderBottom) {\r\n\t\t\t\t\tleft = borderLeft;\r\n\t\t\t\t\tright = borderRight;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.fillStyle = vm.backgroundColor;\r\n\t\t\tctx.strokeStyle = vm.borderColor;\r\n\t\t\tctx.lineWidth = borderWidth;\r\n\r\n\t\t\t// Corner points, from bottom-left to bottom-right clockwise\r\n\t\t\t// | 1 2 |\r\n\t\t\t// | 0 3 |\r\n\t\t\tvar corners = [\r\n\t\t\t\t[left, bottom],\r\n\t\t\t\t[left, top],\r\n\t\t\t\t[right, top],\r\n\t\t\t\t[right, bottom]\r\n\t\t\t];\r\n\r\n\t\t\t// Find first (starting) corner with fallback to 'bottom'\r\n\t\t\tvar borders = ['bottom', 'left', 'top', 'right'];\r\n\t\t\tvar startCorner = borders.indexOf(borderSkipped, 0);\r\n\t\t\tif (startCorner === -1) {\r\n\t\t\t\tstartCorner = 0;\r\n\t\t\t}\r\n\r\n\t\t\tfunction cornerAt(index) {\r\n\t\t\t\treturn corners[(startCorner + index) % 4];\r\n\t\t\t}\r\n\r\n\t\t\t// Draw rectangle from 'startCorner'\r\n\t\t\tvar corner = cornerAt(0);\r\n\t\t\tctx.moveTo(corner[0], corner[1]);\r\n\r\n\t\t\tfor (var i = 1; i < 4; i++) {\r\n\t\t\t\tcorner = cornerAt(i);\r\n\t\t\t\tctx.lineTo(corner[0], corner[1]);\r\n\t\t\t}\r\n\r\n\t\t\tctx.fill();\r\n\t\t\tif (borderWidth) {\r\n\t\t\t\tctx.stroke();\r\n\t\t\t}\r\n\t\t},\r\n\t\theight: function() {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn vm.base - vm.y;\r\n\t\t},\r\n\t\tinRange: function(mouseX, mouseY) {\r\n\t\t\tvar inRange = false;\r\n\r\n\t\t\tif (this._view) {\r\n\t\t\t\tvar bounds = getBarBounds(this);\r\n\t\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n\t\t\t}\r\n\r\n\t\t\treturn inRange;\r\n\t\t},\r\n\t\tinLabelRange: function(mouseX, mouseY) {\r\n\t\t\tvar me = this;\r\n\t\t\tif (!me._view) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvar inRange = false;\r\n\t\t\tvar bounds = getBarBounds(me);\r\n\r\n\t\t\tif (isVertical(me)) {\r\n\t\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right;\r\n\t\t\t} else {\r\n\t\t\t\tinRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n\t\t\t}\r\n\r\n\t\t\treturn inRange;\r\n\t\t},\r\n\t\tinXRange: function(mouseX) {\r\n\t\t\tvar bounds = getBarBounds(this);\r\n\t\t\treturn mouseX >= bounds.left && mouseX <= bounds.right;\r\n\t\t},\r\n\t\tinYRange: function(mouseY) {\r\n\t\t\tvar bounds = getBarBounds(this);\r\n\t\t\treturn mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n\t\t},\r\n\t\tgetCenterPoint: function() {\r\n\t\t\tvar vm = this._view;\r\n\t\t\tvar x, y;\r\n\t\t\tif (isVertical(this)) {\r\n\t\t\t\tx = vm.x;\r\n\t\t\t\ty = (vm.y + vm.base) / 2;\r\n\t\t\t} else {\r\n\t\t\t\tx = (vm.x + vm.base) / 2;\r\n\t\t\t\ty = vm.y;\r\n\t\t\t}\r\n\r\n\t\t\treturn {x: x, y: y};\r\n\t\t},\r\n\t\tgetArea: function() {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn vm.width * Math.abs(vm.y - vm.base);\r\n\t\t},\r\n\t\ttooltipPosition: function() {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn {\r\n\t\t\t\tx: vm.x,\r\n\t\t\t\ty: vm.y\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\n\r\n};\r\n\r\n},{}],41:[function(require,module,exports){\r\n'use strict';\r\n\r\n// Chart.Platform implementation for targeting a web browser\r\nmodule.exports = function(Chart) {\r\n\tvar helpers = Chart.helpers;\r\n\r\n\t// DOM event types -> Chart.js event types.\r\n\t// Note: only events with different types are mapped.\r\n\t// https://developer.mozilla.org/en-US/docs/Web/Events\r\n\tvar eventTypeMap = {\r\n\t\t// Touch events\r\n\t\ttouchstart: 'mousedown',\r\n\t\ttouchmove: 'mousemove',\r\n\t\ttouchend: 'mouseup',\r\n\r\n\t\t// Pointer events\r\n\t\tpointerenter: 'mouseenter',\r\n\t\tpointerdown: 'mousedown',\r\n\t\tpointermove: 'mousemove',\r\n\t\tpointerup: 'mouseup',\r\n\t\tpointerleave: 'mouseout',\r\n\t\tpointerout: 'mouseout'\r\n\t};\r\n\r\n\t/**\r\n\t * The \"used\" size is the final value of a dimension property after all calculations have\r\n\t * been performed. This method uses the computed style of `element` but returns undefined\r\n\t * if the computed style is not expressed in pixels. That can happen in some cases where\r\n\t * `element` has a size relative to its parent and this last one is not yet displayed,\r\n\t * for example because of `display: none` on a parent node.\r\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\r\n\t * @returns {Number} Size in pixels or undefined if unknown.\r\n\t */\r\n\tfunction readUsedSize(element, property) {\r\n\t\tvar value = helpers.getStyle(element, property);\r\n\t\tvar matches = value && value.match(/(\\d+)px/);\r\n\t\treturn matches? Number(matches[1]) : undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes the canvas style and render size without modifying the canvas display size,\r\n\t * since responsiveness is handled by the controller.resize() method. The config is used\r\n\t * to determine the aspect ratio to apply in case no explicit height has been specified.\r\n\t */\r\n\tfunction initCanvas(canvas, config) {\r\n\t\tvar style = canvas.style;\r\n\r\n\t\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\r\n\t\t// returns null or '' if no explicit value has been set to the canvas attribute.\r\n\t\tvar renderHeight = canvas.getAttribute('height');\r\n\t\tvar renderWidth = canvas.getAttribute('width');\r\n\r\n\t\t// Chart.js modifies some canvas values that we want to restore on destroy\r\n\t\tcanvas._chartjs = {\r\n\t\t\tinitial: {\r\n\t\t\t\theight: renderHeight,\r\n\t\t\t\twidth: renderWidth,\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tdisplay: style.display,\r\n\t\t\t\t\theight: style.height,\r\n\t\t\t\t\twidth: style.width\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Force canvas to display as block to avoid extra space caused by inline\r\n\t\t// elements, which would interfere with the responsive resize process.\r\n\t\t// https://github.com/chartjs/Chart.js/issues/2538\r\n\t\tstyle.display = style.display || 'block';\r\n\r\n\t\tif (renderWidth === null || renderWidth === '') {\r\n\t\t\tvar displayWidth = readUsedSize(canvas, 'width');\r\n\t\t\tif (displayWidth !== undefined) {\r\n\t\t\t\tcanvas.width = displayWidth;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (renderHeight === null || renderHeight === '') {\r\n\t\t\tif (canvas.style.height === '') {\r\n\t\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\r\n\t\t\t\t// which one can be specified by the user but also by charts as default option\r\n\t\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\r\n\t\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\r\n\t\t\t} else {\r\n\t\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\r\n\t\t\t\tif (displayWidth !== undefined) {\r\n\t\t\t\t\tcanvas.height = displayHeight;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn canvas;\r\n\t}\r\n\r\n\tfunction createEvent(type, chart, x, y, native) {\r\n\t\treturn {\r\n\t\t\ttype: type,\r\n\t\t\tchart: chart,\r\n\t\t\tnative: native || null,\r\n\t\t\tx: x !== undefined? x : null,\r\n\t\t\ty: y !== undefined? y : null,\r\n\t\t};\r\n\t}\r\n\r\n\tfunction fromNativeEvent(event, chart) {\r\n\t\tvar type = eventTypeMap[event.type] || event.type;\r\n\t\tvar pos = helpers.getRelativePosition(event, chart);\r\n\t\treturn createEvent(type, chart, pos.x, pos.y, event);\r\n\t}\r\n\r\n\tfunction createResizer(handler) {\r\n\t\tvar iframe = document.createElement('iframe');\r\n\t\tiframe.className = 'chartjs-hidden-iframe';\r\n\t\tiframe.style.cssText =\r\n\t\t\t'display:block;'+\r\n\t\t\t'overflow:hidden;'+\r\n\t\t\t'border:0;'+\r\n\t\t\t'margin:0;'+\r\n\t\t\t'top:0;'+\r\n\t\t\t'left:0;'+\r\n\t\t\t'bottom:0;'+\r\n\t\t\t'right:0;'+\r\n\t\t\t'height:100%;'+\r\n\t\t\t'width:100%;'+\r\n\t\t\t'position:absolute;'+\r\n\t\t\t'pointer-events:none;'+\r\n\t\t\t'z-index:-1;';\r\n\r\n\t\t// Prevent the iframe to gain focus on tab.\r\n\t\t// https://github.com/chartjs/Chart.js/issues/3090\r\n\t\tiframe.tabIndex = -1;\r\n\r\n\t\t// If the iframe is re-attached to the DOM, the resize listener is removed because the\r\n\t\t// content is reloaded, so make sure to install the handler after the iframe is loaded.\r\n\t\t// https://github.com/chartjs/Chart.js/issues/3521\r\n\t\thelpers.addEvent(iframe, 'load', function() {\r\n\t\t\thelpers.addEvent(iframe.contentWindow || iframe, 'resize', handler);\r\n\r\n\t\t\t// The iframe size might have changed while loading, which can also\r\n\t\t\t// happen if the size has been changed while detached from the DOM.\r\n\t\t\thandler();\r\n\t\t});\r\n\r\n\t\treturn iframe;\r\n\t}\r\n\r\n\tfunction addResizeListener(node, listener, chart) {\r\n\t\tvar stub = node._chartjs = {\r\n\t\t\tticking: false\r\n\t\t};\r\n\r\n\t\t// Throttle the callback notification until the next animation frame.\r\n\t\tvar notify = function() {\r\n\t\t\tif (!stub.ticking) {\r\n\t\t\t\tstub.ticking = true;\r\n\t\t\t\thelpers.requestAnimFrame.call(window, function() {\r\n\t\t\t\t\tif (stub.resizer) {\r\n\t\t\t\t\t\tstub.ticking = false;\r\n\t\t\t\t\t\treturn listener(createEvent('resize', chart));\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Let's keep track of this added iframe and thus avoid DOM query when removing it.\r\n\t\tstub.resizer = createResizer(notify);\r\n\r\n\t\tnode.insertBefore(stub.resizer, node.firstChild);\r\n\t}\r\n\r\n\tfunction removeResizeListener(node) {\r\n\t\tif (!node || !node._chartjs) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar resizer = node._chartjs.resizer;\r\n\t\tif (resizer) {\r\n\t\t\tresizer.parentNode.removeChild(resizer);\r\n\t\t\tnode._chartjs.resizer = null;\r\n\t\t}\r\n\r\n\t\tdelete node._chartjs;\r\n\t}\r\n\r\n\treturn {\r\n\t\tacquireContext: function(item, config) {\r\n\t\t\tif (typeof item === 'string') {\r\n\t\t\t\titem = document.getElementById(item);\r\n\t\t\t} else if (item.length) {\r\n\t\t\t\t// Support for array based queries (such as jQuery)\r\n\t\t\t\titem = item[0];\r\n\t\t\t}\r\n\r\n\t\t\tif (item && item.canvas) {\r\n\t\t\t\t// Support for any object associated to a canvas (including a context2d)\r\n\t\t\t\titem = item.canvas;\r\n\t\t\t}\r\n\r\n\t\t\tif (item instanceof HTMLCanvasElement) {\r\n\t\t\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\r\n\t\t\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\r\n\t\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\r\n\t\t\t\tvar context = item.getContext && item.getContext('2d');\r\n\t\t\t\tif (context instanceof CanvasRenderingContext2D) {\r\n\t\t\t\t\tinitCanvas(item, config);\r\n\t\t\t\t\treturn context;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t},\r\n\r\n\t\treleaseContext: function(context) {\r\n\t\t\tvar canvas = context.canvas;\r\n\t\t\tif (!canvas._chartjs) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar initial = canvas._chartjs.initial;\r\n\t\t\t['height', 'width'].forEach(function(prop) {\r\n\t\t\t\tvar value = initial[prop];\r\n\t\t\t\tif (value === undefined || value === null) {\r\n\t\t\t\t\tcanvas.removeAttribute(prop);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcanvas.setAttribute(prop, value);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(initial.style || {}, function(value, key) {\r\n\t\t\t\tcanvas.style[key] = value;\r\n\t\t\t});\r\n\r\n\t\t\t// The canvas render size might have been changed (and thus the state stack discarded),\r\n\t\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\r\n\t\t\t// least the canvas context is reset to the default state by setting the canvas width.\r\n\t\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\r\n\t\t\tcanvas.width = canvas.width;\r\n\r\n\t\t\tdelete canvas._chartjs;\r\n\t\t},\r\n\r\n\t\taddEventListener: function(chart, type, listener) {\r\n\t\t\tvar canvas = chart.chart.canvas;\r\n\t\t\tif (type === 'resize') {\r\n\t\t\t\t// Note: the resize event is not supported on all browsers.\r\n\t\t\t\taddResizeListener(canvas.parentNode, listener, chart.chart);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar stub = listener._chartjs || (listener._chartjs = {});\r\n\t\t\tvar proxies = stub.proxies || (stub.proxies = {});\r\n\t\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\r\n\t\t\t\tlistener(fromNativeEvent(event, chart.chart));\r\n\t\t\t};\r\n\r\n\t\t\thelpers.addEvent(canvas, type, proxy);\r\n\t\t},\r\n\r\n\t\tremoveEventListener: function(chart, type, listener) {\r\n\t\t\tvar canvas = chart.chart.canvas;\r\n\t\t\tif (type === 'resize') {\r\n\t\t\t\t// Note: the resize event is not supported on all browsers.\r\n\t\t\t\tremoveResizeListener(canvas.parentNode, listener);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar stub = listener._chartjs || {};\r\n\t\t\tvar proxies = stub.proxies || {};\r\n\t\t\tvar proxy = proxies[chart.id + '_' + type];\r\n\t\t\tif (!proxy) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\thelpers.removeEvent(canvas, type, proxy);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n},{}],42:[function(require,module,exports){\r\n'use strict';\r\n\r\n// By default, select the browser (DOM) platform.\r\n// @TODO Make possible to select another platform at build time.\r\nvar implementation = require(41);\r\n\r\nmodule.exports = function(Chart) {\r\n\t/**\r\n\t * @namespace Chart.platform\r\n\t * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\r\n\t * @since 2.4.0\r\n\t */\r\n\tChart.platform = {\r\n\t\t/**\r\n\t\t * Called at chart construction time, returns a context2d instance implementing\r\n\t\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\r\n\t\t * @param {*} item - The native item from which to acquire context (platform specific)\r\n\t\t * @param {Object} options - The chart options\r\n\t\t * @returns {CanvasRenderingContext2D} context2d instance\r\n\t\t */\r\n\t\tacquireContext: function() {},\r\n\r\n\t\t/**\r\n\t\t * Called at chart destruction time, releases any resources associated to the context\r\n\t\t * previously returned by the acquireContext() method.\r\n\t\t * @param {CanvasRenderingContext2D} context - The context2d instance\r\n\t\t * @returns {Boolean} true if the method succeeded, else false\r\n\t\t */\r\n\t\treleaseContext: function() {},\r\n\r\n\t\t/**\r\n\t\t * Registers the specified listener on the given chart.\r\n\t\t * @param {Chart} chart - Chart from which to listen for event\r\n\t\t * @param {String} type - The ({@link IEvent}) type to listen for\r\n\t\t * @param {Function} listener - Receives a notification (an object that implements\r\n\t\t * the {@link IEvent} interface) when an event of the specified type occurs.\r\n\t\t */\r\n\t\taddEventListener: function() {},\r\n\r\n\t\t/**\r\n\t\t * Removes the specified listener previously registered with addEventListener.\r\n\t\t * @param {Chart} chart -Chart from which to remove the listener\r\n\t\t * @param {String} type - The ({@link IEvent}) type to remove\r\n\t\t * @param {Function} listener - The listener function to remove from the event target.\r\n\t\t */\r\n\t\tremoveEventListener: function() {}\r\n\t};\r\n\r\n\t/**\r\n\t * @interface IPlatform\r\n\t * Allows abstracting platform dependencies away from the chart\r\n\t * @borrows Chart.platform.acquireContext as acquireContext\r\n\t * @borrows Chart.platform.releaseContext as releaseContext\r\n\t * @borrows Chart.platform.addEventListener as addEventListener\r\n\t * @borrows Chart.platform.removeEventListener as removeEventListener\r\n\t */\r\n\r\n\t/**\r\n\t * @interface IEvent\r\n\t * @prop {String} type - The event type name, possible values are:\r\n\t * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\r\n\t * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\r\n\t * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\r\n\t * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\r\n\t * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\r\n\t */\r\n\r\n\tChart.helpers.extend(Chart.platform, implementation(Chart));\r\n};\r\n\r\n},{\"41\":41}],43:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\t// Default config for a category scale\r\n\tvar defaultConfig = {\r\n\t\tposition: 'bottom'\r\n\t};\r\n\r\n\tvar DatasetScale = Chart.Scale.extend({\r\n\t\t/**\r\n\t\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\r\n\t\t* else fall back to data.labels\r\n\t\t* @private\r\n\t\t*/\r\n\t\tgetLabels: function() {\r\n\t\t\tvar data = this.chart.data;\r\n\t\t\treturn (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\r\n\t\t},\r\n\t\t// Implement this so that\r\n\t\tdetermineDataLimits: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar labels = me.getLabels();\r\n\t\t\tme.minIndex = 0;\r\n\t\t\tme.maxIndex = labels.length - 1;\r\n\t\t\tvar findIndex;\r\n\r\n\t\t\tif (me.options.ticks.min !== undefined) {\r\n\t\t\t\t// user specified min value\r\n\t\t\t\tfindIndex = helpers.indexOf(labels, me.options.ticks.min);\r\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\r\n\t\t\t}\r\n\r\n\t\t\tif (me.options.ticks.max !== undefined) {\r\n\t\t\t\t// user specified max value\r\n\t\t\t\tfindIndex = helpers.indexOf(labels, me.options.ticks.max);\r\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\r\n\t\t\t}\r\n\r\n\t\t\tme.min = labels[me.minIndex];\r\n\t\t\tme.max = labels[me.maxIndex];\r\n\t\t},\r\n\r\n\t\tbuildTicks: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar labels = me.getLabels();\r\n\t\t\t// If we are viewing some subset of labels, slice the original array\r\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\r\n\t\t},\r\n\r\n\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar data = me.chart.data;\r\n\t\t\tvar isHorizontal = me.isHorizontal();\r\n\r\n\t\t\tif (data.yLabels && !isHorizontal) {\r\n\t\t\t\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\r\n\t\t\t}\r\n\t\t\treturn me.ticks[index - me.minIndex];\r\n\t\t},\r\n\r\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\r\n\t\tgetPixelForValue: function(value, index, datasetIndex, includeOffset) {\r\n\t\t\tvar me = this;\r\n\t\t\t// 1 is added because we need the length but we have the indexes\r\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\r\n\r\n\t\t\tif (value !== undefined && isNaN(index)) {\r\n\t\t\t\tvar labels = me.getLabels();\r\n\t\t\t\tvar idx = labels.indexOf(value);\r\n\t\t\t\tindex = idx !== -1 ? idx : index;\r\n\t\t\t}\r\n\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\tvar valueWidth = me.width / offsetAmt;\r\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\r\n\r\n\t\t\t\tif (me.options.gridLines.offsetGridLines && includeOffset || me.maxIndex === me.minIndex && includeOffset) {\r\n\t\t\t\t\twidthOffset += (valueWidth / 2);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn me.left + Math.round(widthOffset);\r\n\t\t\t}\r\n\t\t\tvar valueHeight = me.height / offsetAmt;\r\n\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\r\n\r\n\t\t\tif (me.options.gridLines.offsetGridLines && includeOffset) {\r\n\t\t\t\theightOffset += (valueHeight / 2);\r\n\t\t\t}\r\n\r\n\t\t\treturn me.top + Math.round(heightOffset);\r\n\t\t},\r\n\t\tgetPixelForTick: function(index, includeOffset) {\r\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null, includeOffset);\r\n\t\t},\r\n\t\tgetValueForPixel: function(pixel) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar value;\r\n\t\t\tvar offsetAmt = Math.max((me.ticks.length - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\r\n\t\t\tvar horz = me.isHorizontal();\r\n\t\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\r\n\r\n\t\t\tpixel -= horz ? me.left : me.top;\r\n\r\n\t\t\tif (me.options.gridLines.offsetGridLines) {\r\n\t\t\t\tpixel -= (valueDimension / 2);\r\n\t\t\t}\r\n\r\n\t\t\tif (pixel <= 0) {\r\n\t\t\t\tvalue = 0;\r\n\t\t\t} else {\r\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\t\t},\r\n\t\tgetBasePixel: function() {\r\n\t\t\treturn this.bottom;\r\n\t\t}\r\n\t});\r\n\r\n\tChart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\r\n\r\n};\r\n\r\n},{}],44:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tvar defaultConfig = {\r\n\t\tposition: 'left',\r\n\t\tticks: {\r\n\t\t\tcallback: Chart.Ticks.formatters.linear\r\n\t\t}\r\n\t};\r\n\r\n\tvar LinearScale = Chart.LinearScaleBase.extend({\r\n\t\tdetermineDataLimits: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar chart = me.chart;\r\n\t\t\tvar data = chart.data;\r\n\t\t\tvar datasets = data.datasets;\r\n\t\t\tvar isHorizontal = me.isHorizontal();\r\n\r\n\t\t\tfunction IDMatches(meta) {\r\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\r\n\t\t\t}\r\n\r\n\t\t\t// First Calculate the range\r\n\t\t\tme.min = null;\r\n\t\t\tme.max = null;\r\n\r\n\t\t\tvar hasStacks = opts.stacked;\r\n\t\t\tif (hasStacks === undefined) {\r\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tif (hasStacks) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\r\n\t\t\t\t\t\tmeta.stack !== undefined) {\r\n\t\t\t\t\t\thasStacks = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (opts.stacked || hasStacks) {\r\n\t\t\t\tvar valuesPerStack = {};\r\n\r\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\tvar key = [\r\n\t\t\t\t\t\tmeta.type,\r\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\r\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\r\n\t\t\t\t\t\tmeta.stack\r\n\t\t\t\t\t].join('.');\r\n\r\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\r\n\t\t\t\t\t\tvaluesPerStack[key] = {\r\n\t\t\t\t\t\t\tpositiveValues: [],\r\n\t\t\t\t\t\t\tnegativeValues: []\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Store these per type\r\n\t\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\r\n\t\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\r\n\r\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\r\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\r\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\r\n\r\n\t\t\t\t\t\t\tif (opts.relativePoints) {\r\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\r\n\t\t\t\t\t\t\t} else if (value < 0) {\r\n\t\t\t\t\t\t\t\tnegativeValues[index] += value;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tpositiveValues[index] += value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\r\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\r\n\t\t\t\t\tvar minVal = helpers.min(values);\r\n\t\t\t\t\tvar maxVal = helpers.max(values);\r\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\r\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\r\n\t\t\t\t});\r\n\r\n\t\t\t} else {\r\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\r\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (me.min === null) {\r\n\t\t\t\t\t\t\t\tme.min = value;\r\n\t\t\t\t\t\t\t} else if (value < me.min) {\r\n\t\t\t\t\t\t\t\tme.min = value;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (me.max === null) {\r\n\t\t\t\t\t\t\t\tme.max = value;\r\n\t\t\t\t\t\t\t} else if (value > me.max) {\r\n\t\t\t\t\t\t\t\tme.max = value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\r\n\t\t\tthis.handleTickRangeOptions();\r\n\t\t},\r\n\t\tgetTickLimit: function() {\r\n\t\t\tvar maxTicks;\r\n\t\t\tvar me = this;\r\n\t\t\tvar tickOpts = me.options.ticks;\r\n\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\r\n\t\t\t} else {\r\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\r\n\t\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, Chart.defaults.global.defaultFontSize);\r\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\r\n\t\t\t}\r\n\r\n\t\t\treturn maxTicks;\r\n\t\t},\r\n\t\t// Called after the ticks are built. We need\r\n\t\thandleDirectionalChanges: function() {\r\n\t\t\tif (!this.isHorizontal()) {\r\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\r\n\t\t\t\tthis.ticks.reverse();\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n\t\t},\r\n\t\t// Utils\r\n\t\tgetPixelForValue: function(value) {\r\n\t\t\t// This must be called after fit has been run so that\r\n\t\t\t// this.left, this.top, this.right, and this.bottom have been defined\r\n\t\t\tvar me = this;\r\n\t\t\tvar start = me.start;\r\n\r\n\t\t\tvar rightValue = +me.getRightValue(value);\r\n\t\t\tvar pixel;\r\n\t\t\tvar range = me.end - start;\r\n\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\r\n\t\t\t\treturn Math.round(pixel);\r\n\t\t\t}\r\n\r\n\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\r\n\t\t\treturn Math.round(pixel);\r\n\t\t},\r\n\t\tgetValueForPixel: function(pixel) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar isHorizontal = me.isHorizontal();\r\n\t\t\tvar innerDimension = isHorizontal ? me.width : me.height;\r\n\t\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\r\n\t\t\treturn me.start + ((me.end - me.start) * offset);\r\n\t\t},\r\n\t\tgetPixelForTick: function(index) {\r\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\r\n\t\t}\r\n\t});\r\n\tChart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\r\n\r\n};\r\n\r\n},{}],45:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers,\r\n\t\tnoop = helpers.noop;\r\n\r\n\tChart.LinearScaleBase = Chart.Scale.extend({\r\n\t\thandleTickRangeOptions: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\r\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\r\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\r\n\t\t\t// axis, they can manually override it\r\n\t\t\tif (tickOpts.beginAtZero) {\r\n\t\t\t\tvar minSign = helpers.sign(me.min);\r\n\t\t\t\tvar maxSign = helpers.sign(me.max);\r\n\r\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\r\n\t\t\t\t\t// move the top up to 0\r\n\t\t\t\t\tme.max = 0;\r\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\r\n\t\t\t\t\t// move the bottom down to 0\r\n\t\t\t\t\tme.min = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (tickOpts.min !== undefined) {\r\n\t\t\t\tme.min = tickOpts.min;\r\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\r\n\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\r\n\t\t\t}\r\n\r\n\t\t\tif (tickOpts.max !== undefined) {\r\n\t\t\t\tme.max = tickOpts.max;\r\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\r\n\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\r\n\t\t\t}\r\n\r\n\t\t\tif (me.min === me.max) {\r\n\t\t\t\tme.max++;\r\n\r\n\t\t\t\tif (!tickOpts.beginAtZero) {\r\n\t\t\t\t\tme.min--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetTickLimit: noop,\r\n\t\thandleDirectionalChanges: noop,\r\n\r\n\t\tbuildTicks: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\r\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\r\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\r\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\r\n\t\t\t// the graph. Make sure we always have at least 2 ticks\r\n\t\t\tvar maxTicks = me.getTickLimit();\r\n\t\t\tmaxTicks = Math.max(2, maxTicks);\r\n\r\n\t\t\tvar numericGeneratorOptions = {\r\n\t\t\t\tmaxTicks: maxTicks,\r\n\t\t\t\tmin: tickOpts.min,\r\n\t\t\t\tmax: tickOpts.max,\r\n\t\t\t\tstepSize: helpers.getValueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\r\n\t\t\t};\r\n\t\t\tvar ticks = me.ticks = Chart.Ticks.generators.linear(numericGeneratorOptions, me);\r\n\r\n\t\t\tme.handleDirectionalChanges();\r\n\r\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\r\n\t\t\t// range of the scale\r\n\t\t\tme.max = helpers.max(ticks);\r\n\t\t\tme.min = helpers.min(ticks);\r\n\r\n\t\t\tif (tickOpts.reverse) {\r\n\t\t\t\tticks.reverse();\r\n\r\n\t\t\t\tme.start = me.max;\r\n\t\t\t\tme.end = me.min;\r\n\t\t\t} else {\r\n\t\t\t\tme.start = me.min;\r\n\t\t\t\tme.end = me.max;\r\n\t\t\t}\r\n\t\t},\r\n\t\tconvertTicksToLabels: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\r\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\r\n\r\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(me);\r\n\t\t}\r\n\t});\r\n};\r\n\r\n},{}],46:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tvar defaultConfig = {\r\n\t\tposition: 'left',\r\n\r\n\t\t// label settings\r\n\t\tticks: {\r\n\t\t\tcallback: Chart.Ticks.formatters.logarithmic\r\n\t\t}\r\n\t};\r\n\r\n\tvar LogarithmicScale = Chart.Scale.extend({\r\n\t\tdetermineDataLimits: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\tvar chart = me.chart;\r\n\t\t\tvar data = chart.data;\r\n\t\t\tvar datasets = data.datasets;\r\n\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\r\n\t\t\tvar isHorizontal = me.isHorizontal();\r\n\t\t\tfunction IDMatches(meta) {\r\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\r\n\t\t\t}\r\n\r\n\t\t\t// Calculate Range\r\n\t\t\tme.min = null;\r\n\t\t\tme.max = null;\r\n\t\t\tme.minNotZero = null;\r\n\r\n\t\t\tvar hasStacks = opts.stacked;\r\n\t\t\tif (hasStacks === undefined) {\r\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tif (hasStacks) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\r\n\t\t\t\t\t\tmeta.stack !== undefined) {\r\n\t\t\t\t\t\thasStacks = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (opts.stacked || hasStacks) {\r\n\t\t\t\tvar valuesPerStack = {};\r\n\r\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\tvar key = [\r\n\t\t\t\t\t\tmeta.type,\r\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\r\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\r\n\t\t\t\t\t\tmeta.stack\r\n\t\t\t\t\t].join('.');\r\n\r\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n\t\t\t\t\t\tif (valuesPerStack[key] === undefined) {\r\n\t\t\t\t\t\t\tvaluesPerStack[key] = [];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\t\tvar values = valuesPerStack[key];\r\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\r\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\r\n\r\n\t\t\t\t\t\t\tif (opts.relativePoints) {\r\n\t\t\t\t\t\t\t\tvalues[index] = 100;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// Don't need to split positive and negative since the log scale can't handle a 0 crossing\r\n\t\t\t\t\t\t\t\tvalues[index] += value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\r\n\t\t\t\t\tvar minVal = helpers.min(valuesForType);\r\n\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\r\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\r\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\r\n\t\t\t\t});\r\n\r\n\t\t\t} else {\r\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\r\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (me.min === null) {\r\n\t\t\t\t\t\t\t\tme.min = value;\r\n\t\t\t\t\t\t\t} else if (value < me.min) {\r\n\t\t\t\t\t\t\t\tme.min = value;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (me.max === null) {\r\n\t\t\t\t\t\t\t\tme.max = value;\r\n\t\t\t\t\t\t\t} else if (value > me.max) {\r\n\t\t\t\t\t\t\t\tme.max = value;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\r\n\t\t\t\t\t\t\t\tme.minNotZero = value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tme.min = getValueOrDefault(tickOpts.min, me.min);\r\n\t\t\tme.max = getValueOrDefault(tickOpts.max, me.max);\r\n\r\n\t\t\tif (me.min === me.max) {\r\n\t\t\t\tif (me.min !== 0 && me.min !== null) {\r\n\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\r\n\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.min = 1;\r\n\t\t\t\t\tme.max = 10;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tbuildTicks: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\r\n\t\t\tvar generationOptions = {\r\n\t\t\t\tmin: tickOpts.min,\r\n\t\t\t\tmax: tickOpts.max\r\n\t\t\t};\r\n\t\t\tvar ticks = me.ticks = Chart.Ticks.generators.logarithmic(generationOptions, me);\r\n\r\n\t\t\tif (!me.isHorizontal()) {\r\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\r\n\t\t\t\tticks.reverse();\r\n\t\t\t}\r\n\r\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\r\n\t\t\t// range of the scale\r\n\t\t\tme.max = helpers.max(ticks);\r\n\t\t\tme.min = helpers.min(ticks);\r\n\r\n\t\t\tif (tickOpts.reverse) {\r\n\t\t\t\tticks.reverse();\r\n\r\n\t\t\t\tme.start = me.max;\r\n\t\t\t\tme.end = me.min;\r\n\t\t\t} else {\r\n\t\t\t\tme.start = me.min;\r\n\t\t\t\tme.end = me.max;\r\n\t\t\t}\r\n\t\t},\r\n\t\tconvertTicksToLabels: function() {\r\n\t\t\tthis.tickValues = this.ticks.slice();\r\n\r\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(this);\r\n\t\t},\r\n\t\t// Get the correct tooltip label\r\n\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n\t\t},\r\n\t\tgetPixelForTick: function(index) {\r\n\t\t\treturn this.getPixelForValue(this.tickValues[index]);\r\n\t\t},\r\n\t\tgetPixelForValue: function(value) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar innerDimension;\r\n\t\t\tvar pixel;\r\n\r\n\t\t\tvar start = me.start;\r\n\t\t\tvar newVal = +me.getRightValue(value);\r\n\t\t\tvar range;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\trange = helpers.log10(me.end) - helpers.log10(start); // todo: if start === 0\r\n\t\t\t\tif (newVal === 0) {\r\n\t\t\t\t\tpixel = me.left;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinnerDimension = me.width;\r\n\t\t\t\t\tpixel = me.left + (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Bottom - top since pixels increase downward on a screen\r\n\t\t\t\tinnerDimension = me.height;\r\n\t\t\t\tif (start === 0 && !tickOpts.reverse) {\r\n\t\t\t\t\trange = helpers.log10(me.end) - helpers.log10(me.minNotZero);\r\n\t\t\t\t\tif (newVal === start) {\r\n\t\t\t\t\t\tpixel = me.bottom;\r\n\t\t\t\t\t} else if (newVal === me.minNotZero) {\r\n\t\t\t\t\t\tpixel = me.bottom - innerDimension * 0.02;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpixel = me.bottom - innerDimension * 0.02 - (innerDimension * 0.98/ range * (helpers.log10(newVal)-helpers.log10(me.minNotZero)));\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (me.end === 0 && tickOpts.reverse) {\r\n\t\t\t\t\trange = helpers.log10(me.start) - helpers.log10(me.minNotZero);\r\n\t\t\t\t\tif (newVal === me.end) {\r\n\t\t\t\t\t\tpixel = me.top;\r\n\t\t\t\t\t} else if (newVal === me.minNotZero) {\r\n\t\t\t\t\t\tpixel = me.top + innerDimension * 0.02;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpixel = me.top + innerDimension * 0.02 + (innerDimension * 0.98/ range * (helpers.log10(newVal)-helpers.log10(me.minNotZero)));\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\trange = helpers.log10(me.end) - helpers.log10(start);\r\n\t\t\t\t\tinnerDimension = me.height;\r\n\t\t\t\t\tpixel = me.bottom - (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn pixel;\r\n\t\t},\r\n\t\tgetValueForPixel: function(pixel) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar range = helpers.log10(me.end) - helpers.log10(me.start);\r\n\t\t\tvar value, innerDimension;\r\n\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\tinnerDimension = me.width;\r\n\t\t\t\tvalue = me.start * Math.pow(10, (pixel - me.left) * range / innerDimension);\r\n\t\t\t} else {  // todo: if start === 0\r\n\t\t\t\tinnerDimension = me.height;\r\n\t\t\t\tvalue = Math.pow(10, (me.bottom - pixel) * range / innerDimension) / me.start;\r\n\t\t\t}\r\n\t\t\treturn value;\r\n\t\t}\r\n\t});\r\n\tChart.scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\r\n\r\n};\r\n\r\n},{}],47:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\tvar globalDefaults = Chart.defaults.global;\r\n\r\n\tvar defaultConfig = {\r\n\t\tdisplay: true,\r\n\r\n\t\t// Boolean - Whether to animate scaling the chart from the centre\r\n\t\tanimate: true,\r\n\t\tlineArc: false,\r\n\t\tposition: 'chartArea',\r\n\r\n\t\tangleLines: {\r\n\t\t\tdisplay: true,\r\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\r\n\t\t\tlineWidth: 1\r\n\t\t},\r\n\r\n\t\t// label settings\r\n\t\tticks: {\r\n\t\t\t// Boolean - Show a backdrop to the scale label\r\n\t\t\tshowLabelBackdrop: true,\r\n\r\n\t\t\t// String - The colour of the label backdrop\r\n\t\t\tbackdropColor: 'rgba(255,255,255,0.75)',\r\n\r\n\t\t\t// Number - The backdrop padding above & below the label in pixels\r\n\t\t\tbackdropPaddingY: 2,\r\n\r\n\t\t\t// Number - The backdrop padding to the side of the label in pixels\r\n\t\t\tbackdropPaddingX: 2,\r\n\r\n\t\t\tcallback: Chart.Ticks.formatters.linear\r\n\t\t},\r\n\r\n\t\tpointLabels: {\r\n\t\t\t// Number - Point label font size in pixels\r\n\t\t\tfontSize: 10,\r\n\r\n\t\t\t// Function - Used to convert point labels\r\n\t\t\tcallback: function(label) {\r\n\t\t\t\treturn label;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tfunction getValueCount(scale) {\r\n\t\treturn !scale.options.lineArc ? scale.chart.data.labels.length : 0;\r\n\t}\r\n\r\n\tfunction getPointLabelFontOptions(scale) {\r\n\t\tvar pointLabelOptions = scale.options.pointLabels;\r\n\t\tvar fontSize = helpers.getValueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\r\n\t\tvar fontStyle = helpers.getValueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\tvar fontFamily = helpers.getValueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\tvar font = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n\r\n\t\treturn {\r\n\t\t\tsize: fontSize,\r\n\t\t\tstyle: fontStyle,\r\n\t\t\tfamily: fontFamily,\r\n\t\t\tfont: font\r\n\t\t};\r\n\t}\r\n\r\n\tfunction measureLabelSize(ctx, fontSize, label) {\r\n\t\tif (helpers.isArray(label)) {\r\n\t\t\treturn {\r\n\t\t\t\tw: helpers.longestText(ctx, ctx.font, label),\r\n\t\t\t\th: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tw: ctx.measureText(label).width,\r\n\t\t\th: fontSize\r\n\t\t};\r\n\t}\r\n\r\n\tfunction determineLimits(angle, pos, size, min, max) {\r\n\t\tif (angle === min || angle === max) {\r\n\t\t\treturn {\r\n\t\t\t\tstart: pos - (size / 2),\r\n\t\t\t\tend: pos + (size / 2)\r\n\t\t\t};\r\n\t\t} else if (angle < min || angle > max) {\r\n\t\t\treturn {\r\n\t\t\t\tstart: pos - size - 5,\r\n\t\t\t\tend: pos\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tstart: pos,\r\n\t\t\tend: pos + size + 5\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to fit a radial linear scale with point labels\r\n\t */\r\n\tfunction fitWithPointLabels(scale) {\r\n\t\t/*\r\n\t\t * Right, this is really confusing and there is a lot of maths going on here\r\n\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\r\n\t\t *\r\n\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\r\n\t\t *\r\n\t\t * Solution:\r\n\t\t *\r\n\t\t * We assume the radius of the polygon is half the size of the canvas at first\r\n\t\t * at each index we check if the text overlaps.\r\n\t\t *\r\n\t\t * Where it does, we store that angle and that index.\r\n\t\t *\r\n\t\t * After finding the largest index and angle we calculate how much we need to remove\r\n\t\t * from the shape radius to move the point inwards by that x.\r\n\t\t *\r\n\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\r\n\t\t * along with labels.\r\n\t\t *\r\n\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\r\n\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\r\n\t\t *\r\n\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\r\n\t\t * and position it in the most space efficient manner\r\n\t\t *\r\n\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\r\n\t\t */\r\n\r\n\t\tvar plFont = getPointLabelFontOptions(scale);\r\n\r\n\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\r\n\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\r\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\r\n\t\tvar furthestLimits = {\r\n\t\t\tl: scale.width,\r\n\t\t\tr: 0,\r\n\t\t\tt: scale.height,\r\n\t\t\tb: 0\r\n\t\t};\r\n\t\tvar furthestAngles = {};\r\n\t\tvar i;\r\n\t\tvar textSize;\r\n\t\tvar pointPosition;\r\n\r\n\t\tscale.ctx.font = plFont.font;\r\n\t\tscale._pointLabelSizes = [];\r\n\r\n\t\tvar valueCount = getValueCount(scale);\r\n\t\tfor (i = 0; i < valueCount; i++) {\r\n\t\t\tpointPosition = scale.getPointPosition(i, largestPossibleRadius);\r\n\t\t\ttextSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\r\n\t\t\tscale._pointLabelSizes[i] = textSize;\r\n\r\n\t\t\t// Add quarter circle to make degree 0 mean top of circle\r\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\r\n\t\t\tvar angle = helpers.toDegrees(angleRadians) % 360;\r\n\t\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\r\n\t\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\r\n\r\n\t\t\tif (hLimits.start < furthestLimits.l) {\r\n\t\t\t\tfurthestLimits.l = hLimits.start;\r\n\t\t\t\tfurthestAngles.l = angleRadians;\r\n\t\t\t}\r\n\r\n\t\t\tif (hLimits.end > furthestLimits.r) {\r\n\t\t\t\tfurthestLimits.r = hLimits.end;\r\n\t\t\t\tfurthestAngles.r = angleRadians;\r\n\t\t\t}\r\n\r\n\t\t\tif (vLimits.start < furthestLimits.t) {\r\n\t\t\t\tfurthestLimits.t = vLimits.start;\r\n\t\t\t\tfurthestAngles.t = angleRadians;\r\n\t\t\t}\r\n\r\n\t\t\tif (vLimits.end > furthestLimits.b) {\r\n\t\t\t\tfurthestLimits.b = vLimits.end;\r\n\t\t\t\tfurthestAngles.b = angleRadians;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tscale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to fit a radial linear scale with no point labels\r\n\t */\r\n\tfunction fit(scale) {\r\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\r\n\t\tscale.drawingArea = Math.round(largestPossibleRadius);\r\n\t\tscale.setCenterPoint(0, 0, 0, 0);\r\n\t}\r\n\r\n\tfunction getTextAlignForAngle(angle) {\r\n\t\tif (angle === 0 || angle === 180) {\r\n\t\t\treturn 'center';\r\n\t\t} else if (angle < 180) {\r\n\t\t\treturn 'left';\r\n\t\t}\r\n\r\n\t\treturn 'right';\r\n\t}\r\n\r\n\tfunction fillText(ctx, text, position, fontSize) {\r\n\t\tif (helpers.isArray(text)) {\r\n\t\t\tvar y = position.y;\r\n\t\t\tvar spacing = 1.5 * fontSize;\r\n\r\n\t\t\tfor (var i = 0; i < text.length; ++i) {\r\n\t\t\t\tctx.fillText(text[i], position.x, y);\r\n\t\t\t\ty+= spacing;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tctx.fillText(text, position.x, position.y);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\r\n\t\tif (angle === 90 || angle === 270) {\r\n\t\t\tposition.y -= (textSize.h / 2);\r\n\t\t} else if (angle > 270 || angle < 90) {\r\n\t\t\tposition.y -= textSize.h;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction drawPointLabels(scale) {\r\n\t\tvar ctx = scale.ctx;\r\n\t\tvar getValueOrDefault = helpers.getValueOrDefault;\r\n\t\tvar opts = scale.options;\r\n\t\tvar angleLineOpts = opts.angleLines;\r\n\t\tvar pointLabelOpts = opts.pointLabels;\r\n\r\n\t\tctx.lineWidth = angleLineOpts.lineWidth;\r\n\t\tctx.strokeStyle = angleLineOpts.color;\r\n\r\n\t\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.reverse ? scale.min : scale.max);\r\n\r\n\t\t// Point Label Font\r\n\t\tvar plFont = getPointLabelFontOptions(scale);\r\n\r\n\t\tctx.textBaseline = 'top';\r\n\r\n\t\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\r\n\t\t\tif (angleLineOpts.display) {\r\n\t\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\r\n\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\r\n\t\t\t\tctx.stroke();\r\n\t\t\t\tctx.closePath();\r\n\t\t\t}\r\n\t\t\t// Extra 3px out for some label spacing\r\n\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);\r\n\r\n\t\t\t// Keep this in loop since we may support array properties here\r\n\t\t\tvar pointLabelFontColor = getValueOrDefault(pointLabelOpts.fontColor, globalDefaults.defaultFontColor);\r\n\t\t\tctx.font = plFont.font;\r\n\t\t\tctx.fillStyle = pointLabelFontColor;\r\n\r\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\r\n\t\t\tvar angle = helpers.toDegrees(angleRadians);\r\n\t\t\tctx.textAlign = getTextAlignForAngle(angle);\r\n\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\r\n\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\r\n\t\tvar ctx = scale.ctx;\r\n\t\tctx.strokeStyle = helpers.getValueAtIndexOrDefault(gridLineOpts.color, index - 1);\r\n\t\tctx.lineWidth = helpers.getValueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\r\n\r\n\t\tif (scale.options.lineArc) {\r\n\t\t\t// Draw circular arcs between the points\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\r\n\t\t\tctx.closePath();\r\n\t\t\tctx.stroke();\r\n\t\t} else {\r\n\t\t\t// Draw straight lines connecting each index\r\n\t\t\tvar valueCount = getValueCount(scale);\r\n\r\n\t\t\tif (valueCount === 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tctx.beginPath();\r\n\t\t\tvar pointPosition = scale.getPointPosition(0, radius);\r\n\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\r\n\r\n\t\t\tfor (var i = 1; i < valueCount; i++) {\r\n\t\t\t\tpointPosition = scale.getPointPosition(i, radius);\r\n\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\r\n\t\t\t}\r\n\r\n\t\t\tctx.closePath();\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction numberOrZero(param) {\r\n\t\treturn helpers.isNumber(param) ? param : 0;\r\n\t}\r\n\r\n\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\r\n\t\tsetDimensions: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\t// Set the unconstrained dimension before label rotation\r\n\t\t\tme.width = me.maxWidth;\r\n\t\t\tme.height = me.maxHeight;\r\n\t\t\tme.xCenter = Math.round(me.width / 2);\r\n\t\t\tme.yCenter = Math.round(me.height / 2);\r\n\r\n\t\t\tvar minSize = helpers.min([me.height, me.width]);\r\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\r\n\t\t},\r\n\t\tdetermineDataLimits: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar chart = me.chart;\r\n\t\t\tvar min = Number.POSITIVE_INFINITY;\r\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\r\n\r\n\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\r\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\r\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmin = Math.min(value, min);\r\n\t\t\t\t\t\tmax = Math.max(value, max);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\r\n\t\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\r\n\r\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\r\n\t\t\tme.handleTickRangeOptions();\r\n\t\t},\r\n\t\tgetTickLimit: function() {\r\n\t\t\tvar tickOpts = this.options.ticks;\r\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\r\n\t\t},\r\n\t\tconvertTicksToLabels: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\r\n\r\n\t\t\t// Point labels\r\n\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\r\n\t\t},\r\n\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n\t\t},\r\n\t\tfit: function() {\r\n\t\t\tif (this.options.lineArc) {\r\n\t\t\t\tfit(this);\r\n\t\t\t} else {\r\n\t\t\t\tfitWithPointLabels(this);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * Set radius reductions and determine new radius and center point\r\n\t\t * @private\r\n\t\t */\r\n\t\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\r\n\t\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\r\n\t\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\r\n\t\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\r\n\r\n\t\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\r\n\t\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\r\n\t\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\r\n\t\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\r\n\r\n\t\t\tme.drawingArea = Math.min(\r\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\r\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\r\n\t\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\r\n\t\t},\r\n\t\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea,\r\n\t\t\t\tmaxLeft = leftMovement + me.drawingArea,\r\n\t\t\t\tmaxTop = topMovement + me.drawingArea,\r\n\t\t\t\tmaxBottom = me.height - bottomMovement - me.drawingArea;\r\n\r\n\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\r\n\t\t\tme.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);\r\n\t\t},\r\n\r\n\t\tgetIndexAngle: function(index) {\r\n\t\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\r\n\t\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\r\n\t\t\t\tthis.chart.options.startAngle :\r\n\t\t\t\t0;\r\n\r\n\t\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\r\n\r\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\r\n\t\t\treturn index * angleMultiplier + startAngleRadians;\r\n\t\t},\r\n\t\tgetDistanceFromCenterForValue: function(value) {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\tif (value === null) {\r\n\t\t\t\treturn 0; // null always in center\r\n\t\t\t}\r\n\r\n\t\t\t// Take into account half font size + the yPadding of the top value\r\n\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\r\n\t\t\tif (me.options.reverse) {\r\n\t\t\t\treturn (me.max - value) * scalingFactor;\r\n\t\t\t}\r\n\t\t\treturn (value - me.min) * scalingFactor;\r\n\t\t},\r\n\t\tgetPointPosition: function(index, distanceFromCenter) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\r\n\t\t\treturn {\r\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\r\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\r\n\t\t\t};\r\n\t\t},\r\n\t\tgetPointPositionForValue: function(index, value) {\r\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\r\n\t\t},\r\n\r\n\t\tgetBasePosition: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar min = me.min;\r\n\t\t\tvar max = me.max;\r\n\r\n\t\t\treturn me.getPointPositionForValue(0,\r\n\t\t\t\tme.beginAtZero? 0:\r\n\t\t\t\tmin < 0 && max < 0? max :\r\n\t\t\t\tmin > 0 && max > 0? min :\r\n\t\t\t\t0);\r\n\t\t},\r\n\r\n\t\tdraw: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar gridLineOpts = opts.gridLines;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\r\n\r\n\t\t\tif (opts.display) {\r\n\t\t\t\tvar ctx = me.ctx;\r\n\r\n\t\t\t\t// Tick Font\r\n\t\t\t\tvar tickFontSize = getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\t\tvar tickFontStyle = getValueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\t\tvar tickFontFamily = getValueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\r\n\r\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\r\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\r\n\t\t\t\t\tif (index > 0 || opts.reverse) {\r\n\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\r\n\t\t\t\t\t\tvar yHeight = me.yCenter - yCenterOffset;\r\n\r\n\t\t\t\t\t\t// Draw circular lines around the scale\r\n\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\r\n\t\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (tickOpts.display) {\r\n\t\t\t\t\t\t\tvar tickFontColor = getValueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\r\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\r\n\r\n\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\r\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\r\n\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\r\n\t\t\t\t\t\t\t\tctx.fillRect(\r\n\t\t\t\t\t\t\t\t\tme.xCenter - labelWidth / 2 - tickOpts.backdropPaddingX,\r\n\t\t\t\t\t\t\t\t\tyHeight - tickFontSize / 2 - tickOpts.backdropPaddingY,\r\n\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\r\n\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tctx.textAlign = 'center';\r\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\r\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\r\n\t\t\t\t\t\t\tctx.fillText(label, me.xCenter, yHeight);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (!opts.lineArc) {\r\n\t\t\t\t\tdrawPointLabels(me);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tChart.scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\r\n\r\n};\r\n\r\n},{}],48:[function(require,module,exports){\r\n/* global window: false */\r\n'use strict';\r\n\r\nvar moment = require(1);\r\nmoment = typeof(moment) === 'function' ? moment : window.moment;\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\tvar time = {\r\n\t\tunits: [{\r\n\t\t\tname: 'millisecond',\r\n\t\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\r\n\t\t}, {\r\n\t\t\tname: 'second',\r\n\t\t\tsteps: [1, 2, 5, 10, 30]\r\n\t\t}, {\r\n\t\t\tname: 'minute',\r\n\t\t\tsteps: [1, 2, 5, 10, 30]\r\n\t\t}, {\r\n\t\t\tname: 'hour',\r\n\t\t\tsteps: [1, 2, 3, 6, 12]\r\n\t\t}, {\r\n\t\t\tname: 'day',\r\n\t\t\tsteps: [1, 2, 5]\r\n\t\t}, {\r\n\t\t\tname: 'week',\r\n\t\t\tmaxStep: 4\r\n\t\t}, {\r\n\t\t\tname: 'month',\r\n\t\t\tmaxStep: 3\r\n\t\t}, {\r\n\t\t\tname: 'quarter',\r\n\t\t\tmaxStep: 4\r\n\t\t}, {\r\n\t\t\tname: 'year',\r\n\t\t\tmaxStep: false\r\n\t\t}]\r\n\t};\r\n\r\n\tvar defaultConfig = {\r\n\t\tposition: 'bottom',\r\n\r\n\t\ttime: {\r\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\r\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\r\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\r\n\t\t\tround: false, // none, or override with week, month, year, etc.\r\n\t\t\tdisplayFormat: false, // DEPRECATED\r\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\r\n\t\t\tminUnit: 'millisecond',\r\n\r\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\r\n\t\t\tdisplayFormats: {\r\n\t\t\t\tmillisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\r\n\t\t\t\tsecond: 'h:mm:ss a', // 11:20:01 AM\r\n\t\t\t\tminute: 'h:mm:ss a', // 11:20:01 AM\r\n\t\t\t\thour: 'MMM D, hA', // Sept 4, 5PM\r\n\t\t\t\tday: 'll', // Sep 4 2015\r\n\t\t\t\tweek: 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\r\n\t\t\t\tmonth: 'MMM YYYY', // Sept 2015\r\n\t\t\t\tquarter: '[Q]Q - YYYY', // Q3\r\n\t\t\t\tyear: 'YYYY' // 2015\r\n\t\t\t}\r\n\t\t},\r\n\t\tticks: {\r\n\t\t\tautoSkip: false\r\n\t\t}\r\n\t};\r\n\r\n\tvar TimeScale = Chart.Scale.extend({\r\n\t\tinitialize: function() {\r\n\t\t\tif (!moment) {\r\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\r\n\t\t\t}\r\n\r\n\t\t\tChart.Scale.prototype.initialize.call(this);\r\n\t\t},\r\n\t\tgetLabelMoment: function(datasetIndex, index) {\r\n\t\t\tif (datasetIndex === null || index === null) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof this.labelMoments[datasetIndex] !== 'undefined') {\r\n\t\t\t\treturn this.labelMoments[datasetIndex][index];\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tgetLabelDiff: function(datasetIndex, index) {\r\n\t\t\tvar me = this;\r\n\t\t\tif (datasetIndex === null || index === null) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tif (me.labelDiffs === undefined) {\r\n\t\t\t\tme.buildLabelDiffs();\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof me.labelDiffs[datasetIndex] !== 'undefined') {\r\n\t\t\t\treturn me.labelDiffs[datasetIndex][index];\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tgetMomentStartOf: function(tick) {\r\n\t\t\tvar me = this;\r\n\t\t\tif (me.options.time.unit === 'week' && me.options.time.isoWeekday !== false) {\r\n\t\t\t\treturn tick.clone().startOf('isoWeek').isoWeekday(me.options.time.isoWeekday);\r\n\t\t\t}\r\n\t\t\treturn tick.clone().startOf(me.tickUnit);\r\n\t\t},\r\n\t\tdetermineDataLimits: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tme.labelMoments = [];\r\n\r\n\t\t\t// Only parse these once. If the dataset does not have data as x,y pairs, we will use\r\n\t\t\t// these\r\n\t\t\tvar scaleLabelMoments = [];\r\n\t\t\tif (me.chart.data.labels && me.chart.data.labels.length > 0) {\r\n\t\t\t\thelpers.each(me.chart.data.labels, function(label) {\r\n\t\t\t\t\tvar labelMoment = me.parseTime(label);\r\n\r\n\t\t\t\t\tif (labelMoment.isValid()) {\r\n\t\t\t\t\t\tif (me.options.time.round) {\r\n\t\t\t\t\t\t\tlabelMoment.startOf(me.options.time.round);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tscaleLabelMoments.push(labelMoment);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, me);\r\n\r\n\t\t\t\tme.firstTick = moment.min.call(me, scaleLabelMoments);\r\n\t\t\t\tme.lastTick = moment.max.call(me, scaleLabelMoments);\r\n\t\t\t} else {\r\n\t\t\t\tme.firstTick = null;\r\n\t\t\t\tme.lastTick = null;\r\n\t\t\t}\r\n\r\n\t\t\thelpers.each(me.chart.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tvar momentsForDataset = [];\r\n\t\t\t\tvar datasetVisible = me.chart.isDatasetVisible(datasetIndex);\r\n\r\n\t\t\t\tif (typeof dataset.data[0] === 'object' && dataset.data[0] !== null) {\r\n\t\t\t\t\thelpers.each(dataset.data, function(value) {\r\n\t\t\t\t\t\tvar labelMoment = me.parseTime(me.getRightValue(value));\r\n\r\n\t\t\t\t\t\tif (labelMoment.isValid()) {\r\n\t\t\t\t\t\t\tif (me.options.time.round) {\r\n\t\t\t\t\t\t\t\tlabelMoment.startOf(me.options.time.round);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tmomentsForDataset.push(labelMoment);\r\n\r\n\t\t\t\t\t\t\tif (datasetVisible) {\r\n\t\t\t\t\t\t\t\t// May have gone outside the scale ranges, make sure we keep the first and last ticks updated\r\n\t\t\t\t\t\t\t\tme.firstTick = me.firstTick !== null ? moment.min(me.firstTick, labelMoment) : labelMoment;\r\n\t\t\t\t\t\t\t\tme.lastTick = me.lastTick !== null ? moment.max(me.lastTick, labelMoment) : labelMoment;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, me);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// We have no labels. Use the ones from the scale\r\n\t\t\t\t\tmomentsForDataset = scaleLabelMoments;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tme.labelMoments.push(momentsForDataset);\r\n\t\t\t}, me);\r\n\r\n\t\t\t// Set these after we've done all the data\r\n\t\t\tif (me.options.time.min) {\r\n\t\t\t\tme.firstTick = me.parseTime(me.options.time.min);\r\n\t\t\t}\r\n\r\n\t\t\tif (me.options.time.max) {\r\n\t\t\t\tme.lastTick = me.parseTime(me.options.time.max);\r\n\t\t\t}\r\n\r\n\t\t\t// We will modify these, so clone for later\r\n\t\t\tme.firstTick = (me.firstTick || moment()).clone();\r\n\t\t\tme.lastTick = (me.lastTick || moment()).clone();\r\n\t\t},\r\n\t\tbuildLabelDiffs: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tme.labelDiffs = [];\r\n\t\t\tvar scaleLabelDiffs = [];\r\n\t\t\t// Parse common labels once\r\n\t\t\tif (me.chart.data.labels && me.chart.data.labels.length > 0) {\r\n\t\t\t\thelpers.each(me.chart.data.labels, function(label) {\r\n\t\t\t\t\tvar labelMoment = me.parseTime(label);\r\n\r\n\t\t\t\t\tif (labelMoment.isValid()) {\r\n\t\t\t\t\t\tif (me.options.time.round) {\r\n\t\t\t\t\t\t\tlabelMoment.startOf(me.options.time.round);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tscaleLabelDiffs.push(labelMoment.diff(me.firstTick, me.tickUnit, true));\r\n\t\t\t\t\t}\r\n\t\t\t\t}, me);\r\n\t\t\t}\r\n\r\n\t\t\thelpers.each(me.chart.data.datasets, function(dataset) {\r\n\t\t\t\tvar diffsForDataset = [];\r\n\r\n\t\t\t\tif (typeof dataset.data[0] === 'object' && dataset.data[0] !== null) {\r\n\t\t\t\t\thelpers.each(dataset.data, function(value) {\r\n\t\t\t\t\t\tvar labelMoment = me.parseTime(me.getRightValue(value));\r\n\r\n\t\t\t\t\t\tif (labelMoment.isValid()) {\r\n\t\t\t\t\t\t\tif (me.options.time.round) {\r\n\t\t\t\t\t\t\t\tlabelMoment.startOf(me.options.time.round);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdiffsForDataset.push(labelMoment.diff(me.firstTick, me.tickUnit, true));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, me);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// We have no labels. Use common ones\r\n\t\t\t\t\tdiffsForDataset = scaleLabelDiffs;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tme.labelDiffs.push(diffsForDataset);\r\n\t\t\t}, me);\r\n\t\t},\r\n\t\tbuildTicks: function() {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\tme.ctx.save();\r\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\r\n\t\t\tvar tickFontStyle = helpers.getValueOrDefault(me.options.ticks.fontStyle, Chart.defaults.global.defaultFontStyle);\r\n\t\t\tvar tickFontFamily = helpers.getValueOrDefault(me.options.ticks.fontFamily, Chart.defaults.global.defaultFontFamily);\r\n\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\r\n\t\t\tme.ctx.font = tickLabelFont;\r\n\r\n\t\t\tme.ticks = [];\r\n\t\t\tme.unitScale = 1; // How much we scale the unit by, ie 2 means 2x unit per step\r\n\t\t\tme.scaleSizeInUnits = 0; // How large the scale is in the base unit (seconds, minutes, etc)\r\n\r\n\t\t\t// Set unit override if applicable\r\n\t\t\tif (me.options.time.unit) {\r\n\t\t\t\tme.tickUnit = me.options.time.unit || 'day';\r\n\t\t\t\tme.displayFormat = me.options.time.displayFormats[me.tickUnit];\r\n\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\r\n\t\t\t\tme.unitScale = helpers.getValueOrDefault(me.options.time.unitStepSize, 1);\r\n\t\t\t} else {\r\n\t\t\t\t// Determine the smallest needed unit of the time\r\n\t\t\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\r\n\r\n\t\t\t\t// Crude approximation of what the label length might be\r\n\t\t\t\tvar tempFirstLabel = me.tickFormatFunction(me.firstTick, 0, []);\r\n\t\t\t\tvar tickLabelWidth = me.ctx.measureText(tempFirstLabel).width;\r\n\t\t\t\tvar cosRotation = Math.cos(helpers.toRadians(me.options.ticks.maxRotation));\r\n\t\t\t\tvar sinRotation = Math.sin(helpers.toRadians(me.options.ticks.maxRotation));\r\n\t\t\t\ttickLabelWidth = (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\r\n\t\t\t\tvar labelCapacity = innerWidth / (tickLabelWidth);\r\n\r\n\t\t\t\t// Start as small as possible\r\n\t\t\t\tme.tickUnit = me.options.time.minUnit;\r\n\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\r\n\t\t\t\tme.displayFormat = me.options.time.displayFormats[me.tickUnit];\r\n\r\n\t\t\t\tvar unitDefinitionIndex = 0;\r\n\t\t\t\tvar unitDefinition = time.units[unitDefinitionIndex];\r\n\r\n\t\t\t\t// While we aren't ideal and we don't have units left\r\n\t\t\t\twhile (unitDefinitionIndex < time.units.length) {\r\n\t\t\t\t\t// Can we scale this unit. If `false` we can scale infinitely\r\n\t\t\t\t\tme.unitScale = 1;\r\n\r\n\t\t\t\t\tif (helpers.isArray(unitDefinition.steps) && Math.ceil(me.scaleSizeInUnits / labelCapacity) < helpers.max(unitDefinition.steps)) {\r\n\t\t\t\t\t\t// Use one of the predefined steps\r\n\t\t\t\t\t\tfor (var idx = 0; idx < unitDefinition.steps.length; ++idx) {\r\n\t\t\t\t\t\t\tif (unitDefinition.steps[idx] >= Math.ceil(me.scaleSizeInUnits / labelCapacity)) {\r\n\t\t\t\t\t\t\t\tme.unitScale = helpers.getValueOrDefault(me.options.time.unitStepSize, unitDefinition.steps[idx]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else if ((unitDefinition.maxStep === false) || (Math.ceil(me.scaleSizeInUnits / labelCapacity) < unitDefinition.maxStep)) {\r\n\t\t\t\t\t\t// We have a max step. Scale this unit\r\n\t\t\t\t\t\tme.unitScale = helpers.getValueOrDefault(me.options.time.unitStepSize, Math.ceil(me.scaleSizeInUnits / labelCapacity));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Move to the next unit up\r\n\t\t\t\t\t\t++unitDefinitionIndex;\r\n\t\t\t\t\t\tunitDefinition = time.units[unitDefinitionIndex];\r\n\r\n\t\t\t\t\t\tme.tickUnit = unitDefinition.name;\r\n\t\t\t\t\t\tvar leadingUnitBuffer = me.firstTick.diff(me.getMomentStartOf(me.firstTick), me.tickUnit, true);\r\n\t\t\t\t\t\tvar trailingUnitBuffer = me.getMomentStartOf(me.lastTick.clone().add(1, me.tickUnit)).diff(me.lastTick, me.tickUnit, true);\r\n\t\t\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true) + leadingUnitBuffer + trailingUnitBuffer;\r\n\t\t\t\t\t\tme.displayFormat = me.options.time.displayFormats[unitDefinition.name];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar roundedStart;\r\n\r\n\t\t\t// Only round the first tick if we have no hard minimum\r\n\t\t\tif (!me.options.time.min) {\r\n\t\t\t\tme.firstTick = me.getMomentStartOf(me.firstTick);\r\n\t\t\t\troundedStart = me.firstTick;\r\n\t\t\t} else {\r\n\t\t\t\troundedStart = me.getMomentStartOf(me.firstTick);\r\n\t\t\t}\r\n\r\n\t\t\t// Only round the last tick if we have no hard maximum\r\n\t\t\tif (!me.options.time.max) {\r\n\t\t\t\tvar roundedEnd = me.getMomentStartOf(me.lastTick);\r\n\t\t\t\tvar delta = roundedEnd.diff(me.lastTick, me.tickUnit, true);\r\n\t\t\t\tif (delta < 0) {\r\n\t\t\t\t\t// Do not use end of because we need me to be in the next time unit\r\n\t\t\t\t\tme.lastTick = me.getMomentStartOf(me.lastTick.add(1, me.tickUnit));\r\n\t\t\t\t} else if (delta >= 0) {\r\n\t\t\t\t\tme.lastTick = roundedEnd;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\r\n\t\t\t}\r\n\r\n\t\t\t// Tick displayFormat override\r\n\t\t\tif (me.options.time.displayFormat) {\r\n\t\t\t\tme.displayFormat = me.options.time.displayFormat;\r\n\t\t\t}\r\n\r\n\t\t\t// first tick. will have been rounded correctly if options.time.min is not specified\r\n\t\t\tme.ticks.push(me.firstTick.clone());\r\n\r\n\t\t\t// For every unit in between the first and last moment, create a moment and add it to the ticks tick\r\n\t\t\tfor (var i = me.unitScale; i <= me.scaleSizeInUnits; i += me.unitScale) {\r\n\t\t\t\tvar newTick = roundedStart.clone().add(i, me.tickUnit);\r\n\r\n\t\t\t\t// Are we greater than the max time\r\n\t\t\t\tif (me.options.time.max && newTick.diff(me.lastTick, me.tickUnit, true) >= 0) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tme.ticks.push(newTick);\r\n\t\t\t}\r\n\r\n\t\t\t// Always show the right tick\r\n\t\t\tvar diff = me.ticks[me.ticks.length - 1].diff(me.lastTick, me.tickUnit);\r\n\t\t\tif (diff !== 0 || me.scaleSizeInUnits === 0) {\r\n\t\t\t\t// this is a weird case. If the <max> option is the same as the end option, we can't just diff the times because the tick was created from the roundedStart\r\n\t\t\t\t// but the last tick was not rounded.\r\n\t\t\t\tif (me.options.time.max) {\r\n\t\t\t\t\tme.ticks.push(me.lastTick.clone());\r\n\t\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.ticks[0], me.tickUnit, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.ticks.push(me.lastTick.clone());\r\n\t\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tme.ctx.restore();\r\n\r\n\t\t\t// Invalidate label diffs cache\r\n\t\t\tme.labelDiffs = undefined;\r\n\t\t},\r\n\t\t// Get tooltip label\r\n\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar label = me.chart.data.labels && index < me.chart.data.labels.length ? me.chart.data.labels[index] : '';\r\n\t\t\tvar value = me.chart.data.datasets[datasetIndex].data[index];\r\n\r\n\t\t\tif (value !== null && typeof value === 'object') {\r\n\t\t\t\tlabel = me.getRightValue(value);\r\n\t\t\t}\r\n\r\n\t\t\t// Format nicely\r\n\t\t\tif (me.options.time.tooltipFormat) {\r\n\t\t\t\tlabel = me.parseTime(label).format(me.options.time.tooltipFormat);\r\n\t\t\t}\r\n\r\n\t\t\treturn label;\r\n\t\t},\r\n\t\t// Function to format an individual tick mark\r\n\t\ttickFormatFunction: function(tick, index, ticks) {\r\n\t\t\tvar formattedTick = tick.format(this.displayFormat);\r\n\t\t\tvar tickOpts = this.options.ticks;\r\n\t\t\tvar callback = helpers.getValueOrDefault(tickOpts.callback, tickOpts.userCallback);\r\n\r\n\t\t\tif (callback) {\r\n\t\t\t\treturn callback(formattedTick, index, ticks);\r\n\t\t\t}\r\n\t\t\treturn formattedTick;\r\n\t\t},\r\n\t\tconvertTicksToLabels: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tme.tickMoments = me.ticks;\r\n\t\t\tme.ticks = me.ticks.map(me.tickFormatFunction, me);\r\n\t\t},\r\n\t\tgetPixelForValue: function(value, index, datasetIndex) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar offset = null;\r\n\t\t\tif (index !== undefined && datasetIndex !== undefined) {\r\n\t\t\t\toffset = me.getLabelDiff(datasetIndex, index);\r\n\t\t\t}\r\n\r\n\t\t\tif (offset === null) {\r\n\t\t\t\tif (!value || !value.isValid) {\r\n\t\t\t\t\t// not already a moment object\r\n\t\t\t\t\tvalue = me.parseTime(me.getRightValue(value));\r\n\t\t\t\t}\r\n\t\t\t\tif (value && value.isValid && value.isValid()) {\r\n\t\t\t\t\toffset = value.diff(me.firstTick, me.tickUnit, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (offset !== null) {\r\n\t\t\t\tvar decimal = offset !== 0 ? offset / me.scaleSizeInUnits : offset;\r\n\r\n\t\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\t\tvar valueOffset = (me.width * decimal);\r\n\t\t\t\t\treturn me.left + Math.round(valueOffset);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar heightOffset = (me.height * decimal);\r\n\t\t\t\treturn me.top + Math.round(heightOffset);\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetPixelForTick: function(index) {\r\n\t\t\treturn this.getPixelForValue(this.tickMoments[index], null, null);\r\n\t\t},\r\n\t\tgetValueForPixel: function(pixel) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar innerDimension = me.isHorizontal() ? me.width : me.height;\r\n\t\t\tvar offset = (pixel - (me.isHorizontal() ? me.left : me.top)) / innerDimension;\r\n\t\t\toffset *= me.scaleSizeInUnits;\r\n\t\t\treturn me.firstTick.clone().add(moment.duration(offset, me.tickUnit).asSeconds(), 'seconds');\r\n\t\t},\r\n\t\tparseTime: function(label) {\r\n\t\t\tvar me = this;\r\n\t\t\tif (typeof me.options.time.parser === 'string') {\r\n\t\t\t\treturn moment(label, me.options.time.parser);\r\n\t\t\t}\r\n\t\t\tif (typeof me.options.time.parser === 'function') {\r\n\t\t\t\treturn me.options.time.parser(label);\r\n\t\t\t}\r\n\t\t\t// Date objects\r\n\t\t\tif (typeof label.getMonth === 'function' || typeof label === 'number') {\r\n\t\t\t\treturn moment(label);\r\n\t\t\t}\r\n\t\t\t// Moment support\r\n\t\t\tif (label.isValid && label.isValid()) {\r\n\t\t\t\treturn label;\r\n\t\t\t}\r\n\t\t\t// Custom parsing (return an instance of moment)\r\n\t\t\tif (typeof me.options.time.format !== 'string' && me.options.time.format.call) {\r\n\t\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser. See http://nnnick.github.io/Chart.js/docs-v2/#scales-time-scale');\r\n\t\t\t\treturn me.options.time.format(label);\r\n\t\t\t}\r\n\t\t\t// Moment format parsing\r\n\t\t\treturn moment(label, me.options.time.format);\r\n\t\t}\r\n\t});\r\n\tChart.scaleService.registerScaleType('time', TimeScale, defaultConfig);\r\n\r\n};\r\n\r\n},{\"1\":1}]},{},[7])(7)\r\n});","/*! Hammer.JS - v2.0.7 - 2016-04-22\r\n * http://hammerjs.github.io/\r\n *\r\n * Copyright (c) 2016 Jorik Tangelder;\r\n * Licensed under the MIT license */\r\n!function(a,b,c,d){\"use strict\";function e(a,b,c){return setTimeout(j(a,c),b)}function f(a,b,c){return Array.isArray(a)?(g(a,c[b],c),!0):!1}function g(a,b,c){var e;if(a)if(a.forEach)a.forEach(b,c);else if(a.length!==d)for(e=0;e<a.length;)b.call(c,a[e],e,a),e++;else for(e in a)a.hasOwnProperty(e)&&b.call(c,a[e],e,a)}function h(b,c,d){var e=\"DEPRECATED METHOD: \"+c+\"\\n\"+d+\" AT \\n\";return function(){var c=new Error(\"get-stack-trace\"),d=c&&c.stack?c.stack.replace(/^[^\\(]+?[\\n$]/gm,\"\").replace(/^\\s+at\\s+/gm,\"\").replace(/^Object.<anonymous>\\s*\\(/gm,\"{anonymous}()@\"):\"Unknown Stack Trace\",f=a.console&&(a.console.warn||a.console.log);return f&&f.call(a.console,e,d),b.apply(this,arguments)}}function i(a,b,c){var d,e=b.prototype;d=a.prototype=Object.create(e),d.constructor=a,d._super=e,c&&la(d,c)}function j(a,b){return function(){return a.apply(b,arguments)}}function k(a,b){return typeof a==oa?a.apply(b?b[0]||d:d,b):a}function l(a,b){return a===d?b:a}function m(a,b,c){g(q(b),function(b){a.addEventListener(b,c,!1)})}function n(a,b,c){g(q(b),function(b){a.removeEventListener(b,c,!1)})}function o(a,b){for(;a;){if(a==b)return!0;a=a.parentNode}return!1}function p(a,b){return a.indexOf(b)>-1}function q(a){return a.trim().split(/\\s+/g)}function r(a,b,c){if(a.indexOf&&!c)return a.indexOf(b);for(var d=0;d<a.length;){if(c&&a[d][c]==b||!c&&a[d]===b)return d;d++}return-1}function s(a){return Array.prototype.slice.call(a,0)}function t(a,b,c){for(var d=[],e=[],f=0;f<a.length;){var g=b?a[f][b]:a[f];r(e,g)<0&&d.push(a[f]),e[f]=g,f++}return c&&(d=b?d.sort(function(a,c){return a[b]>c[b]}):d.sort()),d}function u(a,b){for(var c,e,f=b[0].toUpperCase()+b.slice(1),g=0;g<ma.length;){if(c=ma[g],e=c?c+f:b,e in a)return e;g++}return d}function v(){return ua++}function w(b){var c=b.ownerDocument||b;return c.defaultView||c.parentWindow||a}function x(a,b){var c=this;this.manager=a,this.callback=b,this.element=a.element,this.target=a.options.inputTarget,this.domHandler=function(b){k(a.options.enable,[a])&&c.handler(b)},this.init()}function y(a){var b,c=a.options.inputClass;return new(b=c?c:xa?M:ya?P:wa?R:L)(a,z)}function z(a,b,c){var d=c.pointers.length,e=c.changedPointers.length,f=b&Ea&&d-e===0,g=b&(Ga|Ha)&&d-e===0;c.isFirst=!!f,c.isFinal=!!g,f&&(a.session={}),c.eventType=b,A(a,c),a.emit(\"hammer.input\",c),a.recognize(c),a.session.prevInput=c}function A(a,b){var c=a.session,d=b.pointers,e=d.length;c.firstInput||(c.firstInput=D(b)),e>1&&!c.firstMultiple?c.firstMultiple=D(b):1===e&&(c.firstMultiple=!1);var f=c.firstInput,g=c.firstMultiple,h=g?g.center:f.center,i=b.center=E(d);b.timeStamp=ra(),b.deltaTime=b.timeStamp-f.timeStamp,b.angle=I(h,i),b.distance=H(h,i),B(c,b),b.offsetDirection=G(b.deltaX,b.deltaY);var j=F(b.deltaTime,b.deltaX,b.deltaY);b.overallVelocityX=j.x,b.overallVelocityY=j.y,b.overallVelocity=qa(j.x)>qa(j.y)?j.x:j.y,b.scale=g?K(g.pointers,d):1,b.rotation=g?J(g.pointers,d):0,b.maxPointers=c.prevInput?b.pointers.length>c.prevInput.maxPointers?b.pointers.length:c.prevInput.maxPointers:b.pointers.length,C(c,b);var k=a.element;o(b.srcEvent.target,k)&&(k=b.srcEvent.target),b.target=k}function B(a,b){var c=b.center,d=a.offsetDelta||{},e=a.prevDelta||{},f=a.prevInput||{};b.eventType!==Ea&&f.eventType!==Ga||(e=a.prevDelta={x:f.deltaX||0,y:f.deltaY||0},d=a.offsetDelta={x:c.x,y:c.y}),b.deltaX=e.x+(c.x-d.x),b.deltaY=e.y+(c.y-d.y)}function C(a,b){var c,e,f,g,h=a.lastInterval||b,i=b.timeStamp-h.timeStamp;if(b.eventType!=Ha&&(i>Da||h.velocity===d)){var j=b.deltaX-h.deltaX,k=b.deltaY-h.deltaY,l=F(i,j,k);e=l.x,f=l.y,c=qa(l.x)>qa(l.y)?l.x:l.y,g=G(j,k),a.lastInterval=b}else c=h.velocity,e=h.velocityX,f=h.velocityY,g=h.direction;b.velocity=c,b.velocityX=e,b.velocityY=f,b.direction=g}function D(a){for(var b=[],c=0;c<a.pointers.length;)b[c]={clientX:pa(a.pointers[c].clientX),clientY:pa(a.pointers[c].clientY)},c++;return{timeStamp:ra(),pointers:b,center:E(b),deltaX:a.deltaX,deltaY:a.deltaY}}function E(a){var b=a.length;if(1===b)return{x:pa(a[0].clientX),y:pa(a[0].clientY)};for(var c=0,d=0,e=0;b>e;)c+=a[e].clientX,d+=a[e].clientY,e++;return{x:pa(c/b),y:pa(d/b)}}function F(a,b,c){return{x:b/a||0,y:c/a||0}}function G(a,b){return a===b?Ia:qa(a)>=qa(b)?0>a?Ja:Ka:0>b?La:Ma}function H(a,b,c){c||(c=Qa);var d=b[c[0]]-a[c[0]],e=b[c[1]]-a[c[1]];return Math.sqrt(d*d+e*e)}function I(a,b,c){c||(c=Qa);var d=b[c[0]]-a[c[0]],e=b[c[1]]-a[c[1]];return 180*Math.atan2(e,d)/Math.PI}function J(a,b){return I(b[1],b[0],Ra)+I(a[1],a[0],Ra)}function K(a,b){return H(b[0],b[1],Ra)/H(a[0],a[1],Ra)}function L(){this.evEl=Ta,this.evWin=Ua,this.pressed=!1,x.apply(this,arguments)}function M(){this.evEl=Xa,this.evWin=Ya,x.apply(this,arguments),this.store=this.manager.session.pointerEvents=[]}function N(){this.evTarget=$a,this.evWin=_a,this.started=!1,x.apply(this,arguments)}function O(a,b){var c=s(a.touches),d=s(a.changedTouches);return b&(Ga|Ha)&&(c=t(c.concat(d),\"identifier\",!0)),[c,d]}function P(){this.evTarget=bb,this.targetIds={},x.apply(this,arguments)}function Q(a,b){var c=s(a.touches),d=this.targetIds;if(b&(Ea|Fa)&&1===c.length)return d[c[0].identifier]=!0,[c,c];var e,f,g=s(a.changedTouches),h=[],i=this.target;if(f=c.filter(function(a){return o(a.target,i)}),b===Ea)for(e=0;e<f.length;)d[f[e].identifier]=!0,e++;for(e=0;e<g.length;)d[g[e].identifier]&&h.push(g[e]),b&(Ga|Ha)&&delete d[g[e].identifier],e++;return h.length?[t(f.concat(h),\"identifier\",!0),h]:void 0}function R(){x.apply(this,arguments);var a=j(this.handler,this);this.touch=new P(this.manager,a),this.mouse=new L(this.manager,a),this.primaryTouch=null,this.lastTouches=[]}function S(a,b){a&Ea?(this.primaryTouch=b.changedPointers[0].identifier,T.call(this,b)):a&(Ga|Ha)&&T.call(this,b)}function T(a){var b=a.changedPointers[0];if(b.identifier===this.primaryTouch){var c={x:b.clientX,y:b.clientY};this.lastTouches.push(c);var d=this.lastTouches,e=function(){var a=d.indexOf(c);a>-1&&d.splice(a,1)};setTimeout(e,cb)}}function U(a){for(var b=a.srcEvent.clientX,c=a.srcEvent.clientY,d=0;d<this.lastTouches.length;d++){var e=this.lastTouches[d],f=Math.abs(b-e.x),g=Math.abs(c-e.y);if(db>=f&&db>=g)return!0}return!1}function V(a,b){this.manager=a,this.set(b)}function W(a){if(p(a,jb))return jb;var b=p(a,kb),c=p(a,lb);return b&&c?jb:b||c?b?kb:lb:p(a,ib)?ib:hb}function X(){if(!fb)return!1;var b={},c=a.CSS&&a.CSS.supports;return[\"auto\",\"manipulation\",\"pan-y\",\"pan-x\",\"pan-x pan-y\",\"none\"].forEach(function(d){b[d]=c?a.CSS.supports(\"touch-action\",d):!0}),b}function Y(a){this.options=la({},this.defaults,a||{}),this.id=v(),this.manager=null,this.options.enable=l(this.options.enable,!0),this.state=nb,this.simultaneous={},this.requireFail=[]}function Z(a){return a&sb?\"cancel\":a&qb?\"end\":a&pb?\"move\":a&ob?\"start\":\"\"}function $(a){return a==Ma?\"down\":a==La?\"up\":a==Ja?\"left\":a==Ka?\"right\":\"\"}function _(a,b){var c=b.manager;return c?c.get(a):a}function aa(){Y.apply(this,arguments)}function ba(){aa.apply(this,arguments),this.pX=null,this.pY=null}function ca(){aa.apply(this,arguments)}function da(){Y.apply(this,arguments),this._timer=null,this._input=null}function ea(){aa.apply(this,arguments)}function fa(){aa.apply(this,arguments)}function ga(){Y.apply(this,arguments),this.pTime=!1,this.pCenter=!1,this._timer=null,this._input=null,this.count=0}function ha(a,b){return b=b||{},b.recognizers=l(b.recognizers,ha.defaults.preset),new ia(a,b)}function ia(a,b){this.options=la({},ha.defaults,b||{}),this.options.inputTarget=this.options.inputTarget||a,this.handlers={},this.session={},this.recognizers=[],this.oldCssProps={},this.element=a,this.input=y(this),this.touchAction=new V(this,this.options.touchAction),ja(this,!0),g(this.options.recognizers,function(a){var b=this.add(new a[0](a[1]));a[2]&&b.recognizeWith(a[2]),a[3]&&b.requireFailure(a[3])},this)}function ja(a,b){var c=a.element;if(c.style){var d;g(a.options.cssProps,function(e,f){d=u(c.style,f),b?(a.oldCssProps[d]=c.style[d],c.style[d]=e):c.style[d]=a.oldCssProps[d]||\"\"}),b||(a.oldCssProps={})}}function ka(a,c){var d=b.createEvent(\"Event\");d.initEvent(a,!0,!0),d.gesture=c,c.target.dispatchEvent(d)}var la,ma=[\"\",\"webkit\",\"Moz\",\"MS\",\"ms\",\"o\"],na=b.createElement(\"div\"),oa=\"function\",pa=Math.round,qa=Math.abs,ra=Date.now;la=\"function\"!=typeof Object.assign?function(a){if(a===d||null===a)throw new TypeError(\"Cannot convert undefined or null to object\");for(var b=Object(a),c=1;c<arguments.length;c++){var e=arguments[c];if(e!==d&&null!==e)for(var f in e)e.hasOwnProperty(f)&&(b[f]=e[f])}return b}:Object.assign;var sa=h(function(a,b,c){for(var e=Object.keys(b),f=0;f<e.length;)(!c||c&&a[e[f]]===d)&&(a[e[f]]=b[e[f]]),f++;return a},\"extend\",\"Use `assign`.\"),ta=h(function(a,b){return sa(a,b,!0)},\"merge\",\"Use `assign`.\"),ua=1,va=/mobile|tablet|ip(ad|hone|od)|android/i,wa=\"ontouchstart\"in a,xa=u(a,\"PointerEvent\")!==d,ya=wa&&va.test(navigator.userAgent),za=\"touch\",Aa=\"pen\",Ba=\"mouse\",Ca=\"kinect\",Da=25,Ea=1,Fa=2,Ga=4,Ha=8,Ia=1,Ja=2,Ka=4,La=8,Ma=16,Na=Ja|Ka,Oa=La|Ma,Pa=Na|Oa,Qa=[\"x\",\"y\"],Ra=[\"clientX\",\"clientY\"];x.prototype={handler:function(){},init:function(){this.evEl&&m(this.element,this.evEl,this.domHandler),this.evTarget&&m(this.target,this.evTarget,this.domHandler),this.evWin&&m(w(this.element),this.evWin,this.domHandler)},destroy:function(){this.evEl&&n(this.element,this.evEl,this.domHandler),this.evTarget&&n(this.target,this.evTarget,this.domHandler),this.evWin&&n(w(this.element),this.evWin,this.domHandler)}};var Sa={mousedown:Ea,mousemove:Fa,mouseup:Ga},Ta=\"mousedown\",Ua=\"mousemove mouseup\";i(L,x,{handler:function(a){var b=Sa[a.type];b&Ea&&0===a.button&&(this.pressed=!0),b&Fa&&1!==a.which&&(b=Ga),this.pressed&&(b&Ga&&(this.pressed=!1),this.callback(this.manager,b,{pointers:[a],changedPointers:[a],pointerType:Ba,srcEvent:a}))}});var Va={pointerdown:Ea,pointermove:Fa,pointerup:Ga,pointercancel:Ha,pointerout:Ha},Wa={2:za,3:Aa,4:Ba,5:Ca},Xa=\"pointerdown\",Ya=\"pointermove pointerup pointercancel\";a.MSPointerEvent&&!a.PointerEvent&&(Xa=\"MSPointerDown\",Ya=\"MSPointerMove MSPointerUp MSPointerCancel\"),i(M,x,{handler:function(a){var b=this.store,c=!1,d=a.type.toLowerCase().replace(\"ms\",\"\"),e=Va[d],f=Wa[a.pointerType]||a.pointerType,g=f==za,h=r(b,a.pointerId,\"pointerId\");e&Ea&&(0===a.button||g)?0>h&&(b.push(a),h=b.length-1):e&(Ga|Ha)&&(c=!0),0>h||(b[h]=a,this.callback(this.manager,e,{pointers:b,changedPointers:[a],pointerType:f,srcEvent:a}),c&&b.splice(h,1))}});var Za={touchstart:Ea,touchmove:Fa,touchend:Ga,touchcancel:Ha},$a=\"touchstart\",_a=\"touchstart touchmove touchend touchcancel\";i(N,x,{handler:function(a){var b=Za[a.type];if(b===Ea&&(this.started=!0),this.started){var c=O.call(this,a,b);b&(Ga|Ha)&&c[0].length-c[1].length===0&&(this.started=!1),this.callback(this.manager,b,{pointers:c[0],changedPointers:c[1],pointerType:za,srcEvent:a})}}});var ab={touchstart:Ea,touchmove:Fa,touchend:Ga,touchcancel:Ha},bb=\"touchstart touchmove touchend touchcancel\";i(P,x,{handler:function(a){var b=ab[a.type],c=Q.call(this,a,b);c&&this.callback(this.manager,b,{pointers:c[0],changedPointers:c[1],pointerType:za,srcEvent:a})}});var cb=2500,db=25;i(R,x,{handler:function(a,b,c){var d=c.pointerType==za,e=c.pointerType==Ba;if(!(e&&c.sourceCapabilities&&c.sourceCapabilities.firesTouchEvents)){if(d)S.call(this,b,c);else if(e&&U.call(this,c))return;this.callback(a,b,c)}},destroy:function(){this.touch.destroy(),this.mouse.destroy()}});var eb=u(na.style,\"touchAction\"),fb=eb!==d,gb=\"compute\",hb=\"auto\",ib=\"manipulation\",jb=\"none\",kb=\"pan-x\",lb=\"pan-y\",mb=X();V.prototype={set:function(a){a==gb&&(a=this.compute()),fb&&this.manager.element.style&&mb[a]&&(this.manager.element.style[eb]=a),this.actions=a.toLowerCase().trim()},update:function(){this.set(this.manager.options.touchAction)},compute:function(){var a=[];return g(this.manager.recognizers,function(b){k(b.options.enable,[b])&&(a=a.concat(b.getTouchAction()))}),W(a.join(\" \"))},preventDefaults:function(a){var b=a.srcEvent,c=a.offsetDirection;if(this.manager.session.prevented)return void b.preventDefault();var d=this.actions,e=p(d,jb)&&!mb[jb],f=p(d,lb)&&!mb[lb],g=p(d,kb)&&!mb[kb];if(e){var h=1===a.pointers.length,i=a.distance<2,j=a.deltaTime<250;if(h&&i&&j)return}return g&&f?void 0:e||f&&c&Na||g&&c&Oa?this.preventSrc(b):void 0},preventSrc:function(a){this.manager.session.prevented=!0,a.preventDefault()}};var nb=1,ob=2,pb=4,qb=8,rb=qb,sb=16,tb=32;Y.prototype={defaults:{},set:function(a){return la(this.options,a),this.manager&&this.manager.touchAction.update(),this},recognizeWith:function(a){if(f(a,\"recognizeWith\",this))return this;var b=this.simultaneous;return a=_(a,this),b[a.id]||(b[a.id]=a,a.recognizeWith(this)),this},dropRecognizeWith:function(a){return f(a,\"dropRecognizeWith\",this)?this:(a=_(a,this),delete this.simultaneous[a.id],this)},requireFailure:function(a){if(f(a,\"requireFailure\",this))return this;var b=this.requireFail;return a=_(a,this),-1===r(b,a)&&(b.push(a),a.requireFailure(this)),this},dropRequireFailure:function(a){if(f(a,\"dropRequireFailure\",this))return this;a=_(a,this);var b=r(this.requireFail,a);return b>-1&&this.requireFail.splice(b,1),this},hasRequireFailures:function(){return this.requireFail.length>0},canRecognizeWith:function(a){return!!this.simultaneous[a.id]},emit:function(a){function b(b){c.manager.emit(b,a)}var c=this,d=this.state;qb>d&&b(c.options.event+Z(d)),b(c.options.event),a.additionalEvent&&b(a.additionalEvent),d>=qb&&b(c.options.event+Z(d))},tryEmit:function(a){return this.canEmit()?this.emit(a):void(this.state=tb)},canEmit:function(){for(var a=0;a<this.requireFail.length;){if(!(this.requireFail[a].state&(tb|nb)))return!1;a++}return!0},recognize:function(a){var b=la({},a);return k(this.options.enable,[this,b])?(this.state&(rb|sb|tb)&&(this.state=nb),this.state=this.process(b),void(this.state&(ob|pb|qb|sb)&&this.tryEmit(b))):(this.reset(),void(this.state=tb))},process:function(a){},getTouchAction:function(){},reset:function(){}},i(aa,Y,{defaults:{pointers:1},attrTest:function(a){var b=this.options.pointers;return 0===b||a.pointers.length===b},process:function(a){var b=this.state,c=a.eventType,d=b&(ob|pb),e=this.attrTest(a);return d&&(c&Ha||!e)?b|sb:d||e?c&Ga?b|qb:b&ob?b|pb:ob:tb}}),i(ba,aa,{defaults:{event:\"pan\",threshold:10,pointers:1,direction:Pa},getTouchAction:function(){var a=this.options.direction,b=[];return a&Na&&b.push(lb),a&Oa&&b.push(kb),b},directionTest:function(a){var b=this.options,c=!0,d=a.distance,e=a.direction,f=a.deltaX,g=a.deltaY;return e&b.direction||(b.direction&Na?(e=0===f?Ia:0>f?Ja:Ka,c=f!=this.pX,d=Math.abs(a.deltaX)):(e=0===g?Ia:0>g?La:Ma,c=g!=this.pY,d=Math.abs(a.deltaY))),a.direction=e,c&&d>b.threshold&&e&b.direction},attrTest:function(a){return aa.prototype.attrTest.call(this,a)&&(this.state&ob||!(this.state&ob)&&this.directionTest(a))},emit:function(a){this.pX=a.deltaX,this.pY=a.deltaY;var b=$(a.direction);b&&(a.additionalEvent=this.options.event+b),this._super.emit.call(this,a)}}),i(ca,aa,{defaults:{event:\"pinch\",threshold:0,pointers:2},getTouchAction:function(){return[jb]},attrTest:function(a){return this._super.attrTest.call(this,a)&&(Math.abs(a.scale-1)>this.options.threshold||this.state&ob)},emit:function(a){if(1!==a.scale){var b=a.scale<1?\"in\":\"out\";a.additionalEvent=this.options.event+b}this._super.emit.call(this,a)}}),i(da,Y,{defaults:{event:\"press\",pointers:1,time:251,threshold:9},getTouchAction:function(){return[hb]},process:function(a){var b=this.options,c=a.pointers.length===b.pointers,d=a.distance<b.threshold,f=a.deltaTime>b.time;if(this._input=a,!d||!c||a.eventType&(Ga|Ha)&&!f)this.reset();else if(a.eventType&Ea)this.reset(),this._timer=e(function(){this.state=rb,this.tryEmit()},b.time,this);else if(a.eventType&Ga)return rb;return tb},reset:function(){clearTimeout(this._timer)},emit:function(a){this.state===rb&&(a&&a.eventType&Ga?this.manager.emit(this.options.event+\"up\",a):(this._input.timeStamp=ra(),this.manager.emit(this.options.event,this._input)))}}),i(ea,aa,{defaults:{event:\"rotate\",threshold:0,pointers:2},getTouchAction:function(){return[jb]},attrTest:function(a){return this._super.attrTest.call(this,a)&&(Math.abs(a.rotation)>this.options.threshold||this.state&ob)}}),i(fa,aa,{defaults:{event:\"swipe\",threshold:10,velocity:.3,direction:Na|Oa,pointers:1},getTouchAction:function(){return ba.prototype.getTouchAction.call(this)},attrTest:function(a){var b,c=this.options.direction;return c&(Na|Oa)?b=a.overallVelocity:c&Na?b=a.overallVelocityX:c&Oa&&(b=a.overallVelocityY),this._super.attrTest.call(this,a)&&c&a.offsetDirection&&a.distance>this.options.threshold&&a.maxPointers==this.options.pointers&&qa(b)>this.options.velocity&&a.eventType&Ga},emit:function(a){var b=$(a.offsetDirection);b&&this.manager.emit(this.options.event+b,a),this.manager.emit(this.options.event,a)}}),i(ga,Y,{defaults:{event:\"tap\",pointers:1,taps:1,interval:300,time:250,threshold:9,posThreshold:10},getTouchAction:function(){return[ib]},process:function(a){var b=this.options,c=a.pointers.length===b.pointers,d=a.distance<b.threshold,f=a.deltaTime<b.time;if(this.reset(),a.eventType&Ea&&0===this.count)return this.failTimeout();if(d&&f&&c){if(a.eventType!=Ga)return this.failTimeout();var g=this.pTime?a.timeStamp-this.pTime<b.interval:!0,h=!this.pCenter||H(this.pCenter,a.center)<b.posThreshold;this.pTime=a.timeStamp,this.pCenter=a.center,h&&g?this.count+=1:this.count=1,this._input=a;var i=this.count%b.taps;if(0===i)return this.hasRequireFailures()?(this._timer=e(function(){this.state=rb,this.tryEmit()},b.interval,this),ob):rb}return tb},failTimeout:function(){return this._timer=e(function(){this.state=tb},this.options.interval,this),tb},reset:function(){clearTimeout(this._timer)},emit:function(){this.state==rb&&(this._input.tapCount=this.count,this.manager.emit(this.options.event,this._input))}}),ha.VERSION=\"2.0.7\",ha.defaults={domEvents:!1,touchAction:gb,enable:!0,inputTarget:null,inputClass:null,preset:[[ea,{enable:!1}],[ca,{enable:!1},[\"rotate\"]],[fa,{direction:Na}],[ba,{direction:Na},[\"swipe\"]],[ga],[ga,{event:\"doubletap\",taps:2},[\"tap\"]],[da]],cssProps:{userSelect:\"none\",touchSelect:\"none\",touchCallout:\"none\",contentZooming:\"none\",userDrag:\"none\",tapHighlightColor:\"rgba(0,0,0,0)\"}};var ub=1,vb=2;ia.prototype={set:function(a){return la(this.options,a),a.touchAction&&this.touchAction.update(),a.inputTarget&&(this.input.destroy(),this.input.target=a.inputTarget,this.input.init()),this},stop:function(a){this.session.stopped=a?vb:ub},recognize:function(a){var b=this.session;if(!b.stopped){this.touchAction.preventDefaults(a);var c,d=this.recognizers,e=b.curRecognizer;(!e||e&&e.state&rb)&&(e=b.curRecognizer=null);for(var f=0;f<d.length;)c=d[f],b.stopped===vb||e&&c!=e&&!c.canRecognizeWith(e)?c.reset():c.recognize(a),!e&&c.state&(ob|pb|qb)&&(e=b.curRecognizer=c),f++}},get:function(a){if(a instanceof Y)return a;for(var b=this.recognizers,c=0;c<b.length;c++)if(b[c].options.event==a)return b[c];return null},add:function(a){if(f(a,\"add\",this))return this;var b=this.get(a.options.event);return b&&this.remove(b),this.recognizers.push(a),a.manager=this,this.touchAction.update(),a},remove:function(a){if(f(a,\"remove\",this))return this;if(a=this.get(a)){var b=this.recognizers,c=r(b,a);-1!==c&&(b.splice(c,1),this.touchAction.update())}return this},on:function(a,b){if(a!==d&&b!==d){var c=this.handlers;return g(q(a),function(a){c[a]=c[a]||[],c[a].push(b)}),this}},off:function(a,b){if(a!==d){var c=this.handlers;return g(q(a),function(a){b?c[a]&&c[a].splice(r(c[a],b),1):delete c[a]}),this}},emit:function(a,b){this.options.domEvents&&ka(a,b);var c=this.handlers[a]&&this.handlers[a].slice();if(c&&c.length){b.type=a,b.preventDefault=function(){b.srcEvent.preventDefault()};for(var d=0;d<c.length;)c[d](b),d++}},destroy:function(){this.element&&ja(this,!1),this.handlers={},this.session={},this.input.destroy(),this.element=null}},la(ha,{INPUT_START:Ea,INPUT_MOVE:Fa,INPUT_END:Ga,INPUT_CANCEL:Ha,STATE_POSSIBLE:nb,STATE_BEGAN:ob,STATE_CHANGED:pb,STATE_ENDED:qb,STATE_RECOGNIZED:rb,STATE_CANCELLED:sb,STATE_FAILED:tb,DIRECTION_NONE:Ia,DIRECTION_LEFT:Ja,DIRECTION_RIGHT:Ka,DIRECTION_UP:La,DIRECTION_DOWN:Ma,DIRECTION_HORIZONTAL:Na,DIRECTION_VERTICAL:Oa,DIRECTION_ALL:Pa,Manager:ia,Input:x,TouchAction:V,TouchInput:P,MouseInput:L,PointerEventInput:M,TouchMouseInput:R,SingleTouchInput:N,Recognizer:Y,AttrRecognizer:aa,Tap:ga,Pan:ba,Swipe:fa,Pinch:ca,Rotate:ea,Press:da,on:m,off:n,each:g,merge:ta,extend:sa,assign:la,inherit:i,bindFn:j,prefixed:u});var wb=\"undefined\"!=typeof a?a:\"undefined\"!=typeof self?self:{};wb.Hammer=ha,\"function\"==typeof define&&define.amd?define(function(){return ha}):\"undefined\"!=typeof module&&module.exports?module.exports=ha:a[c]=ha}(window,document,\"Hammer\");\r\n//# sourceMappingURL=hammer.min.js.map"],"sourceRoot":""}